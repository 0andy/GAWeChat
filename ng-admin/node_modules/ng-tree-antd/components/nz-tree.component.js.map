{"version":3,"file":"nz-tree.component.js","sourceRoot":"","sources":["../../.ng_build/components/nz-tree.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnChanges, SimpleChanges, Input, Output, EventEmitter, ViewChild, ViewEncapsulation, ContentChild, TemplateRef, OnInit } from '@angular/core';\nimport { TreeComponent, TreeModel, TreeNode, TREE_ACTIONS, IActionMapping } from 'angular-tree-component';\nimport { NzTreeOptions } from './nz-tree.options';\n\n@Component({\n  selector: 'nz-tree',\n  template: `\n  <tree-root class=\"ant-tree\" [class.ant-tree-show-line]=\"nzShowLine\" [nodes]=\"nzNodes\" [options]=\"_options\"\n    (toggleExpanded)=\"fireEvent($event)\"\n    (activate)=\"fireEvent($event)\"\n    (deactivate)=\"fireEvent($event)\"\n    (focus)=\"fireEvent($event)\"\n    (blur)=\"fireEvent($event)\"\n    (updateData)=\"fireEvent($event)\"\n    (initialized)=\"fireEvent($event)\"\n    (moveNode)=\"fireEvent($event)\"\n    (copyNode)=\"fireEvent($event)\"\n    (loadNodeChildren)=\"fireEvent($event)\"\n    (changeFilter)=\"fireEvent($event)\"\n    (stateChange)=\"fireEvent($event)\">\n    <ng-template #treeNodeFullTemplate let-node let-index=\"index\" let-templates=\"templates\">\n      <div\n        [class.ant-tree-node]=\"true\"\n        [class.ant-tree-node-expanded]=\"node.isExpanded && node.hasChildren\"\n        [class.ant-tree-node-collapsed]=\"node.isCollapsed && node.hasChildren\"\n        [class.ant-tree-node-leaf]=\"node.isLeaf\"\n        [class.ant-tree-node-active]=\"node.isActive\"\n        [class.ant-tree-node-focused]=\"node.isFocused\">\n        <tree-node-drop-slot *ngIf=\"index === 0\" [dropIndex]=\"node.index\" [node]=\"node.parent\"></tree-node-drop-slot>\n        <span\n          *ngIf=\"node.hasChildren\"\n          [class.ant-tree-switcher_open]=\"node.isExpanded\"\n          [class.ant-tree-switcher_close]=\"node.isCollapsed\"\n          class=\"ant-tree-switcher\"\n          (click)=\"node.mouseAction('expanderClick', $event)\"></span>\n        <span\n          *ngIf=\"!node.hasChildren\"\n          class=\"ant-tree-switcher ant-tree-switcher-noop\">\n        </span>\n        <span *ngIf=\"nzCheckable\"\n          class=\"ant-tree-checkbox\"\n          [class.ant-tree-checkbox-checked]=\"node.data.checked\"\n          [class.ant-tree-checkbox-disabled]=\"node.data.disableCheckbox\"\n          [class.ant-tree-checkbox-indeterminate]=\"node.data.halfChecked\"\n          (click)=\"toggleCheck(node)\">\n          <span class=\"ant-tree-checkbox-inner\"></span>\n        </span>\n        <span class=\"ant-tree-node-content-wrapper\"\n          [class.ant-tree-node-selected]=\"node.isActive\"\n          [class.ant-tree-node-content-wrapper-open]=\"node.isExpanded\"\n          [class.ant-tree-node-content-wrapper-close]=\"node.isCollapsed\"\n          (click)=\"node.mouseAction('click', $event)\"\n          (dblclick)=\"node.mouseAction('dblClick', $event)\"\n          (contextmenu)=\"node.mouseAction('contextMenu', $event)\"\n          (treeDrop)=\"node.onDrop($event)\"\n          (treeDropDragOver)=\"node.mouseAction('dragOver', $event)\"\n          (treeDropDragLeave)=\"node.mouseAction('dragLeave', $event)\"\n          (treeDropDragEnter)=\"node.mouseAction('dragEnter', $event)\"\n          [treeAllowDrop]=\"node.allowDrop\"\n          [treeDrag]=\"node\"\n          [treeDragEnabled]=\"node.allowDrag()\">\n          <span *ngIf=\"!nzTitle\" class=\"ant-tree-title\" [innerHTML]=\"node.displayField\"></span>\n          <ng-container\n            [ngTemplateOutlet]=\"nzTitle\"\n            [ngTemplateOutletContext]=\"{ $implicit:node, node: node, index: index }\">\n          </ng-container>\n        </span>\n        <tree-node-children [node]=\"node\" [templates]=\"templates\"></tree-node-children>\n        <tree-node-drop-slot [dropIndex]=\"node.index + 1\" [node]=\"node.parent\"></tree-node-drop-slot>\n      </div>\n    </ng-template>\n    <ng-template #loadingTemplate let-node let-index=\"index\" let-templates=\"templates\"></ng-template>\n  </tree-root>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: [\n    './style/index.css',\n    './style/patch.css'\n  ]\n})\nexport class NzTreeComponent implements OnInit, OnChanges {\n  _options: NzTreeOptions;\n\n  @Input() nzNodes: any[];\n  @Input() nzCheckable = false;\n  @Input() nzShowLine = false;\n  @Input() nzOptions: any;\n  @Input() nzShiftSelectedMulti = true;\n  @ContentChild('nzTitle') nzTitle: TemplateRef<any>;\n  @ContentChild('nzLoading') nzLoading: TemplateRef<any>;\n\n  @Output() nzToggleExpanded = new EventEmitter();\n  @Output() nzActivate = new EventEmitter();\n  @Output() nzDeactivate = new EventEmitter();\n  @Output() nzFocus = new EventEmitter();\n  @Output() nzBlur = new EventEmitter();\n  @Output() nzUpdateData = new EventEmitter();\n  @Output() nzInitialized = new EventEmitter();\n  @Output() nzMoveNode = new EventEmitter();\n  @Output() nzCopyNode = new EventEmitter();\n  @Output() nzLoadNodeChildren = new EventEmitter();\n  @Output() nzChangeFilter = new EventEmitter();\n  @Output() nzEvent = new EventEmitter();\n  @Output() nzStateChange = new EventEmitter();\n  @Output() nzCheck = new EventEmitter();\n\n  @ViewChild(TreeComponent)\n  tree: TreeComponent;\n\n  get treeModel(): TreeModel {\n    return this.tree.treeModel;\n  }\n\n  toggleCheck(node: TreeNode) {\n    if (node.data.disableCheckbox !== true) {\n      node.data.checked = !node.data.checked;\n      node.data.halfChecked = false;\n      this.updateCheckState(node, node.data.checked);\n      this.fireEvent({ eventName: 'check', node: node, checked: node.data.checked });\n    }\n  }\n\n  private updateCheckState(node: TreeNode, checkIt: boolean) {\n    const childLoop = (parentNode: TreeNode) => {\n      if (!parentNode.children) return;\n      for (const childNode of parentNode.children) {\n        if (!childNode.data.disableCheckbox) {\n          childNode.data.halfChecked = false;\n          childNode.data.checked = checkIt;\n        }\n        childLoop(childNode);\n      }\n    };\n\n    childLoop(node);\n\n    const parentLoop = (childNode: TreeNode) => {\n      if (!childNode.parent) return;\n      const parentNode = childNode.parent;\n      let childrenCount = parentNode.children.length;\n      let checkedChildrenCount = 0;\n      for (const item of parentNode.children) {\n        if (item.data.disableCheckbox) {\n          childrenCount -= 1;\n          continue;\n        }\n        if (item.data.checked === true) checkedChildrenCount++;\n        else if (item.data.halfChecked === true) checkedChildrenCount += 0.5;\n      }\n      if (checkedChildrenCount === childrenCount) {\n        parentNode.data.checked = true;\n        parentNode.data.halfChecked = false;\n      } else if (checkedChildrenCount > 0) {\n        parentNode.data.checked = false;\n        parentNode.data.halfChecked = true;\n      } else {\n        parentNode.data.checked = false;\n        parentNode.data.halfChecked = false;\n      }\n      parentLoop(parentNode);\n    };\n    parentLoop(node);\n  }\n\n  fireEvent(event: any) {\n    const eventName = event && event.eventName;\n    if (eventName && typeof eventName === 'string') {\n      const emitEventName = 'nz' + (eventName.charAt(0).toUpperCase() + eventName.slice(1));\n      const emitObj = this[emitEventName];\n      if (<any>this[emitEventName]) this[emitEventName].emit(event);\n    }\n    this.nzEvent.emit(event);\n  }\n\n  ngOnInit() {\n    console.log('this._options', this._options);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const actionMapping: IActionMapping = { };\n    if (this.nzShiftSelectedMulti) {\n        actionMapping.mouse = {\n            click: (tree, node, $event: any) => {\n              $event.shiftKey\n                ? TREE_ACTIONS.TOGGLE_ACTIVE_MULTI(tree, node, $event)\n                : TREE_ACTIONS.TOGGLE_ACTIVE(tree, node, $event);\n            }\n        };\n    }\n    this._options = Object.assign({\n      actionMapping,\n      animateExpand: true\n    }, this.nzOptions);\n  }\n\n  [key: string]: any;\n}\n"]}