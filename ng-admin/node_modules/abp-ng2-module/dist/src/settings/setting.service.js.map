{"version":3,"sources":["../../../src/settings/setting.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAG3C;IAAA;IAoBA,CAAC;IAlBG,4BAAG,GAAH,UAAI,IAAY;QACZ,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAED,mCAAU,GAAV,UAAW,IAAY;QACnB,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAED,+BAAM,GAAN,UAAO,IAAY;QACf,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;IAEE,yBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,6BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,qBAAC;CApBD,AAoBC,IAAA;SApBY,cAAc","file":"setting.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n\r\nexport class SettingService {\r\n\r\n    get(name: string): string {\r\n        return abp.setting.get(name);\r\n    }\r\n\r\n    getBoolean(name: string): boolean {\r\n        return abp.setting.getBoolean(name);\r\n    }\r\n    \r\n    getInt(name: string): number {\r\n        return abp.setting.getInt(name);\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}