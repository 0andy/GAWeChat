{"version":3,"sources":["../../../src/utils/utils.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAG3C;IAAA;IAoBA,CAAC;IAlBG,qCAAc,GAAd,UAAe,GAAW;QACtB,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;IACzC,CAAC;IAED,qCAAc,GAAd,UAAe,GAAW,EAAE,KAAa,EAAE,UAAiB,EAAE,IAAa;QACvE,GAAG,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;IAC3D,CAAC;IAED,mCAAY,GAAZ,UAAa,GAAW,EAAE,IAAa;QACnC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACtC,CAAC;IAEE,uBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,2BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,mBAAC;CApBD,AAoBC,IAAA;SApBY,YAAY","file":"utils.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n\r\nexport class UtilsService {\r\n\r\n    getCookieValue(key: string): string {\r\n        return abp.utils.getCookieValue(key);\r\n    }\r\n\r\n    setCookieValue(key: string, value: string, expireDate?: Date, path?: string): void {\r\n        abp.utils.setCookieValue(key, value, expireDate, path);\r\n    }\r\n\r\n    deleteCookie(key: string, path?: string): void {\r\n        abp.utils.deleteCookie(key, path);\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}