{"version":3,"sources":["../../src/abp.module.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAA,EAAS,MAAO,eAAA,CAAgB;AACzC,OAAO,EAAE,UAAA,EAAY,WAAA,EAAa,IAAA,EAAM,UAAA,EAAY,cAAA,EAAe,MAAO,eAAA,CAAgB;AAE1F,OAAO,EAAE,iBAAA,EAAkB,MAAO,+BAAA,CAAgC;AAClE,OAAO,EAAE,wBAAA,EAAyB,MAAO,mCAAA,CAAoC;AAC7E,OAAO,EAAE,qBAAA,EAAsB,MAAO,oCAAA,CAAqC;AAC3E,OAAO,EAAE,mBAAA,EAAoB,MAAO,qCAAA,CAAsC;AAC1E,OAAO,EAAE,cAAA,EAAe,MAAO,4BAAA,CAA6B;AAC5D,OAAO,EAAE,aAAA,EAAc,MAAO,yBAAA,CAA0B;AACxD,OAAO,EAAE,cAAA,EAAe,MAAO,2BAAA,CAA4B;AAC3D,OAAO,EAAE,UAAA,EAAW,MAAO,mBAAA,CAAoB;AAC/C,OAAO,EAAE,sBAAA,EAAuB,MAAO,2CAAA,CAA4C;AACnF,OAAO,EAAE,oBAAA,EAAsB,OAAA,EAAQ,MAAO,WAAA,CAAY;AAC1D,OAAO,EAAE,2BAAA,EAA4B,MAAO,kCAAA,CAAmC;AAC/E,OAAO,EAAE,YAAA,EAAa,MAAO,sBAAA,CAAuB;AACpD,OAAO,EAAE,YAAA,EAAa,MAAO,uBAAA,CAAwB;AAErD,MAAM,yBAAyB,UAAY,EAAY,cAAgB,EAAgB,aAAe;IAClG,MAAM,CAAC,IAAI,OAAA,CAAQ,UAAC,EAAW,cAAA,EAAgB,aAAA,CAAc,CAAC;AAClE,CAAC;AAED,MAAM,CAAC,IAAI,iBAAA,GAAoB;IAC3B,OAAO,EAAE,IAAA;IACT,UAAU,EAAE,cAAA;IACZ,IAAI,EAAE,CAAA,UAAE,EAAW,cAAA,EAAgB,oBAAA,CAAqB;CAC3D,CAAC;AAGF;IAAA;IA+BA,CAAC;IA/B+B,oBAAU,GAA0B;QACpE,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;oBACrB,OAAO,EAAE;wBACL,UAAU;wBACV,WAAW;qBACd;oBAED,YAAY,EAAE,EACb;oBAED,SAAS,EAAE;wBACP,iBAAiB;wBACjB,wBAAwB;wBACxB,qBAAqB;wBACrB,mBAAmB;wBACnB,cAAc;wBACd,aAAa;wBACb,cAAc;wBACd,UAAU;wBACV,sBAAsB;wBACtB,2BAA2B;wBAC3B,oBAAoB;wBACpB,iBAAiB;wBACjB,YAAY;wBACZ,YAAY;qBACf;iBACJ,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,wBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,gBAAC;CA/BD,AA+BC,IAAA;SA/BY,SAAS","file":"abp.module.js","sourceRoot":"","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { HttpModule, JsonpModule, Http, XHRBackend, RequestOptions } from '@angular/http';\r\n\r\nimport { AbpSessionService } from './session/abp-session.service';\r\nimport { PermissionCheckerService } from './auth/permission-checker.service';\r\nimport { FeatureCheckerService } from './features/feature-checker.service';\r\nimport { LocalizationService } from './localization/localization.service';\r\nimport { SettingService } from './settings/setting.service';\r\nimport { NotifyService } from './notify/notify.service';\r\nimport { MessageService } from './message/message.service';\r\nimport { LogService } from './log/log.service';\r\nimport { AbpMultiTenancyService } from './multi-tenancy/abp-multi-tenancy.service';\r\nimport { AbpHttpConfiguration, AbpHttp } from './abpHttp';\r\nimport { AbpUserConfigurationService } from './abp-user-configuration.service';\r\nimport { TokenService } from './auth/token.service';\r\nimport { UtilsService } from './utils/utils.service';\r\n\r\nexport function abpHttpFactory(xhrBackend: XHRBackend, requestOptions: RequestOptions, configuration: AbpHttpConfiguration): Http {\r\n    return new AbpHttp(xhrBackend, requestOptions, configuration);\r\n}\r\n\r\nexport let ABP_HTTP_PROVIDER = {\r\n    provide: Http,\r\n    useFactory: abpHttpFactory,\r\n    deps: [XHRBackend, RequestOptions, AbpHttpConfiguration]\r\n};\r\n\r\n\r\nexport class AbpModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n    imports: [\r\n        HttpModule,\r\n        JsonpModule\r\n    ],\r\n\r\n    declarations: [\r\n    ],\r\n\r\n    providers: [\r\n        AbpSessionService,\r\n        PermissionCheckerService,\r\n        FeatureCheckerService,\r\n        LocalizationService,\r\n        SettingService,\r\n        NotifyService,\r\n        MessageService,\r\n        LogService,\r\n        AbpMultiTenancyService,\r\n        AbpUserConfigurationService,\r\n        AbpHttpConfiguration,\r\n        ABP_HTTP_PROVIDER,\r\n        TokenService,\r\n        UtilsService\r\n    ]\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}