{"version":3,"sources":["../../../src/features/feature-checker.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAG3C;IAAA;IAoBA,CAAC;IAlBG,mCAAG,GAAH,UAAI,WAAmB;QACnB,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACzC,CAAC;IAED,wCAAQ,GAAR,UAAS,WAAmB;QACxB,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;IAC9C,CAAC;IAED,yCAAS,GAAT,UAAU,WAAmB;QACzB,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;IAC/C,CAAC;IAEE,gCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,oCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,4BAAC;CApBD,AAoBC,IAAA;SApBY,qBAAqB","file":"feature-checker.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n\r\nexport class FeatureCheckerService {\r\n\r\n    get(featureName: string): abp.features.IFeature {\r\n        return abp.features.get(featureName);\r\n    }\r\n\r\n    getValue(featureName: string): string {\r\n        return abp.features.getValue(featureName);\r\n    }\r\n\r\n    isEnabled(featureName: string): boolean {\r\n        return abp.features.isEnabled(featureName);\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}