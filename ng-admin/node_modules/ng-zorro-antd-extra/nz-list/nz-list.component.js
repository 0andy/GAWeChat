import { Component, ViewEncapsulation, Input, TemplateRef, ContentChild, ElementRef, Renderer2 } from '@angular/core';
var NzListComponent = (function () {
    // endregion
    function NzListComponent(_el, _renderer) {
        this._el = _el;
        this._renderer = _renderer;
        // region: fields
        this.nzDataSource = [];
        this.nzBordered = false;
        this.header = false;
        this._header = '';
        this.footer = false;
        this._footer = '';
        this.nzSize = 'default';
        this.nzItemLayout = 'horizontal';
        this.nzLoading = false;
        this.nzSplit = true;
        // endregion
        // region: styles
        this._prefixCls = 'ant-list';
        this._classList = [];
    }
    Object.defineProperty(NzListComponent.prototype, "nzHeader", {
        set: function (value) {
            if (value instanceof TemplateRef)
                this._headerTpl = value;
            else
                this._header = value;
            this.header = !!value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NzListComponent.prototype, "nzFooter", {
        set: function (value) {
            if (value instanceof TemplateRef)
                this._footerTpl = value;
            else
                this._footer = value;
            this.footer = !!value;
        },
        enumerable: true,
        configurable: true
    });
    NzListComponent.prototype._setClassMap = function () {
        var _this = this;
        this._classList.forEach(function (cls) { return _this._renderer.removeClass(_this._el.nativeElement, cls); });
        this._classList = [
            this._prefixCls,
            this.nzItemLayout === 'vertical' && this._prefixCls + "-vertical",
            this.nzSize === 'large' && this._prefixCls + "-lg",
            this.nzSize === 'small' && this._prefixCls + "-sm",
            this.nzSplit && this._prefixCls + "-split",
            this.nzBordered && this._prefixCls + "-bordered",
            this.nzLoading && this._prefixCls + "-loading",
            this.nzGrid && this._prefixCls + "-grid",
            !!(this.nzLoadMore || this.nzPagination || this.nzFooter) && this._prefixCls + "-something-after-last-item"
        ].filter(function (item) { return !!item; });
        this._classList.forEach(function (cls) { return _this._renderer.addClass(_this._el.nativeElement, cls); });
    };
    NzListComponent.prototype.ngOnInit = function () {
    };
    NzListComponent.prototype.ngOnChanges = function (changes) {
        this._setClassMap();
    };
    NzListComponent.decorators = [
        { type: Component, args: [{
                    selector: 'nz-list',
                    template: "\n    <ng-template #itemsTpl>\n        <ng-container *ngFor=\"let item of nzDataSource; let index = index\">\n            <ng-template\n                [ngTemplateOutlet]=\"nzItem\"\n                [ngTemplateOutletContext]=\"{ $implicit: item, item: item, index: index }\"></ng-template>\n        </ng-container>\n    </ng-template>\n    <div *ngIf=\"header\" class=\"ant-list-header\">\n        <ng-container *ngIf=\"_header; else _headerTpl\">{{ _header }}</ng-container>\n    </div>\n    <nz-spin [nzSpinning]=\"nzLoading\">\n        <div *ngIf=\"nzGrid; else itemsTpl\" nz-row [nzGutter]=\"nzGrid.gutter\">\n            <div nz-col [nzSpan]=\"nzGrid.span\" [nzXs]=\"nzGrid.xs\" [nzSm]=\"nzGrid.sm\" [nzMd]=\"nzGrid.md\" [nzLg]=\"nzGrid.lg\" [nzXl]=\"nzGrid.xl\"\n                *ngFor=\"let item of nzDataSource; let index = index\">\n                <ng-template\n                    [ngTemplateOutlet]=\"nzItem\"\n                    [ngTemplateOutletContext]=\"{ $implicit: item, item: item, index: index }\"></ng-template>\n            </div>\n        </div>\n    </nz-spin>\n    <ng-template [ngTemplateOutlet]=\"nzLoadMore\"></ng-template>\n    <ng-content></ng-content>\n    <div *ngIf=\"nzPagination\" class=\"ant-list-pagination\">\n        <ng-template [ngTemplateOutlet]=\"nzPagination\"></ng-template>\n    </div>\n    <div *ngIf=\"footer\" class=\"ant-list-footer\">\n        <ng-container *ngIf=\"_footer; else _footerTpl\">{{ _footer }}</ng-container>\n    </div>\n    ",
                    styles: ["/* stylelint-disable at-rule-empty-line-before,at-rule-name-space-after,at-rule-no-unknown */ /* stylelint-disable declaration-bang-space-before */ /* stylelint-disable declaration-bang-space-before */ .ant-list { font-family: \"Helvetica Neue For Number\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei\", \"Helvetica Neue\", Helvetica, Arial, sans-serif; font-size: 14px; line-height: 1.5; color: rgba(0, 0, 0, 0.65); box-sizing: border-box; margin: 0; padding: 0; list-style: none; position: relative; } .ant-list * { outline: none; } .ant-list-pagination { margin-top: 24px; text-align: right; } .ant-list-more { margin-top: 12px; text-align: center; } .ant-list-more button { padding-left: 32px; padding-right: 32px; } .ant-list-spin { text-align: center; min-height: 40px; } .ant-list-item { align-items: center; display: flex; padding-top: 12px; padding-bottom: 12px; } .ant-list-item-meta { align-items: flex-start; display: flex; font-size: 0; } .ant-list-item-meta-avatar { flex: 0; margin-right: 16px; } .ant-list-item-meta-content { flex: 1 0; } .ant-list-item-meta-title { color: rgba(0, 0, 0, 0.65); margin-bottom: 4px; font-size: 14px; line-height: 22px; } .ant-list-item-meta-title > a { color: rgba(0, 0, 0, 0.65); transition: all .3s; } .ant-list-item-meta-title > a:hover { color: #1890ff; } .ant-list-item-meta-description { color: rgba(0, 0, 0, 0.45); font-size: 14px; line-height: 22px; } .ant-list-item-content { display: flex; flex: 1; justify-content: flex-end; } .ant-list-item-content-single { justify-content: flex-start; } .ant-list-item-action { font-size: 0; flex: 0 0 auto; margin-left: 48px; padding: 0; list-style: none; } .ant-list-item-action > li { display: inline-block; color: rgba(0, 0, 0, 0.45); cursor: pointer; padding: 0 8px; position: relative; font-size: 14px; line-height: 22px; text-align: center; } .ant-list-item-action > li:first-child { padding-left: 0; } .ant-list-item-action-split { background-color: #e8e8e8; margin-top: -7px; position: absolute; top: 50%; right: 0; width: 1px; height: 14px; } .ant-list-item-main { display: flex; flex: 1; } .ant-list-item-extra { flex: 0; } .ant-list-header, .ant-list-footer { padding-top: 12px; padding-bottom: 12px; } .ant-list-split .ant-list-item { border-bottom: 1px solid #e8e8e8; } .ant-list-split .ant-list-item:last-child { border-bottom: none; } .ant-list-split .ant-list-header { border-bottom: 1px solid #e8e8e8; } .ant-list-loading .ant-spin-nested-loading { min-height: 32px; } .ant-list-bordered { border-radius: 4px; border: 1px solid #d9d9d9; } .ant-list-bordered .ant-list-header { padding-left: 24px; padding-right: 24px; } .ant-list-bordered .ant-list-footer { padding-left: 24px; padding-right: 24px; } .ant-list-bordered .ant-list-item { border-bottom: 1px solid #e8e8e8; padding-left: 24px; padding-right: 24px; } .ant-list-something-after-last-item .ant-list-item:last-child { border-bottom: 1px solid #e8e8e8; } .ant-list-bordered.ant-list-lg .ant-list-header, .ant-list-bordered.ant-list-lg .ant-list-footer { padding: 16px 24px; } .ant-list-bordered.ant-list-sm .ant-list-item { padding-left: 16px; padding-right: 16px; } .ant-list-bordered.ant-list-sm .ant-list-header, .ant-list-bordered.ant-list-sm .ant-list-footer { padding: 8px 16px; } .ant-list-lg .ant-list-item { padding-top: 16px; padding-bottom: 16px; } .ant-list-sm .ant-list-item { padding-top: 8px; padding-bottom: 8px; } .ant-list-vertical .ant-list-item { display: block; } .ant-list-vertical .ant-list-item-extra-wrap { display: flex; } .ant-list-vertical .ant-list-item-main { display: block; flex: 1; } .ant-list-vertical .ant-list-item-extra { margin-left: 58px; flex: 0; } .ant-list-vertical .ant-list-item-meta { margin-bottom: 16px; } .ant-list-vertical .ant-list-item-meta-avatar { display: none; } .ant-list-vertical .ant-list-item-meta-title { color: rgba(0, 0, 0, 0.85); margin-bottom: 12px; font-size: 16px; line-height: 24px; } .ant-list-vertical .ant-list-item-content { display: block; color: rgba(0, 0, 0, 0.65); font-size: 14px; margin-bottom: 16px; } .ant-list-vertical .ant-list-item-action { margin-left: auto; } .ant-list-vertical .ant-list-item-action > li { padding: 0 16px; } .ant-list-vertical .ant-list-item-action > li:first-child { padding-left: 0; } .ant-list-grid .ant-list-item { border-bottom: none; padding-top: 0; padding-bottom: 0; margin-bottom: 20px; } .ant-list-grid .ant-list-item-content { display: block; } .ant-list-empty { color: rgba(0, 0, 0, 0.45); padding: 16px 0; font-size: 12px; text-align: center; } @media screen and (max-width: 768px) { .ant-list-item-action { margin-left: 24px; } .ant-list-vertical .ant-list-item-extra { margin-left: 24px; } } @media screen and (max-width: 480px) { .ant-list-item { flex-wrap: wrap; } .ant-list-item-action { margin-left: 12px; } .ant-list-vertical .ant-list-item-extra-wrap { flex-wrap: wrap-reverse; } .ant-list-vertical .ant-list-item-main { min-width: 220px; } .ant-list-vertical .ant-list-item-extra { margin-left: 0; } } ",
"nz-list, nz-list-item, nz-list-item-meta { display: block; } nz-list nz-spin { display: block; } "],
                    encapsulation: ViewEncapsulation.None
                },] },
    ];
    /** @nocollapse */
    NzListComponent.ctorParameters = function () { return [
        { type: ElementRef, },
        { type: Renderer2, },
    ]; };
    NzListComponent.propDecorators = {
        "nzDataSource": [{ type: Input },],
        "nzBordered": [{ type: Input },],
        "nzGrid": [{ type: Input },],
        "nzHeader": [{ type: Input },],
        "nzFooter": [{ type: Input },],
        "nzItem": [{ type: ContentChild, args: ['item',] },],
        "nzSize": [{ type: Input },],
        "nzItemLayout": [{ type: Input },],
        "nzLoading": [{ type: Input },],
        "nzLoadMore": [{ type: ContentChild, args: ['loadMore',] },],
        "nzPagination": [{ type: ContentChild, args: ['pagination',] },],
        "nzSplit": [{ type: Input },],
    };
    return NzListComponent;
}());
export { NzListComponent };
//# sourceMappingURL=nz-list.component.js.map