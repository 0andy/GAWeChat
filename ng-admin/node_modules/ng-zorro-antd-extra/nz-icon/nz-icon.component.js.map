{"version":3,"file":"nz-icon.component.js","sourceRoot":"","sources":["../../.ng_build/nz-icon/nz-icon.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,iBAAiB,EAAE,KAAK,EAAE,UAAU,EAAE,SAAS,EAA4B,MAAM,eAAe,CAAC;;IA8BjH,yBAAoB,EAAc,EAAU,QAAmB;QAA3C,OAAE,GAAF,EAAE,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAW;sBAlB7C,KAAK;yBAID,EAAE;KAc2C;IAbnE,kCAAQ,GAAR;QAAA,iBAWC;QAVG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,GAAG,IAAI,OAAA,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAI,CAAC,EAAE,CAAC,aAAa,EAAE,GAAG,CAAC,EAArD,CAAqD,CAAC,CAAC;QAErF,IAAI,CAAC,SAAS,GAAG,CAAE,SAAS,CAAE,CAAC;QAE/B,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,KAAK,WAAW,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,CAAC;YAC5D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAExC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;YAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAW,IAAI,CAAC,MAAQ,CAAC,CAAC;QAE/D,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,GAAG,IAAI,OAAA,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAI,CAAC,EAAE,CAAC,aAAa,EAAE,GAAG,CAAC,EAAlD,CAAkD,CAAC,CAAC;KACrF;IAID,qCAAW,GAAX,UAAY,OAAsB;QAC9B,IAAI,CAAC,QAAQ,EAAE,CAAC;KACnB;;gBAhCJ,SAAS,SAAC;oBACP,QAAQ,EAAE,SAAS;oBACnB,QAAQ,EAAE,EAAE;oBACZ,SAAS,EAAE;wBACP,mBAAmB;qBACtB;oBACD,aAAa,EAAE,iBAAiB,CAAC,IAAI;iBACxC;;;;gBAT6C,UAAU;gBAAE,SAAS;;;2BAY9D,KAAK;2BAEL,KAAK;;0BAdV;;SAUa,eAAe","sourcesContent":["import { Component, ViewEncapsulation, Input, ElementRef, Renderer2, SimpleChanges, OnChanges } from '@angular/core';\n\n@Component({\n    selector: 'nz-icon',\n    template: ``,\n    styleUrls: [\n        './style/patch.css'\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class NzIconComponent implements OnChanges {\n\n    @Input() nzSpin = false;\n\n    @Input() nzType: string;\n\n    _classMap: string[] = [];\n    setClass() {\n        this._classMap.forEach(cls => this.renderer.removeClass(this.el.nativeElement, cls));\n\n        this._classMap = [ 'anticon' ];\n\n        if (typeof this.nzSpin !== 'undefined' && this.nzSpin !== false)\n            this._classMap.push(`anticon-spin`);\n\n        if (this.nzType) this._classMap.push(`anticon-${this.nzType}`);\n\n        this._classMap.forEach(cls => this.renderer.addClass(this.el.nativeElement, cls));\n    }\n\n    constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this.setClass();\n    }\n}\n"]}