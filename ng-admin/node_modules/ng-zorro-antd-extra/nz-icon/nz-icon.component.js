import { Component, ViewEncapsulation, Input, ElementRef, Renderer2 } from '@angular/core';
var NzIconComponent = (function () {
    function NzIconComponent(el, renderer) {
        this.el = el;
        this.renderer = renderer;
        this.nzSpin = false;
        this._classMap = [];
    }
    NzIconComponent.prototype.setClass = function () {
        var _this = this;
        this._classMap.forEach(function (cls) { return _this.renderer.removeClass(_this.el.nativeElement, cls); });
        this._classMap = ['anticon'];
        if (typeof this.nzSpin !== 'undefined' && this.nzSpin !== false)
            this._classMap.push("anticon-spin");
        if (this.nzType)
            this._classMap.push("anticon-" + this.nzType);
        this._classMap.forEach(function (cls) { return _this.renderer.addClass(_this.el.nativeElement, cls); });
    };
    NzIconComponent.prototype.ngOnChanges = function (changes) {
        this.setClass();
    };
    NzIconComponent.decorators = [
        { type: Component, args: [{
                    selector: 'nz-icon',
                    template: "",
                    styles: ["nz-icon { display: inline-block; } "],
                    encapsulation: ViewEncapsulation.None
                },] },
    ];
    /** @nocollapse */
    NzIconComponent.ctorParameters = function () { return [
        { type: ElementRef, },
        { type: Renderer2, },
    ]; };
    NzIconComponent.propDecorators = {
        "nzSpin": [{ type: Input },],
        "nzType": [{ type: Input },],
    };
    return NzIconComponent;
}());
export { NzIconComponent };
//# sourceMappingURL=nz-icon.component.js.map