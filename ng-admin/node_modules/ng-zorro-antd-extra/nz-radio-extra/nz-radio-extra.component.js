import { Component, ElementRef, HostBinding, HostListener, Input, Renderer2, ViewEncapsulation, forwardRef, } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { toBoolean } from '../util/convert';
var NzRadioExtraComponent = (function () {
    function NzRadioExtraComponent(_elementRef, _renderer) {
        this._elementRef = _elementRef;
        this._renderer = _renderer;
        this._checked = false;
        this._disabled = false;
        this._focused = false;
        this._prefixCls = 'ant-radio';
        this._innerPrefixCls = this._prefixCls + "-inner";
        this._inputPrefixCls = this._prefixCls + "-input";
        // ngModel Access
        this.onChange = Function.prototype;
        this.onTouched = Function.prototype;
        this._el = this._elementRef.nativeElement;
    }
    Object.defineProperty(NzRadioExtraComponent.prototype, "nzChecked", {
        get: function () {
            return this._checked;
        },
        set: function (value) {
            this._checked = toBoolean(value);
            this.setClassMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NzRadioExtraComponent.prototype, "nzValue", {
        get: function () {
            return this._value;
        },
        set: function (value) {
            if (this._value === value) {
                return;
            }
            this._value = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NzRadioExtraComponent.prototype, "nzDisabled", {
        get: function () {
            return this._disabled;
        },
        set: function (value) {
            this._disabled = toBoolean(value);
            this.setClassMap();
        },
        enumerable: true,
        configurable: true
    });
    NzRadioExtraComponent.prototype.onClick = function (e) {
        e.preventDefault();
        if (!this._disabled) {
            // this._checked = true;
            this.updateValue(!this._checked);
        }
    };
    NzRadioExtraComponent.prototype.nzFocus = function () {
        this._focused = true;
        this.setClassMap();
    };
    NzRadioExtraComponent.prototype.nzBlur = function () {
        this._focused = false;
        this.setClassMap();
    };
    NzRadioExtraComponent.prototype.setClassMap = function () {
        this._classMap = (_a = {},
            _a[this._prefixCls] = true,
            _a[this._prefixCls + "-checked"] = this._checked,
            _a[this._prefixCls + "-focused"] = this._focused,
            _a[this._prefixCls + "-disabled"] = this._disabled,
            _a);
        var _a;
    };
    NzRadioExtraComponent.prototype.ngOnInit = function () {
        this._renderer.addClass(this._el, this._prefixCls + "-wrapper");
        this.setClassMap();
    };
    NzRadioExtraComponent.prototype.updateValue = function (value) {
        if (value === this._checked) {
            return;
        }
        this.onChange(value);
        this._checked = value;
        this.setClassMap();
    };
    NzRadioExtraComponent.prototype.writeValue = function (value) {
        this._checked = value;
        this.setClassMap();
    };
    NzRadioExtraComponent.prototype.registerOnChange = function (fn) {
        this.onChange = fn;
    };
    NzRadioExtraComponent.prototype.registerOnTouched = function (fn) {
        this.onTouched = fn;
    };
    NzRadioExtraComponent.decorators = [
        { type: Component, args: [{
                    selector: '[nz-radio-extra]',
                    encapsulation: ViewEncapsulation.None,
                    template: "\n      <span [ngClass]=\"_classMap\">\n        <span [ngClass]=\"_innerPrefixCls\"></span>\n        <input type=\"radio\" [ngClass]=\"_inputPrefixCls\" [(ngModel)]=\"nzChecked\" (focus)=\"nzFocus()\" (blur)=\"nzBlur()\">\n      </span>\n      <ng-content></ng-content>\n    ",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef(function () { return NzRadioExtraComponent; }),
                            multi: true
                        }
                    ],
                    styles: ["/* stylelint-disable at-rule-empty-line-before,at-rule-name-space-after,at-rule-no-unknown */ /* stylelint-disable declaration-bang-space-before */ /* stylelint-disable declaration-bang-space-before */ .ant-radio-group { display: inline-block; font-size: 14px; } .ant-radio-wrapper { font-size: 14px; display: inline-block; position: relative; white-space: nowrap; margin-right: 8px; cursor: pointer; } .ant-radio { white-space: nowrap; outline: none; display: inline-block; position: relative; line-height: 1; vertical-align: text-bottom; cursor: pointer; } .ant-radio-wrapper:hover .ant-radio .ant-radio-inner, .ant-radio:hover .ant-radio-inner, .ant-radio-focused .ant-radio-inner { border-color: #1890ff; } .ant-radio-checked:after { position: absolute; top: 0; left: 0; width: 100%; height: 100%; border-radius: 50%; border: 1px solid #1890ff; content: ''; animation: antRadioEffect 0.36s ease-in-out; animation-fill-mode: both; visibility: hidden; } .ant-radio:hover:after, .ant-radio-wrapper:hover .ant-radio:after { visibility: visible; } .ant-radio-inner { position: relative; top: 0; left: 0; display: block; width: 14px; height: 14px; border-width: 1px; border-style: solid; border-radius: 14px; border-color: #d9d9d9; background-color: #fff; transition: all 0.3s; } .ant-radio-inner:after { position: absolute; width: 6px; height: 6px; left: 3px; top: 3px; border-radius: 4px; display: table; border-top: 0; border-left: 0; content: ' '; background-color: #1890ff; opacity: 0; transform: scale(0); transition: all 0.3s cubic-bezier(0.78, 0.14, 0.15, 0.86); } .ant-radio-input { position: absolute; left: 0; z-index: 1; cursor: pointer; opacity: 0; top: 0; bottom: 0; right: 0; } .ant-radio-checked .ant-radio-inner { border-color: #1890ff; } .ant-radio-checked .ant-radio-inner:after { transform: scale(1); opacity: 1; transition: all 0.3s cubic-bezier(0.78, 0.14, 0.15, 0.86); } .ant-radio-disabled .ant-radio-inner { border-color: #d9d9d9 !important; background-color: #f5f5f5; } .ant-radio-disabled .ant-radio-inner:after { background-color: #ccc; } .ant-radio-disabled .ant-radio-input { cursor: not-allowed; } .ant-radio-disabled + span { color: rgba(0, 0, 0, 0.25); cursor: not-allowed; } span.ant-radio + * { padding-left: 8px; padding-right: 8px; } .ant-radio-button-wrapper { margin: 0; height: 32px; line-height: 30px; color: rgba(0, 0, 0, 0.65); display: inline-block; transition: all 0.3s ease; cursor: pointer; border: 1px solid #d9d9d9; border-left: 0; background: #fff; padding: 0 16px; position: relative; } .ant-radio-button-wrapper a { color: rgba(0, 0, 0, 0.65); } .ant-radio-button-wrapper > .ant-radio-button { margin-left: 0; display: block; width: 0; height: 0; } .ant-radio-group-large .ant-radio-button-wrapper { height: 40px; line-height: 38px; } .ant-radio-group-small .ant-radio-button-wrapper { height: 24px; line-height: 22px; padding: 0 12px; } .ant-radio-group-small .ant-radio-button-wrapper:first-child { border-radius: 2px 0 0 2px; } .ant-radio-group-small .ant-radio-button-wrapper:last-child { border-radius: 0 2px 2px 0; } .ant-radio-button-wrapper:not(:first-child)::before { content: \"\"; display: block; top: 0; left: -1px; width: 1px; height: 100%; position: absolute; background-color: #d9d9d9; } .ant-radio-button-wrapper:first-child { border-radius: 4px 0 0 4px; border-left: 1px solid #d9d9d9; } .ant-radio-button-wrapper:last-child { border-radius: 0 4px 4px 0; } .ant-radio-button-wrapper:first-child:last-child { border-radius: 4px; } .ant-radio-button-wrapper:hover, .ant-radio-button-wrapper-focused { color: #1890ff; position: relative; } .ant-radio-button-wrapper .ant-radio-inner, .ant-radio-button-wrapper input[type=\"checkbox\"], .ant-radio-button-wrapper input[type=\"radio\"] { opacity: 0; filter: alpha(opacity=0); width: 0; height: 0; } .ant-radio-button-wrapper-checked { background: #fff; border-color: #1890ff; color: #1890ff; box-shadow: -1px 0 0 0 #1890ff; z-index: 1; } .ant-radio-button-wrapper-checked::before { background-color: #1890ff !important; opacity: 0.1; } .ant-radio-button-wrapper-checked:first-child { border-color: #1890ff; box-shadow: none !important; } .ant-radio-button-wrapper-checked:hover { border-color: #40a9ff; box-shadow: -1px 0 0 0 #40a9ff; color: #40a9ff; } .ant-radio-button-wrapper-checked:active { border-color: #096dd9; box-shadow: -1px 0 0 0 #096dd9; color: #096dd9; } .ant-radio-button-wrapper-disabled { border-color: #d9d9d9; background-color: #f5f5f5; cursor: not-allowed; color: rgba(0, 0, 0, 0.25); } .ant-radio-button-wrapper-disabled:first-child, .ant-radio-button-wrapper-disabled:hover { border-color: #d9d9d9; background-color: #f5f5f5; color: rgba(0, 0, 0, 0.25); } .ant-radio-button-wrapper-disabled:first-child { border-left-color: #d9d9d9; } .ant-radio-button-wrapper-disabled.ant-radio-button-wrapper-checked { color: #fff; background-color: #e6e6e6; border-color: #d9d9d9; box-shadow: none; } @keyframes antRadioEffect { 0% { transform: scale(1); opacity: 0.5; } 100% { transform: scale(1.6); opacity: 0; } } "]
                },] },
    ];
    /** @nocollapse */
    NzRadioExtraComponent.ctorParameters = function () { return [
        { type: ElementRef, },
        { type: Renderer2, },
    ]; };
    NzRadioExtraComponent.propDecorators = {
        "nzChecked": [{ type: Input }, { type: HostBinding, args: ['class.ant-radio-wrapper-checked',] },],
        "nzValue": [{ type: Input },],
        "nzDisabled": [{ type: Input }, { type: HostBinding, args: ['class.ant-radio-wrapper-disabled',] },],
        "onClick": [{ type: HostListener, args: ['click', ['$event'],] },],
    };
    return NzRadioExtraComponent;
}());
export { NzRadioExtraComponent };
//# sourceMappingURL=nz-radio-extra.component.js.map