(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('ng-zorro-antd'), require('@angular/forms')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/common', 'ng-zorro-antd', '@angular/forms'], factory) :
	(factory((global.ngZorro = global.ngZorro || {}, global.ngZorro.antd_extra = {}),global.ng.core,global.ng.common,global.ngZorro.antd,global.ng.forms));
}(this, (function (exports,core,common,ngZorroAntd,forms) { 'use strict';

var NzListComponent = (function () {
    // endregion
    function NzListComponent(_el, _renderer) {
        this._el = _el;
        this._renderer = _renderer;
        // region: fields
        this.nzDataSource = [];
        this.nzBordered = false;
        this.header = false;
        this._header = '';
        this.footer = false;
        this._footer = '';
        this.nzSize = 'default';
        this.nzItemLayout = 'horizontal';
        this.nzLoading = false;
        this.nzSplit = true;
        // endregion
        // region: styles
        this._prefixCls = 'ant-list';
        this._classList = [];
    }
    Object.defineProperty(NzListComponent.prototype, "nzHeader", {
        set: function (value) {
            if (value instanceof core.TemplateRef)
                this._headerTpl = value;
            else
                this._header = value;
            this.header = !!value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NzListComponent.prototype, "nzFooter", {
        set: function (value) {
            if (value instanceof core.TemplateRef)
                this._footerTpl = value;
            else
                this._footer = value;
            this.footer = !!value;
        },
        enumerable: true,
        configurable: true
    });
    NzListComponent.prototype._setClassMap = function () {
        var _this = this;
        this._classList.forEach(function (cls) { return _this._renderer.removeClass(_this._el.nativeElement, cls); });
        this._classList = [
            this._prefixCls,
            this.nzItemLayout === 'vertical' && this._prefixCls + "-vertical",
            this.nzSize === 'large' && this._prefixCls + "-lg",
            this.nzSize === 'small' && this._prefixCls + "-sm",
            this.nzSplit && this._prefixCls + "-split",
            this.nzBordered && this._prefixCls + "-bordered",
            this.nzLoading && this._prefixCls + "-loading",
            this.nzGrid && this._prefixCls + "-grid",
            !!(this.nzLoadMore || this.nzPagination || this.nzFooter) && this._prefixCls + "-something-after-last-item"
        ].filter(function (item) { return !!item; });
        this._classList.forEach(function (cls) { return _this._renderer.addClass(_this._el.nativeElement, cls); });
    };
    NzListComponent.prototype.ngOnInit = function () {
    };
    NzListComponent.prototype.ngOnChanges = function (changes) {
        this._setClassMap();
    };
    NzListComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'nz-list',
                    template: "\n    <ng-template #itemsTpl>\n        <ng-container *ngFor=\"let item of nzDataSource; let index = index\">\n            <ng-template\n                [ngTemplateOutlet]=\"nzItem\"\n                [ngTemplateOutletContext]=\"{ $implicit: item, item: item, index: index }\"></ng-template>\n        </ng-container>\n    </ng-template>\n    <div *ngIf=\"header\" class=\"ant-list-header\">\n        <ng-container *ngIf=\"_header; else _headerTpl\">{{ _header }}</ng-container>\n    </div>\n    <nz-spin [nzSpinning]=\"nzLoading\">\n        <div *ngIf=\"nzGrid; else itemsTpl\" nz-row [nzGutter]=\"nzGrid.gutter\">\n            <div nz-col [nzSpan]=\"nzGrid.span\" [nzXs]=\"nzGrid.xs\" [nzSm]=\"nzGrid.sm\" [nzMd]=\"nzGrid.md\" [nzLg]=\"nzGrid.lg\" [nzXl]=\"nzGrid.xl\"\n                *ngFor=\"let item of nzDataSource; let index = index\">\n                <ng-template\n                    [ngTemplateOutlet]=\"nzItem\"\n                    [ngTemplateOutletContext]=\"{ $implicit: item, item: item, index: index }\"></ng-template>\n            </div>\n        </div>\n    </nz-spin>\n    <ng-template [ngTemplateOutlet]=\"nzLoadMore\"></ng-template>\n    <ng-content></ng-content>\n    <div *ngIf=\"nzPagination\" class=\"ant-list-pagination\">\n        <ng-template [ngTemplateOutlet]=\"nzPagination\"></ng-template>\n    </div>\n    <div *ngIf=\"footer\" class=\"ant-list-footer\">\n        <ng-container *ngIf=\"_footer; else _footerTpl\">{{ _footer }}</ng-container>\n    </div>\n    ",
                    styles: ["/* stylelint-disable at-rule-empty-line-before,at-rule-name-space-after,at-rule-no-unknown */ /* stylelint-disable declaration-bang-space-before */ /* stylelint-disable declaration-bang-space-before */ .ant-list { font-family: \"Helvetica Neue For Number\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei\", \"Helvetica Neue\", Helvetica, Arial, sans-serif; font-size: 14px; line-height: 1.5; color: rgba(0, 0, 0, 0.65); box-sizing: border-box; margin: 0; padding: 0; list-style: none; position: relative; } .ant-list * { outline: none; } .ant-list-pagination { margin-top: 24px; text-align: right; } .ant-list-more { margin-top: 12px; text-align: center; } .ant-list-more button { padding-left: 32px; padding-right: 32px; } .ant-list-spin { text-align: center; min-height: 40px; } .ant-list-item { align-items: center; display: flex; padding-top: 12px; padding-bottom: 12px; } .ant-list-item-meta { align-items: flex-start; display: flex; font-size: 0; } .ant-list-item-meta-avatar { flex: 0; margin-right: 16px; } .ant-list-item-meta-content { flex: 1 0; } .ant-list-item-meta-title { color: rgba(0, 0, 0, 0.65); margin-bottom: 4px; font-size: 14px; line-height: 22px; } .ant-list-item-meta-title > a { color: rgba(0, 0, 0, 0.65); transition: all .3s; } .ant-list-item-meta-title > a:hover { color: #1890ff; } .ant-list-item-meta-description { color: rgba(0, 0, 0, 0.45); font-size: 14px; line-height: 22px; } .ant-list-item-content { display: flex; flex: 1; justify-content: flex-end; } .ant-list-item-content-single { justify-content: flex-start; } .ant-list-item-action { font-size: 0; flex: 0 0 auto; margin-left: 48px; padding: 0; list-style: none; } .ant-list-item-action > li { display: inline-block; color: rgba(0, 0, 0, 0.45); cursor: pointer; padding: 0 8px; position: relative; font-size: 14px; line-height: 22px; text-align: center; } .ant-list-item-action > li:first-child { padding-left: 0; } .ant-list-item-action-split { background-color: #e8e8e8; margin-top: -7px; position: absolute; top: 50%; right: 0; width: 1px; height: 14px; } .ant-list-item-main { display: flex; flex: 1; } .ant-list-item-extra { flex: 0; } .ant-list-header, .ant-list-footer { padding-top: 12px; padding-bottom: 12px; } .ant-list-split .ant-list-item { border-bottom: 1px solid #e8e8e8; } .ant-list-split .ant-list-item:last-child { border-bottom: none; } .ant-list-split .ant-list-header { border-bottom: 1px solid #e8e8e8; } .ant-list-loading .ant-spin-nested-loading { min-height: 32px; } .ant-list-bordered { border-radius: 4px; border: 1px solid #d9d9d9; } .ant-list-bordered .ant-list-header { padding-left: 24px; padding-right: 24px; } .ant-list-bordered .ant-list-footer { padding-left: 24px; padding-right: 24px; } .ant-list-bordered .ant-list-item { border-bottom: 1px solid #e8e8e8; padding-left: 24px; padding-right: 24px; } .ant-list-something-after-last-item .ant-list-item:last-child { border-bottom: 1px solid #e8e8e8; } .ant-list-bordered.ant-list-lg .ant-list-header, .ant-list-bordered.ant-list-lg .ant-list-footer { padding: 16px 24px; } .ant-list-bordered.ant-list-sm .ant-list-item { padding-left: 16px; padding-right: 16px; } .ant-list-bordered.ant-list-sm .ant-list-header, .ant-list-bordered.ant-list-sm .ant-list-footer { padding: 8px 16px; } .ant-list-lg .ant-list-item { padding-top: 16px; padding-bottom: 16px; } .ant-list-sm .ant-list-item { padding-top: 8px; padding-bottom: 8px; } .ant-list-vertical .ant-list-item { display: block; } .ant-list-vertical .ant-list-item-extra-wrap { display: flex; } .ant-list-vertical .ant-list-item-main { display: block; flex: 1; } .ant-list-vertical .ant-list-item-extra { margin-left: 58px; flex: 0; } .ant-list-vertical .ant-list-item-meta { margin-bottom: 16px; } .ant-list-vertical .ant-list-item-meta-avatar { display: none; } .ant-list-vertical .ant-list-item-meta-title { color: rgba(0, 0, 0, 0.85); margin-bottom: 12px; font-size: 16px; line-height: 24px; } .ant-list-vertical .ant-list-item-content { display: block; color: rgba(0, 0, 0, 0.65); font-size: 14px; margin-bottom: 16px; } .ant-list-vertical .ant-list-item-action { margin-left: auto; } .ant-list-vertical .ant-list-item-action > li { padding: 0 16px; } .ant-list-vertical .ant-list-item-action > li:first-child { padding-left: 0; } .ant-list-grid .ant-list-item { border-bottom: none; padding-top: 0; padding-bottom: 0; margin-bottom: 20px; } .ant-list-grid .ant-list-item-content { display: block; } .ant-list-empty { color: rgba(0, 0, 0, 0.45); padding: 16px 0; font-size: 12px; text-align: center; } @media screen and (max-width: 768px) { .ant-list-item-action { margin-left: 24px; } .ant-list-vertical .ant-list-item-extra { margin-left: 24px; } } @media screen and (max-width: 480px) { .ant-list-item { flex-wrap: wrap; } .ant-list-item-action { margin-left: 12px; } .ant-list-vertical .ant-list-item-extra-wrap { flex-wrap: wrap-reverse; } .ant-list-vertical .ant-list-item-main { min-width: 220px; } .ant-list-vertical .ant-list-item-extra { margin-left: 0; } } ",
"nz-list, nz-list-item, nz-list-item-meta { display: block; } nz-list nz-spin { display: block; } "],
                    encapsulation: core.ViewEncapsulation.None
                },] },
    ];
    /** @nocollapse */
    NzListComponent.ctorParameters = function () { return [
        { type: core.ElementRef, },
        { type: core.Renderer2, },
    ]; };
    NzListComponent.propDecorators = {
        "nzDataSource": [{ type: core.Input },],
        "nzBordered": [{ type: core.Input },],
        "nzGrid": [{ type: core.Input },],
        "nzHeader": [{ type: core.Input },],
        "nzFooter": [{ type: core.Input },],
        "nzItem": [{ type: core.ContentChild, args: ['item',] },],
        "nzSize": [{ type: core.Input },],
        "nzItemLayout": [{ type: core.Input },],
        "nzLoading": [{ type: core.Input },],
        "nzLoadMore": [{ type: core.ContentChild, args: ['loadMore',] },],
        "nzPagination": [{ type: core.ContentChild, args: ['pagination',] },],
        "nzSplit": [{ type: core.Input },],
    };
    return NzListComponent;
}());

var NzListItemActionComponent = (function () {
    function NzListItemActionComponent() {
    }
    NzListItemActionComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'nz-list-item-action',
                    template: "<ng-template #template><ng-content></ng-content></ng-template>"
                },] },
    ];
    /** @nocollapse */
    NzListItemActionComponent.ctorParameters = function () { return []; };
    NzListItemActionComponent.propDecorators = {
        "template": [{ type: core.ViewChild, args: ['template',] },],
    };
    return NzListItemActionComponent;
}());

var NzListItemComponent = (function () {
    function NzListItemComponent() {
        this._nzListItem = true;
        this.content = false;
        this._content = '';
        this.extra = false;
        this._extra = '';
    }
    Object.defineProperty(NzListItemComponent.prototype, "nzContent", {
        set: function (value) {
            if (value instanceof core.TemplateRef)
                this._contentTpl = value;
            else
                this._content = value;
            this.content = !!value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NzListItemComponent.prototype, "nzExtra", {
        set: function (value) {
            if (value instanceof core.TemplateRef)
                this._extraTpl = value;
            else
                this._extra = value;
            this.extra = !!value;
        },
        enumerable: true,
        configurable: true
    });
    NzListItemComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'nz-list-item',
                    template: "\n    <ng-template #childTpl><ng-content></ng-content></ng-template>\n    <ng-template #contentTpl>\n        <div *ngIf=\"content\" class=\"ant-list-item-content\">\n            <ng-container *ngIf=\"_content; else _contentTpl\">{{ _content }}</ng-container>\n        </div>\n    </ng-template>\n    <ng-template #actionTpl>\n        <ul #actionTpl *ngIf=\"_actions?.length > 0\" class=\"ant-list-item-action\">\n            <li *ngFor=\"let i of _actions; let idx = index\">\n                <ng-template [ngTemplateOutlet]=\"i.template\"></ng-template>\n                <em *ngIf=\"idx!==_actions.length-1\" class=\"ant-list-item-action-split\"></em>\n            </li>\n        </ul>\n    </ng-template>\n    <ng-template #mainTpl>\n        <ng-template [ngTemplateOutlet]=\"childTpl\"></ng-template>\n        <ng-template [ngTemplateOutlet]=\"contentTpl\"></ng-template>\n        <ng-template [ngTemplateOutlet]=\"actionTpl\"></ng-template>\n    </ng-template>\n    <div *ngIf=\"extra; else mainTpl\" class=\"ant-list-item-extra-wrap\">\n        <div class=\"ant-list-item-main\"><ng-template [ngTemplateOutlet]=\"mainTpl\"></ng-template></div>\n        <div class=\"ant-list-item-extra\">\n            <ng-container *ngIf=\"_extra; else _extraTpl\">{{ _extra }}</ng-container>\n        </div>\n    </div>\n    "
                },] },
    ];
    /** @nocollapse */
    NzListItemComponent.ctorParameters = function () { return []; };
    NzListItemComponent.propDecorators = {
        "_nzListItem": [{ type: core.HostBinding, args: ['class.ant-list-item',] },],
        "_actions": [{ type: core.ContentChildren, args: [NzListItemActionComponent,] },],
        "nzContent": [{ type: core.Input },],
        "nzExtra": [{ type: core.Input },],
    };
    return NzListItemComponent;
}());

var NzListItemMetaComponent = (function () {
    function NzListItemMetaComponent() {
        this._nzListItemMeta = true;
        this.avatar = false;
        this._avatar = '';
        this.title = false;
        this._title = '';
        this.desc = false;
        this._desc = '';
    }
    Object.defineProperty(NzListItemMetaComponent.prototype, "nzAvatar", {
        set: function (value) {
            if (value instanceof core.TemplateRef)
                this._avatarTpl = value;
            else
                this._avatar = value;
            this.avatar = !!value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NzListItemMetaComponent.prototype, "nzTitle", {
        set: function (value) {
            if (value instanceof core.TemplateRef)
                this._titleTpl = value;
            else
                this._title = value;
            this.title = !!value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NzListItemMetaComponent.prototype, "nzDescription", {
        set: function (value) {
            if (value instanceof core.TemplateRef)
                this._descTpl = value;
            else
                this._desc = value;
            this.desc = !!value;
        },
        enumerable: true,
        configurable: true
    });
    NzListItemMetaComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'nz-list-item-meta',
                    template: "\n    <div *ngIf=\"avatar\" class=\"ant-list-item-meta-avatar\">\n        <ng-container *ngIf=\"_avatar; else _avatarTpl\"><nz-avatar [nzSrc]=\"_avatar\"></nz-avatar></ng-container>\n    </div>\n    <div *ngIf=\"title || desc\" class=\"ant-list-item-meta-content\">\n        <h4 *ngIf=\"title\" class=\"ant-list-item-meta-title\">\n            <ng-container *ngIf=\"_title; else _titleTpl\">{{ _title }}</ng-container>\n        </h4>\n        <div *ngIf=\"desc\" class=\"ant-list-item-meta-description\">\n            <ng-container *ngIf=\"_desc; else _descTpl\">{{ _desc }}</ng-container>\n        </div>\n    </div>\n    "
                },] },
    ];
    /** @nocollapse */
    NzListItemMetaComponent.ctorParameters = function () { return []; };
    NzListItemMetaComponent.propDecorators = {
        "_nzListItemMeta": [{ type: core.HostBinding, args: ['class.ant-list-item-meta',] },],
        "nzAvatar": [{ type: core.Input },],
        "nzTitle": [{ type: core.Input },],
        "nzDescription": [{ type: core.Input },],
    };
    return NzListItemMetaComponent;
}());

var NzListModule = (function () {
    function NzListModule() {
    }
    NzListModule.decorators = [
        { type: core.NgModule, args: [{
                    imports: [common.CommonModule, ngZorroAntd.NzSpinModule, ngZorroAntd.NzGridModule, ngZorroAntd.NzAvatarModule],
                    declarations: [NzListComponent, NzListItemComponent, NzListItemMetaComponent, NzListItemActionComponent],
                    exports: [NzListComponent, NzListItemComponent, NzListItemMetaComponent, NzListItemActionComponent]
                },] },
    ];
    /** @nocollapse */
    NzListModule.ctorParameters = function () { return []; };
    return NzListModule;
}());

var NzCardTabComponent = (function () {
    function NzCardTabComponent() {
        // region: fieds
        this._title = '';
    }
    Object.defineProperty(NzCardTabComponent.prototype, "nzTabHeading", {
        set: function (value) {
            if (value instanceof core.TemplateRef)
                this._titleTpl = value;
            else
                this._title = value;
        },
        enumerable: true,
        configurable: true
    });
    NzCardTabComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'nz-card-tab',
                    template: "<ng-template #contentTpl><ng-content></ng-content></ng-template>"
                },] },
    ];
    /** @nocollapse */
    NzCardTabComponent.ctorParameters = function () { return []; };
    NzCardTabComponent.propDecorators = {
        "nzTabHeading": [{ type: core.Input },],
        "titleTpl": [{ type: core.ViewChild, args: ['titleTpl',] },],
        "contentTpl": [{ type: core.ViewChild, args: ['contentTpl',] },],
    };
    return NzCardTabComponent;
}());

var NzCardGridDirective = (function () {
    function NzCardGridDirective() {
        this._nzCardGrid = true;
    }
    NzCardGridDirective.decorators = [
        { type: core.Directive, args: [{
                    selector: '[nz-card-grid]'
                },] },
    ];
    /** @nocollapse */
    NzCardGridDirective.ctorParameters = function () { return []; };
    NzCardGridDirective.propDecorators = {
        "_nzCardGrid": [{ type: core.HostBinding, args: ['class.ant-card-grid',] },],
    };
    return NzCardGridDirective;
}());

var NzCardActionComponent = (function () {
    function NzCardActionComponent() {
    }
    NzCardActionComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'nz-card-action',
                    template: "<ng-template #tpl><ng-content></ng-content></ng-template>"
                },] },
    ];
    /** @nocollapse */
    NzCardActionComponent.ctorParameters = function () { return []; };
    NzCardActionComponent.propDecorators = {
        "tpl": [{ type: core.ViewChild, args: ['tpl',] },],
    };
    return NzCardActionComponent;
}());

var NzCardComponent = (function () {
    // endregion
    function NzCardComponent(_el, _renderer) {
        this._el = _el;
        this._renderer = _renderer;
        // region: fieds
        this.nzLoading = false;
        this.nzBordered = true;
        this._titleHas = false;
        this._title = '';
        this.nzTabSelectedIndex = 0;
        this.nzTabChange = new core.EventEmitter(true);
        // endregion
        // region: set class
        this._prefixCls = 'ant-card';
        this._classList = [];
    }
    Object.defineProperty(NzCardComponent.prototype, "nzTitle", {
        set: function (value) {
            if (value instanceof core.TemplateRef)
                this._titleTpl = value;
            else
                this._title = value;
            this._titleHas = !!value;
        },
        enumerable: true,
        configurable: true
    });
    // For 2.x compatible
    // For 2.x compatible
    NzCardComponent.prototype.getCompatibleHoverable = 
    // For 2.x compatible
    function () {
        var status = typeof this.nzHoverable !== 'undefined' && this.nzHoverable !== false;
        if (typeof this.nzNoHovering !== 'undefined') {
            return !this.nzNoHovering || status;
        }
        return status;
    };
    NzCardComponent.prototype._setClassMap = function () {
        var _this = this;
        this._classList.forEach(function (cls) { return _this._renderer.removeClass(_this._el.nativeElement, cls); });
        this._classList = [
            this._prefixCls,
            this.nzLoading && this._prefixCls + "-loading",
            typeof this.nzBordered !== 'undefined' && this.nzBordered !== false && this._prefixCls + "-bordered",
            this.getCompatibleHoverable() && this._prefixCls + "-hoverable",
            typeof this.nzNoPadding !== 'undefined' && this.nzNoPadding !== false && this._prefixCls + "-no-padding",
            // padding-transition
            // transition
            this.gridList && this.gridList.length && this._prefixCls + "-contain-grid",
            this.tabList && this.tabList.length && this._prefixCls + "-contain-tabs",
            !!this.nzType && this._prefixCls + "-type-" + this.nzType
        ].filter(function (item) { return !!item; });
        this._classList.forEach(function (cls) { return _this._renderer.addClass(_this._el.nativeElement, cls); });
    };
    NzCardComponent.prototype.ngOnInit = function () {
    };
    NzCardComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        this._setClassMap();
        // 若在此进行 `body` 赋值会导致变化检测问题，因此 `setTimeout` 只是一个小技巧罢了
        setTimeout(function () {
            if (!_this.body && _this.tabList && _this.tabList.length > 0)
                _this.body = _this.tabList.first.contentTpl;
        });
    };
    NzCardComponent.prototype.ngOnChanges = function (changes) {
        this._setClassMap();
    };
    NzCardComponent.prototype._tabChange = function (value) {
        this.body = this.tabList.find(function (item, idx) { return idx === value.index; }).contentTpl;
        this.nzTabChange.emit(value);
    };
    NzCardComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'nz-card',
                    template: "<div *ngIf=\"_titleHas || title || extra || tabList?.length > 0\" class=\"ant-card-head\"> <div class=\"ant-card-head-wrapper\"> <div *ngIf=\"_titleHas || title\" class=\"ant-card-head-title\"> <ng-container *ngIf=\"_title; else (title || _titleTpl)\">{{ _title }}</ng-container> </div> <div *ngIf=\"extra\" class=\"ant-card-extra\"> <ng-template [ngTemplateOutlet]=\"extra\"></ng-template> </div> </div> <nz-tabset *ngIf=\"tabList?.length > 0\" [nzSize]=\"'large'\" [nzSelectedIndex]=\"nzTabSelectedIndex\" (nzSelectChange)=\"_tabChange($event)\" class=\"ant-tabs-large\"> <nz-tab *ngFor=\"let i of tabList\"> <ng-template #nzTabHeading> <ng-container *ngIf=\"i._title; else i._titleTpl\">{{ i._title }}</ng-container> </ng-template> </nz-tab> </nz-tabset> </div> <div *ngIf=\"cover\" class=\"ant-card-cover\"><ng-template [ngTemplateOutlet]=\"cover\"></ng-template></div> <div class=\"ant-card-body\" *ngIf=\"nzLoading\"> <div class=\"ant-card-loading-content\"> <p class=\"ant-card-loading-block\" style=\"width: 94%;\"></p> <p> <span class=\"ant-card-loading-block\" style=\"width: 28%;\"></span> <span class=\"ant-card-loading-block\" style=\"width: 62%;\"></span> </p> <p> <span class=\"ant-card-loading-block\" style=\"width: 22%;\"></span> <span class=\"ant-card-loading-block\" style=\"width: 66%;\"></span> </p> <p> <span class=\"ant-card-loading-block\" style=\"width: 56%;\"></span> <span class=\"ant-card-loading-block\" style=\"width: 39%;\"></span> </p> <p> <span class=\"ant-card-loading-block\" style=\"width: 21%;\"></span> <span class=\"ant-card-loading-block\" style=\"width: 15%;\"></span> <span class=\"ant-card-loading-block\" style=\"width: 40%;\"></span> </p> </div> </div> <div class=\"ant-card-body\" *ngIf=\"!nzLoading\" [ngStyle]=\"nzBodyStyle\"> <ng-template [ngTemplateOutlet]=\"body\"></ng-template> <ng-content></ng-content> </div> <ul *ngIf=\"actionList?.length>0\" class=\"ant-card-actions\"> <li *ngFor=\"let i of actionList\" [ngStyle]=\"{'width.%':100/actionList.length}\"> <span><ng-template [ngTemplateOutlet]=\"i.tpl\"></ng-template></span> </li> </ul> ",
                    styles: ["/* stylelint-disable at-rule-empty-line-before,at-rule-name-space-after,at-rule-no-unknown */ /* stylelint-disable declaration-bang-space-before */ /* stylelint-disable declaration-bang-space-before */ .ant-card { font-family: \"Helvetica Neue For Number\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei\", \"Helvetica Neue\", Helvetica, Arial, sans-serif; font-size: 14px; line-height: 1.5; color: rgba(0, 0, 0, 0.65); box-sizing: border-box; margin: 0; padding: 0; list-style: none; background: #fff; border-radius: 2px; position: relative; transition: all .3s; } .ant-card-hoverable { cursor: pointer; } .ant-card-hoverable:hover { box-shadow: 0 2px 8px rgba(0, 0, 0, 0.09); border-color: rgba(0, 0, 0, 0.09); } .ant-card-bordered { border: 1px solid #e8e8e8; } .ant-card-head { background: #fff; border-bottom: 1px solid #e8e8e8; padding: 0 24px; border-radius: 2px 2px 0 0; zoom: 1; margin-bottom: -1px; min-height: 48px; } .ant-card-head:before, .ant-card-head:after { content: \"\ \"; display: table; } .ant-card-head:after { clear: both; visibility: hidden; font-size: 0; height: 0; } .ant-card-head-wrapper { display: flex; } .ant-card-head-title { font-size: 16px; padding: 16px 0; text-overflow: ellipsis; overflow: hidden; white-space: nowrap; color: rgba(0, 0, 0, 0.85); font-weight: 500; display: inline-block; flex: 1; } .ant-card-head .ant-tabs { margin-bottom: -17px; clear: both; } .ant-card-head .ant-tabs-bar { border-bottom: 1px solid #e8e8e8; } .ant-card-extra { float: right; padding: 17.5px 0; text-align: right; margin-left: auto; } .ant-card-body { padding: 24px; zoom: 1; } .ant-card-body:before, .ant-card-body:after { content: \"\ \"; display: table; } .ant-card-body:after { clear: both; visibility: hidden; font-size: 0; height: 0; } .ant-card-contain-grid .ant-card-body { margin: -1px 0 0 -1px; padding: 0; } .ant-card-grid { border-radius: 0; border: 0; box-shadow: 1px 0 0 0 #e8e8e8, 0 1px 0 0 #e8e8e8, 1px 1px 0 0 #e8e8e8, 1px 0 0 0 #e8e8e8 inset, 0 1px 0 0 #e8e8e8 inset; width: 33.33%; float: left; padding: 24px; transition: all .3s; } .ant-card-grid:hover { position: relative; z-index: 1; box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15); } .ant-card-contain-tabs .ant-card-head-title { padding-bottom: 0; min-height: 32px; } .ant-card-contain-tabs .ant-card-extra { padding-bottom: 0; } .ant-card-cover > * { width: 100%; display: block; } .ant-card-actions { border-top: 1px solid #e8e8e8; background: #fafafa; zoom: 1; list-style: none; margin: 0; padding: 0; } .ant-card-actions:before, .ant-card-actions:after { content: \"\ \"; display: table; } .ant-card-actions:after { clear: both; visibility: hidden; font-size: 0; height: 0; } .ant-card-actions > li { float: left; text-align: center; margin: 12px 0; color: rgba(0, 0, 0, 0.45); } .ant-card-actions > li > span { display: inline-block; font-size: 14px; cursor: pointer; line-height: 22px; min-width: 32px; position: relative; } .ant-card-actions > li > span:hover { color: #1890ff; transition: color .3s; } .ant-card-actions > li > span > .anticon { font-size: 16px; } .ant-card-actions > li > span a { color: rgba(0, 0, 0, 0.45); } .ant-card-actions > li > span a:hover { color: #1890ff; } .ant-card-actions > li:not(:last-child) { border-right: 1px solid #e8e8e8; } .ant-card-wider-padding .ant-card-head { padding: 0 32px; } .ant-card-wider-padding .ant-card-body { padding: 24px 32px; } .ant-card-padding-transition .ant-card-head, .ant-card-padding-transition .ant-card-body { transition: padding .3s; } .ant-card-padding-transition .ant-card-extra { transition: right .3s; } .ant-card-type-inner .ant-card-head { padding: 0 24px; background: #fafafa; } .ant-card-type-inner .ant-card-head-title { padding: 12px 0; font-size: 14px; } .ant-card-type-inner .ant-card-body { padding: 16px 24px; } .ant-card-type-inner .ant-card-extra { padding: 13.5px 0; } .ant-card-meta { margin: -4px 0; } .ant-card-meta-content { display: table-row; } .ant-card-meta-avatar { padding-right: 16px; display: table-cell; } .ant-card-meta-detail { display: table-cell; vertical-align: top; position: relative; } .ant-card-meta-detail > div:not(:last-child) { margin-bottom: 8px; } .ant-card-meta-title { font-size: 16px; text-overflow: ellipsis; width: 100%; overflow: hidden; white-space: nowrap; color: rgba(0, 0, 0, 0.85); font-weight: 500; } .ant-card-meta-description { color: rgba(0, 0, 0, 0.45); } .ant-card-loading .ant-card-body { user-select: none; padding: 0; } .ant-card-loading-content { padding: 24px; } .ant-card-loading-content p { margin: 0; } .ant-card-loading-block { display: inline-block; margin: 5px 2% 0 0; height: 14px; border-radius: 2px; background: linear-gradient(90deg, rgba(207, 216, 220, 0.2), rgba(207, 216, 220, 0.4), rgba(207, 216, 220, 0.2)); animation: card-loading 1.4s ease infinite; background-size: 600% 600%; } @keyframes card-loading { 0%, 100% { background-position: 0 50%; } 50% { background-position: 100% 50%; } } ",
"nz-card, nz-card nz-card-meta { display: block; } nz-card.ant-card-no-padding .ant-card-body { padding: 0; } nz-card .ant-tabs-large .ant-tabs-tab { padding: 16px; } nz-card .ant-tabs-nav .ant-tabs-tab-active { font-weight: 500; } "],
                    encapsulation: core.ViewEncapsulation.None
                },] },
    ];
    /** @nocollapse */
    NzCardComponent.ctorParameters = function () { return [
        { type: core.ElementRef, },
        { type: core.Renderer2, },
    ]; };
    NzCardComponent.propDecorators = {
        "nzLoading": [{ type: core.Input },],
        "nzBordered": [{ type: core.Input },],
        "nzHoverable": [{ type: core.Input },],
        "nzNoPadding": [{ type: core.Input },],
        "nzBodyStyle": [{ type: core.Input },],
        "nzNoHovering": [{ type: core.Input },],
        "nzType": [{ type: core.Input },],
        "nzTitle": [{ type: core.Input },],
        "title": [{ type: core.ContentChild, args: ['title',] },],
        "extra": [{ type: core.ContentChild, args: ['extra',] },],
        "cover": [{ type: core.ContentChild, args: ['cover',] },],
        "body": [{ type: core.ContentChild, args: ['body',] },],
        "nzTabSelectedIndex": [{ type: core.Input },],
        "nzTabChange": [{ type: core.Output },],
        "tabList": [{ type: core.ContentChildren, args: [NzCardTabComponent,] },],
        "gridList": [{ type: core.ContentChildren, args: [NzCardGridDirective,] },],
        "actionList": [{ type: core.ContentChildren, args: [NzCardActionComponent,] },],
    };
    return NzCardComponent;
}());

var NzCardMetaComponent = (function () {
    function NzCardMetaComponent() {
        this._nzListItemMeta = true;
        this.avatar = false;
        this._avatar = '';
        this.title = false;
        this._title = '';
        this.desc = false;
        this._desc = '';
    }
    Object.defineProperty(NzCardMetaComponent.prototype, "nzAvatar", {
        set: function (value) {
            if (value instanceof core.TemplateRef)
                this._avatarTpl = value;
            else
                this._avatar = value;
            this.avatar = !!value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NzCardMetaComponent.prototype, "nzTitle", {
        set: function (value) {
            if (value instanceof core.TemplateRef)
                this._titleTpl = value;
            else
                this._title = value;
            this.title = !!value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NzCardMetaComponent.prototype, "nzDescription", {
        set: function (value) {
            if (value instanceof core.TemplateRef)
                this._descTpl = value;
            else
                this._desc = value;
            this.desc = !!value;
        },
        enumerable: true,
        configurable: true
    });
    NzCardMetaComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'nz-card-meta',
                    template: "\n    <div class=\"ant-card-meta-content\">\n        <div *ngIf=\"avatar\" class=\"ant-card-meta-avatar\">\n            <ng-container *ngIf=\"_avatar; else _avatarTpl\"><nz-avatar [nzSrc]=\"_avatar\"></nz-avatar></ng-container>\n        </div>\n        <div *ngIf=\"title || desc\" class=\"ant-card-meta-detail\">\n            <div *ngIf=\"title\" class=\"ant-card-meta-title\">\n                <ng-container *ngIf=\"_title; else _titleTpl\">{{ _title }}</ng-container>\n            </div>\n            <div *ngIf=\"desc\" class=\"ant-card-meta-description\">\n                <ng-container *ngIf=\"_desc; else _descTpl\">{{ _desc }}</ng-container>\n            </div>\n        </div>\n    </div>\n    "
                },] },
    ];
    /** @nocollapse */
    NzCardMetaComponent.ctorParameters = function () { return []; };
    NzCardMetaComponent.propDecorators = {
        "_nzListItemMeta": [{ type: core.HostBinding, args: ['class.ant-card-meta',] },],
        "nzAvatar": [{ type: core.Input },],
        "nzTitle": [{ type: core.Input },],
        "nzDescription": [{ type: core.Input },],
    };
    return NzCardMetaComponent;
}());

var NzCardModule = (function () {
    function NzCardModule() {
    }
    NzCardModule.decorators = [
        { type: core.NgModule, args: [{
                    imports: [common.CommonModule, ngZorroAntd.NzSpinModule, ngZorroAntd.NzTabsModule, ngZorroAntd.NzAvatarModule],
                    declarations: [NzCardComponent, NzCardTabComponent, NzCardMetaComponent, NzCardGridDirective, NzCardActionComponent],
                    exports: [NzCardComponent, NzCardTabComponent, NzCardMetaComponent, NzCardGridDirective, NzCardActionComponent]
                },] },
    ];
    /** @nocollapse */
    NzCardModule.ctorParameters = function () { return []; };
    return NzCardModule;
}());

var NzDividerComponent = (function () {
    function NzDividerComponent(el, renderer) {
        this.el = el;
        this.renderer = renderer;
        // region fields
        this.title = false;
        this._title = '';
        this.nzType = 'horizontal';
        this.nzDashed = false;
        // endregion
        this._classMap = [];
    }
    Object.defineProperty(NzDividerComponent.prototype, "nzTitle", {
        set: function (value) {
            if (value instanceof core.TemplateRef)
                this._titleTpl = value;
            else
                this._title = value;
            this.title = !!value;
        },
        enumerable: true,
        configurable: true
    });
    NzDividerComponent.prototype.setClass = function () {
        var _this = this;
        this._classMap.forEach(function (cls) { return _this.renderer.removeClass(_this.el.nativeElement, cls); });
        this._classMap = ['ant-divider', "ant-divider-" + this.nzType];
        if (this.title)
            this._classMap.push("ant-divider-with-text");
        if (typeof this.nzDashed !== 'undefined' && this.nzDashed !== false)
            this._classMap.push("ant-divider-dashed");
        this._classMap.forEach(function (cls) { return _this.renderer.addClass(_this.el.nativeElement, cls); });
    };
    NzDividerComponent.prototype.ngOnChanges = function (changes) {
        this.setClass();
    };
    NzDividerComponent.prototype.ngOnInit = function () {
        this.setClass();
    };
    NzDividerComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'nz-divider',
                    template: "\n    <span *ngIf=\"title\" class=\"ant-divider-inner-text\">\n        <ng-container *ngIf=\"_title; else _titleTpl\">{{ _title }}</ng-container>\n    </span>\n    ",
                    styles: ["/* stylelint-disable at-rule-empty-line-before,at-rule-name-space-after,at-rule-no-unknown */ /* stylelint-disable declaration-bang-space-before */ /* stylelint-disable declaration-bang-space-before */ .ant-divider { font-family: \"Helvetica Neue For Number\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei\", \"Helvetica Neue\", Helvetica, Arial, sans-serif; font-size: 14px; line-height: 1.5; color: rgba(0, 0, 0, 0.65); box-sizing: border-box; margin: 0; padding: 0; list-style: none; background: #e8e8e8; } .ant-divider, .ant-divider-vertical { margin: 0 8px; display: inline-block; height: 0.9em; width: 1px; vertical-align: middle; position: relative; top: -0.06em; } .ant-divider-horizontal { display: block; height: 1px; width: 100%; margin: 24px 0; } .ant-divider-horizontal.ant-divider-with-text { display: table; white-space: nowrap; text-align: center; background: transparent; font-weight: 500; color: rgba(0, 0, 0, 0.85); font-size: 16px; margin: 16px 0; } .ant-divider-horizontal.ant-divider-with-text:before, .ant-divider-horizontal.ant-divider-with-text:after { content: ''; display: table-cell; position: relative; top: 50%; width: 50%; border-top: 1px solid #e8e8e8; transform: translateY(50%); } .ant-divider-inner-text { display: inline-block; padding: 0 24px; } .ant-divider-dashed { background: none; border-top: 1px dashed #e8e8e8; } .ant-divider-horizontal.ant-divider-with-text.ant-divider-dashed { border-top: 0; } .ant-divider-horizontal.ant-divider-with-text.ant-divider-dashed:before, .ant-divider-horizontal.ant-divider-with-text.ant-divider-dashed:after { border-style: dashed none none; } ",
"nz-divider { display: block; } "],
                    encapsulation: core.ViewEncapsulation.None
                },] },
    ];
    /** @nocollapse */
    NzDividerComponent.ctorParameters = function () { return [
        { type: core.ElementRef, },
        { type: core.Renderer2, },
    ]; };
    NzDividerComponent.propDecorators = {
        "nzTitle": [{ type: core.Input },],
        "nzType": [{ type: core.Input },],
        "nzDashed": [{ type: core.Input },],
    };
    return NzDividerComponent;
}());

var NzDividerModule = (function () {
    function NzDividerModule() {
    }
    NzDividerModule.decorators = [
        { type: core.NgModule, args: [{
                    imports: [common.CommonModule],
                    declarations: [NzDividerComponent],
                    exports: [NzDividerComponent]
                },] },
    ];
    /** @nocollapse */
    NzDividerModule.ctorParameters = function () { return []; };
    return NzDividerModule;
}());

var NzIconComponent = (function () {
    function NzIconComponent(el, renderer) {
        this.el = el;
        this.renderer = renderer;
        this.nzSpin = false;
        this._classMap = [];
    }
    NzIconComponent.prototype.setClass = function () {
        var _this = this;
        this._classMap.forEach(function (cls) { return _this.renderer.removeClass(_this.el.nativeElement, cls); });
        this._classMap = ['anticon'];
        if (typeof this.nzSpin !== 'undefined' && this.nzSpin !== false)
            this._classMap.push("anticon-spin");
        if (this.nzType)
            this._classMap.push("anticon-" + this.nzType);
        this._classMap.forEach(function (cls) { return _this.renderer.addClass(_this.el.nativeElement, cls); });
    };
    NzIconComponent.prototype.ngOnChanges = function (changes) {
        this.setClass();
    };
    NzIconComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'nz-icon',
                    template: "",
                    styles: ["nz-icon { display: inline-block; } "],
                    encapsulation: core.ViewEncapsulation.None
                },] },
    ];
    /** @nocollapse */
    NzIconComponent.ctorParameters = function () { return [
        { type: core.ElementRef, },
        { type: core.Renderer2, },
    ]; };
    NzIconComponent.propDecorators = {
        "nzSpin": [{ type: core.Input },],
        "nzType": [{ type: core.Input },],
    };
    return NzIconComponent;
}());

var NzIconModule = (function () {
    function NzIconModule() {
    }
    NzIconModule.decorators = [
        { type: core.NgModule, args: [{
                    imports: [common.CommonModule],
                    declarations: [NzIconComponent],
                    exports: [NzIconComponent]
                },] },
    ];
    /** @nocollapse */
    NzIconModule.ctorParameters = function () { return []; };
    return NzIconModule;
}());

function toBoolean(value) {
    return value === '' || (value && value !== 'false');
}

var NzRadioExtraComponent = (function () {
    function NzRadioExtraComponent(_elementRef, _renderer) {
        this._elementRef = _elementRef;
        this._renderer = _renderer;
        this._checked = false;
        this._disabled = false;
        this._focused = false;
        this._prefixCls = 'ant-radio';
        this._innerPrefixCls = this._prefixCls + "-inner";
        this._inputPrefixCls = this._prefixCls + "-input";
        // ngModel Access
        this.onChange = Function.prototype;
        this.onTouched = Function.prototype;
        this._el = this._elementRef.nativeElement;
    }
    Object.defineProperty(NzRadioExtraComponent.prototype, "nzChecked", {
        get: function () {
            return this._checked;
        },
        set: function (value) {
            this._checked = toBoolean(value);
            this.setClassMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NzRadioExtraComponent.prototype, "nzValue", {
        get: function () {
            return this._value;
        },
        set: function (value) {
            if (this._value === value) {
                return;
            }
            this._value = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NzRadioExtraComponent.prototype, "nzDisabled", {
        get: function () {
            return this._disabled;
        },
        set: function (value) {
            this._disabled = toBoolean(value);
            this.setClassMap();
        },
        enumerable: true,
        configurable: true
    });
    NzRadioExtraComponent.prototype.onClick = function (e) {
        e.preventDefault();
        if (!this._disabled) {
            // this._checked = true;
            this.updateValue(!this._checked);
        }
    };
    NzRadioExtraComponent.prototype.nzFocus = function () {
        this._focused = true;
        this.setClassMap();
    };
    NzRadioExtraComponent.prototype.nzBlur = function () {
        this._focused = false;
        this.setClassMap();
    };
    NzRadioExtraComponent.prototype.setClassMap = function () {
        this._classMap = (_a = {},
            _a[this._prefixCls] = true,
            _a[this._prefixCls + "-checked"] = this._checked,
            _a[this._prefixCls + "-focused"] = this._focused,
            _a[this._prefixCls + "-disabled"] = this._disabled,
            _a);
        var _a;
    };
    NzRadioExtraComponent.prototype.ngOnInit = function () {
        this._renderer.addClass(this._el, this._prefixCls + "-wrapper");
        this.setClassMap();
    };
    NzRadioExtraComponent.prototype.updateValue = function (value) {
        if (value === this._checked) {
            return;
        }
        this.onChange(value);
        this._checked = value;
        this.setClassMap();
    };
    NzRadioExtraComponent.prototype.writeValue = function (value) {
        this._checked = value;
        this.setClassMap();
    };
    NzRadioExtraComponent.prototype.registerOnChange = function (fn) {
        this.onChange = fn;
    };
    NzRadioExtraComponent.prototype.registerOnTouched = function (fn) {
        this.onTouched = fn;
    };
    NzRadioExtraComponent.decorators = [
        { type: core.Component, args: [{
                    selector: '[nz-radio-extra]',
                    encapsulation: core.ViewEncapsulation.None,
                    template: "\n      <span [ngClass]=\"_classMap\">\n        <span [ngClass]=\"_innerPrefixCls\"></span>\n        <input type=\"radio\" [ngClass]=\"_inputPrefixCls\" [(ngModel)]=\"nzChecked\" (focus)=\"nzFocus()\" (blur)=\"nzBlur()\">\n      </span>\n      <ng-content></ng-content>\n    ",
                    providers: [
                        {
                            provide: forms.NG_VALUE_ACCESSOR,
                            useExisting: core.forwardRef(function () { return NzRadioExtraComponent; }),
                            multi: true
                        }
                    ],
                    styles: ["/* stylelint-disable at-rule-empty-line-before,at-rule-name-space-after,at-rule-no-unknown */ /* stylelint-disable declaration-bang-space-before */ /* stylelint-disable declaration-bang-space-before */ .ant-radio-group { display: inline-block; font-size: 14px; } .ant-radio-wrapper { font-size: 14px; display: inline-block; position: relative; white-space: nowrap; margin-right: 8px; cursor: pointer; } .ant-radio { white-space: nowrap; outline: none; display: inline-block; position: relative; line-height: 1; vertical-align: text-bottom; cursor: pointer; } .ant-radio-wrapper:hover .ant-radio .ant-radio-inner, .ant-radio:hover .ant-radio-inner, .ant-radio-focused .ant-radio-inner { border-color: #1890ff; } .ant-radio-checked:after { position: absolute; top: 0; left: 0; width: 100%; height: 100%; border-radius: 50%; border: 1px solid #1890ff; content: ''; animation: antRadioEffect 0.36s ease-in-out; animation-fill-mode: both; visibility: hidden; } .ant-radio:hover:after, .ant-radio-wrapper:hover .ant-radio:after { visibility: visible; } .ant-radio-inner { position: relative; top: 0; left: 0; display: block; width: 14px; height: 14px; border-width: 1px; border-style: solid; border-radius: 14px; border-color: #d9d9d9; background-color: #fff; transition: all 0.3s; } .ant-radio-inner:after { position: absolute; width: 6px; height: 6px; left: 3px; top: 3px; border-radius: 4px; display: table; border-top: 0; border-left: 0; content: ' '; background-color: #1890ff; opacity: 0; transform: scale(0); transition: all 0.3s cubic-bezier(0.78, 0.14, 0.15, 0.86); } .ant-radio-input { position: absolute; left: 0; z-index: 1; cursor: pointer; opacity: 0; top: 0; bottom: 0; right: 0; } .ant-radio-checked .ant-radio-inner { border-color: #1890ff; } .ant-radio-checked .ant-radio-inner:after { transform: scale(1); opacity: 1; transition: all 0.3s cubic-bezier(0.78, 0.14, 0.15, 0.86); } .ant-radio-disabled .ant-radio-inner { border-color: #d9d9d9 !important; background-color: #f5f5f5; } .ant-radio-disabled .ant-radio-inner:after { background-color: #ccc; } .ant-radio-disabled .ant-radio-input { cursor: not-allowed; } .ant-radio-disabled + span { color: rgba(0, 0, 0, 0.25); cursor: not-allowed; } span.ant-radio + * { padding-left: 8px; padding-right: 8px; } .ant-radio-button-wrapper { margin: 0; height: 32px; line-height: 30px; color: rgba(0, 0, 0, 0.65); display: inline-block; transition: all 0.3s ease; cursor: pointer; border: 1px solid #d9d9d9; border-left: 0; background: #fff; padding: 0 16px; position: relative; } .ant-radio-button-wrapper a { color: rgba(0, 0, 0, 0.65); } .ant-radio-button-wrapper > .ant-radio-button { margin-left: 0; display: block; width: 0; height: 0; } .ant-radio-group-large .ant-radio-button-wrapper { height: 40px; line-height: 38px; } .ant-radio-group-small .ant-radio-button-wrapper { height: 24px; line-height: 22px; padding: 0 12px; } .ant-radio-group-small .ant-radio-button-wrapper:first-child { border-radius: 2px 0 0 2px; } .ant-radio-group-small .ant-radio-button-wrapper:last-child { border-radius: 0 2px 2px 0; } .ant-radio-button-wrapper:not(:first-child)::before { content: \"\"; display: block; top: 0; left: -1px; width: 1px; height: 100%; position: absolute; background-color: #d9d9d9; } .ant-radio-button-wrapper:first-child { border-radius: 4px 0 0 4px; border-left: 1px solid #d9d9d9; } .ant-radio-button-wrapper:last-child { border-radius: 0 4px 4px 0; } .ant-radio-button-wrapper:first-child:last-child { border-radius: 4px; } .ant-radio-button-wrapper:hover, .ant-radio-button-wrapper-focused { color: #1890ff; position: relative; } .ant-radio-button-wrapper .ant-radio-inner, .ant-radio-button-wrapper input[type=\"checkbox\"], .ant-radio-button-wrapper input[type=\"radio\"] { opacity: 0; filter: alpha(opacity=0); width: 0; height: 0; } .ant-radio-button-wrapper-checked { background: #fff; border-color: #1890ff; color: #1890ff; box-shadow: -1px 0 0 0 #1890ff; z-index: 1; } .ant-radio-button-wrapper-checked::before { background-color: #1890ff !important; opacity: 0.1; } .ant-radio-button-wrapper-checked:first-child { border-color: #1890ff; box-shadow: none !important; } .ant-radio-button-wrapper-checked:hover { border-color: #40a9ff; box-shadow: -1px 0 0 0 #40a9ff; color: #40a9ff; } .ant-radio-button-wrapper-checked:active { border-color: #096dd9; box-shadow: -1px 0 0 0 #096dd9; color: #096dd9; } .ant-radio-button-wrapper-disabled { border-color: #d9d9d9; background-color: #f5f5f5; cursor: not-allowed; color: rgba(0, 0, 0, 0.25); } .ant-radio-button-wrapper-disabled:first-child, .ant-radio-button-wrapper-disabled:hover { border-color: #d9d9d9; background-color: #f5f5f5; color: rgba(0, 0, 0, 0.25); } .ant-radio-button-wrapper-disabled:first-child { border-left-color: #d9d9d9; } .ant-radio-button-wrapper-disabled.ant-radio-button-wrapper-checked { color: #fff; background-color: #e6e6e6; border-color: #d9d9d9; box-shadow: none; } @keyframes antRadioEffect { 0% { transform: scale(1); opacity: 0.5; } 100% { transform: scale(1.6); opacity: 0; } } "]
                },] },
    ];
    /** @nocollapse */
    NzRadioExtraComponent.ctorParameters = function () { return [
        { type: core.ElementRef, },
        { type: core.Renderer2, },
    ]; };
    NzRadioExtraComponent.propDecorators = {
        "nzChecked": [{ type: core.Input }, { type: core.HostBinding, args: ['class.ant-radio-wrapper-checked',] },],
        "nzValue": [{ type: core.Input },],
        "nzDisabled": [{ type: core.Input }, { type: core.HostBinding, args: ['class.ant-radio-wrapper-disabled',] },],
        "onClick": [{ type: core.HostListener, args: ['click', ['$event'],] },],
    };
    return NzRadioExtraComponent;
}());

// import { NzSpinModule, NzGridModule, NzAvatarModule } from 'ng-zorro-antd';
var NzRadioExtraModule = (function () {
    function NzRadioExtraModule() {
    }
    NzRadioExtraModule.decorators = [
        { type: core.NgModule, args: [{
                    imports: [common.CommonModule, forms.FormsModule],
                    declarations: [NzRadioExtraComponent],
                    exports: [NzRadioExtraComponent]
                },] },
    ];
    /** @nocollapse */
    NzRadioExtraModule.ctorParameters = function () { return []; };
    return NzRadioExtraModule;
}());

var MODULES = [
    NzListModule,
    NzCardModule,
    NzDividerModule,
    NzIconModule,
    NzRadioExtraModule
];
var NgZorroAntdExtraRootModule = (function () {
    function NgZorroAntdExtraRootModule() {
    }
    NgZorroAntdExtraRootModule.decorators = [
        { type: core.NgModule, args: [{
                    imports: MODULES,
                    exports: MODULES
                },] },
    ];
    /** @nocollapse */
    NgZorroAntdExtraRootModule.ctorParameters = function () { return []; };
    return NgZorroAntdExtraRootModule;
}());
var NgZorroAntdExtraModule = (function () {
    function NgZorroAntdExtraModule() {
    }
    NgZorroAntdExtraModule.forRoot = function () {
        return { ngModule: NgZorroAntdExtraRootModule };
    };
    NgZorroAntdExtraModule.decorators = [
        { type: core.NgModule, args: [{ exports: MODULES },] },
    ];
    /** @nocollapse */
    NgZorroAntdExtraModule.ctorParameters = function () { return []; };
    return NgZorroAntdExtraModule;
}());

exports.NgZorroAntdExtraRootModule = NgZorroAntdExtraRootModule;
exports.NgZorroAntdExtraModule = NgZorroAntdExtraModule;
exports.NzListItemActionComponent = NzListItemActionComponent;
exports.NzListItemMetaComponent = NzListItemMetaComponent;
exports.NzListItemComponent = NzListItemComponent;
exports.NzListComponent = NzListComponent;
exports.NzListModule = NzListModule;
exports.NzCardComponent = NzCardComponent;
exports.NzCardTabComponent = NzCardTabComponent;
exports.NzCardMetaComponent = NzCardMetaComponent;
exports.NzCardGridDirective = NzCardGridDirective;
exports.NzCardActionComponent = NzCardActionComponent;
exports.NzCardModule = NzCardModule;
exports.NzDividerComponent = NzDividerComponent;
exports.NzDividerModule = NzDividerModule;
exports.NzIconComponent = NzIconComponent;
exports.NzIconModule = NzIconModule;
exports.NzRadioExtraComponent = NzRadioExtraComponent;
exports.NzRadioExtraModule = NzRadioExtraModule;

Object.defineProperty(exports, '__esModule', { value: true });

})));
