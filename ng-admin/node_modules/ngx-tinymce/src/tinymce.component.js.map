{"version":3,"file":"tinymce.component.js","sourceRoot":"","sources":["../../.ng_build/src/tinymce.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, forwardRef, OnChanges, OnDestroy, Input, OnInit, AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, TemplateRef, Output, EventEmitter, SimpleChanges, Optional } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Router, ActivationEnd } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\nimport { debounceTime, filter } from 'rxjs/operators';\nimport { ScriptService } from './script.service';\nimport { TinymceOptions } from './tinymce.options';\n\ndeclare const window: any;\ndeclare const tinymce: any;\n\n@Component({\n    // tslint:disable-next-line:component-selector\n    selector: 'tinymce',\n    template: `<textarea id=\"{{id}}\" class=\"tinymce-selector\"></textarea>\n    <div class=\"loading\" *ngIf=\"load\">\n        <ng-container *ngIf=\"_loading; else _loadingTpl\">{{_loading}}</ng-container>\n    </div>`,\n    styles: [ `:host .tinymce-selector{display:none}` ],\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => TinymceComponent),\n        multi: true\n    }],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TinymceComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy, ControlValueAccessor {\n    private instance: any;\n    private value: string;\n    private inited = false;\n    private route$: Subscription;\n    load = true;\n    id = `_tinymce-${Math.random().toString(36).substring(2)}`;\n    onChange: any = Function.prototype;\n    onTouched: any = Function.prototype;\n\n    @Input() config: any;\n\n    _loading: string;\n    _loadingTpl: TemplateRef<any>;\n    @Input()\n    set loading(value: string | TemplateRef<any>) {\n        if (value instanceof TemplateRef)\n            this._loadingTpl = value;\n        else\n            this._loading = value;\n    }\n\n    constructor(\n        private defConfig: TinymceOptions,\n        private ss: ScriptService,\n        @Optional() private router: Router,\n        private cd: ChangeDetectorRef\n    ) {}\n\n    private init() {\n        if (!window.tinymce)\n            throw new Error('tinymce js文件加载失败');\n\n        if (this.instance) return;\n\n        if (this.defConfig.baseURL) tinymce.baseURL = this.defConfig.baseURL;\n\n        const userOptions = Object.assign({ }, this.defConfig.config, this.config);\n\n        const options = Object.assign({\n            selector: `#` + this.id\n        }, this.defConfig.config, this.config, {\n            setup: (editor: any) => {\n                this.instance = editor;\n                editor.on('change keyup', () => {\n                    this.value = editor.getContent();\n                    this.onChange(this.value);\n                    this.onTouched(this.value);\n                });\n                if (typeof userOptions.setup === 'function') {\n                    userOptions.setup(editor);\n                }\n            },\n            init_instance_callback: (editor: any) => {\n                if (editor && this.value)\n                    editor.setContent(this.value);\n                if (typeof userOptions.init_instance_callback === 'function') {\n                    userOptions.init_instance_callback(editor);\n                }\n\n                this.load = false;\n                this.cd.markForCheck();\n            }\n        });\n        if (userOptions.auto_focus) options.auto_focus = this.id;\n        tinymce.init(options);\n    }\n\n    private destroy() {\n        if (!this.instance) {\n            return ;\n        }\n        this.instance.off();\n        this.instance.remove('#' + this.id);\n        this.instance = null;\n    }\n\n    ngOnInit() {\n        this.inited = true;\n        this.route$ = <any>this.router.events.pipe(\n            filter(e => e instanceof ActivationEnd),\n            debounceTime(100),\n            filter(e => !!document.querySelector('#' + this.id))\n        ).subscribe(res => {\n            this.destroy();\n            this.init();\n        });\n    }\n\n    ngAfterViewInit(): void {\n        // 已经存在对象无须进入懒加载模式\n        if (window.tinymce) {\n            this.init();\n            return;\n        }\n\n        const baseURL = this.defConfig && this.defConfig.baseURL;\n        const fileName = this.defConfig && this.defConfig.fileName;\n        this.ss.load((baseURL || './assets/tinymce/') + (fileName || 'tinymce.min.js')).getChangeEmitter().subscribe(res => {\n            this.init();\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (this.inited && changes.config) {\n            this.destroy();\n            this.init();\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.destroy();\n        if (this.route$) this.route$.unsubscribe();\n    }\n\n    writeValue(value: string): void {\n        this.value = value;\n        if (this.instance) {\n            this.instance.setContent(this.value);\n        }\n    }\n\n    registerOnChange(fn: (_: any) => {}): void { this.onChange = fn; }\n    registerOnTouched(fn: () => {}): void { this.onTouched = fn; }\n\n    setDisabledState(isDisabled: boolean): void {\n        if (!this.instance) return;\n        if (isDisabled) {\n            this.instance.disabled();\n        } else {\n            this.instance.setEnabled();\n        }\n    }\n}\n"]}