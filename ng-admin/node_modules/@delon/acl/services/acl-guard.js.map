{"version":3,"file":"acl-guard.js","sourceRoot":"","sources":["../../../.ng_build/acl/services/acl-guard.ts"],"names":[],"mappings":"AAAA,OAAO,EAA8F,MAAM,EAAE,MAAM,iBAAiB,CAAC;AACrI,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACnD,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAC7C,OAAO,EAAE,EAAE,EAAE,MAAM,oBAAoB,CAAC;AACxC,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AAC1C,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C,OAAO,EAAE,kBAAkB,EAAc,MAAM,gBAAgB,CAAC;;IAK5D,kBACY,GAAe,EACf,MAAc,EACc;QAF5B,QAAG,GAAH,GAAG,CAAY;QACf,WAAM,GAAN,MAAM,CAAQ;QACc,YAAO,GAAP,OAAO;KAC3C;IAEI,0BAAO,GAAf,UAAgB,KAA0C,EAAE,GAAiB;QAA7E,iBAQC;QAR2D,oBAAA,EAAA,SAAiB;QACzE,MAAM,CAAC,CAAC,KAAK,IAAI,KAAK,YAAY,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC,KAAmB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CACtH,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAf,CAAe,CAAC,EACzB,GAAG,CAAC,UAAA,CAAC;YACD,EAAE,CAAC,CAAC,CAAC,CAAC;gBAAC,MAAM,CAAC;YACd,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAI,CAAC,OAAO,CAAC,SAAS,IAAI,MAAM,CAAC,CAAC;SAC/D,CAAC,CACL,CAAC;KACL;IAED,eAAe;;IACf,0BAAO;;IAAP,UAAQ,KAAY;QAChB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC;KAC/D;IACD,qBAAqB;;IACrB,mCAAgB;;IAAhB,UAAiB,UAAkC,EAAE,KAA0B;QAC3E,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;KAC9C;IACD,QAAQ;;IACR,8BAAW;;IAAX,UAAY,KAA6B,EAAE,KAA0B;QACjE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC;KAC/D;;gBA9BJ,UAAU;;;;gBAJF,UAAU;gBALkF,MAAM;gDAelG,MAAM,SAAC,kBAAkB;;mBAflC;;SAUa,QAAQ","sourcesContent":["import { CanActivate, CanActivateChild, CanLoad, ActivatedRouteSnapshot, Route, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Injectable, Inject } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { ACLService } from './acl.service';\r\nimport { ACLCanType } from './acl.type';\r\nimport { DACL_OPTIONS_TOKEN, ACLOptions } from '../acl.options';\r\n\r\n@Injectable()\r\nexport class ACLGuard implements CanActivate, CanActivateChild, CanLoad {\r\n\r\n    constructor(\r\n        private srv: ACLService,\r\n        private router: Router,\r\n        @Inject(DACL_OPTIONS_TOKEN) private options: ACLOptions\r\n    ) {}\r\n\r\n    private process(guard: ACLCanType | Observable<ACLCanType>, url: string = '/'): Observable<boolean> {\r\n        return (guard && guard instanceof Observable ? guard : of(typeof guard !== 'undefined' ? guard as ACLCanType : null)).pipe(\r\n            map(v => this.srv.can(v)),\r\n            tap(v => {\r\n                if (v) return;\r\n                this.router.navigateByUrl(this.options.guard_url || '/403');\r\n            })\r\n        );\r\n    }\r\n\r\n    // lazy loading\r\n    canLoad(route: Route): Observable<boolean> {\r\n        return this.process(route.data && route.data.guard || null);\r\n    }\r\n    // all children route\r\n    canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n        return this.canActivate(childRoute, state);\r\n    }\r\n    // route\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n        return this.process(route.data && route.data.guard || null);\r\n    }\r\n}\r\n"]}