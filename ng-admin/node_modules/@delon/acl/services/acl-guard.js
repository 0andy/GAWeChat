import { Router } from '@angular/router';
import { Injectable, Inject } from '@angular/core';
import { Observable } from 'rxjs/Observable';
import { of } from 'rxjs/observable/of';
import { map, tap } from 'rxjs/operators';
import { ACLService } from './acl.service';
import { DACL_OPTIONS_TOKEN } from '../acl.options';
var ACLGuard = /** @class */ (function () {
    function ACLGuard(srv, router, options) {
        this.srv = srv;
        this.router = router;
        this.options = options;
    }
    ACLGuard.prototype.process = function (guard, url) {
        var _this = this;
        if (url === void 0) { url = '/'; }
        return (guard && guard instanceof Observable ? guard : of(typeof guard !== 'undefined' ? guard : null)).pipe(map(function (v) { return _this.srv.can(v); }), tap(function (v) {
            if (v)
                return;
            _this.router.navigateByUrl(_this.options.guard_url || '/403');
        }));
    };
    // lazy loading
    // lazy loading
    ACLGuard.prototype.canLoad = 
    // lazy loading
    function (route) {
        return this.process(route.data && route.data.guard || null);
    };
    // all children route
    // all children route
    ACLGuard.prototype.canActivateChild = 
    // all children route
    function (childRoute, state) {
        return this.canActivate(childRoute, state);
    };
    // route
    // route
    ACLGuard.prototype.canActivate = 
    // route
    function (route, state) {
        return this.process(route.data && route.data.guard || null);
    };
    ACLGuard.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    ACLGuard.ctorParameters = function () { return [
        { type: ACLService, },
        { type: Router, },
        { type: undefined, decorators: [{ type: Inject, args: [DACL_OPTIONS_TOKEN,] },] },
    ]; };
    return ACLGuard;
}());
export { ACLGuard };
//# sourceMappingURL=acl-guard.js.map