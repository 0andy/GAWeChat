{"version":3,"file":"index.js","sourceRoot":"","sources":["../../.ng_build/acl/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAuB,MAAM,eAAe,CAAC;AAC9D,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC/C,OAAO,EAAc,kBAAkB,EAAE,uBAAuB,EAAE,OAAO,EAAE,MAAM,eAAe,CAAC;AACjG,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;;AAGhD,OAAO,EAAE,UAAU,EAAE,MAAM,wBAAwB,CAAC;AACpD,IAAM,QAAQ,GAAG,CAAE,UAAU,EAAE,QAAQ,CAAE,CAAC;;AAI1C,OAAO,EAAE,YAAY,EAAE,MAAM,4BAA4B,CAAC;AAC1D,IAAM,UAAU,GAAG,CAAE,YAAY,CAAE,CAAC;;AAGpC,IAAM,KAAK,GAAG,EAAI,CAAC;;;AAMnB,OAAO,EAAE,UAAU,EAAE,MAAM,wBAAwB,CAAC;AACpD,OAAO,EAAE,YAAY,EAAE,MAAM,4BAA4B,CAAC;AAC1D,cAAc,eAAe,CAAC;AAE9B,cAAc,sBAAsB,CAAC;;;AAMrC,MAAM,yBAAyB,OAAmB;IAC9C,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;CAC1C;;;;IAgBU,sBAAO,GAAd,UAAe,OAAoB;QAC/B,MAAM,CAAC;YACH,QAAQ,EAAE,cAAc;YACxB,SAAS;gBACL,EAAE,OAAO,EAAE,uBAAuB,EAAE,QAAQ,EAAE,OAAO,EAAE;gBACvD,EAAE,OAAO,EAAE,kBAAkB,EAAE,UAAU,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,uBAAuB,CAAC,EAAE;qBACzF,QAAQ,CACd;SACJ,CAAC;KACL;;gBAvBJ,QAAQ,SAAC;oBACN,OAAO,EAAE;wBACL,YAAY;qBACf;oBACD,YAAY,EACL,UAAU,QACV,KAAK,CACX;oBACD,OAAO,EACA,UAAU,QACV,KAAK,CACX;iBACJ;;;;yBA/CD;;SAgDa,cAAc","sourcesContent":["import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ACLOptions, DACL_OPTIONS_TOKEN, DACL_USER_OPTIONS_TOKEN, DEFAULT } from './acl.options';\r\nimport { ACLGuard } from './services/acl-guard';\r\n\r\n// region: import\r\nimport { ACLService } from './services/acl.service';\r\nconst SERVICES = [ ACLService, ACLGuard ];\r\n\r\n// components\r\n\r\nimport { ACLDirective } from './directives/acl.directive';\r\nconst COMPONENTS = [ ACLDirective ];\r\n\r\n// pipes\r\nconst PIPES = [  ];\r\n\r\n// endregion\r\n\r\n// region: export\r\n\r\nexport { ACLService } from './services/acl.service';\r\nexport { ACLDirective } from './directives/acl.directive';\r\nexport * from './acl.options';\r\nexport * from './services/acl.type';\r\nexport * from './services/acl-guard';\r\n\r\n// components\r\n\r\n// endregion\r\n\r\nexport function optionsFactory(options: ACLOptions) {\r\n    return Object.assign(DEFAULT, options);\r\n}\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    declarations: [\r\n        ...COMPONENTS,\r\n        ...PIPES\r\n    ],\r\n    exports: [\r\n        ...COMPONENTS,\r\n        ...PIPES\r\n    ]\r\n})\r\nexport class AlainACLModule {\r\n    static forRoot(options?: ACLOptions): ModuleWithProviders {\r\n        return {\r\n            ngModule: AlainACLModule,\r\n            providers: [\r\n                { provide: DACL_USER_OPTIONS_TOKEN, useValue: options },\r\n                { provide: DACL_OPTIONS_TOKEN, useFactory: optionsFactory, deps: [DACL_USER_OPTIONS_TOKEN] },\r\n                ...SERVICES\r\n            ]\r\n        };\r\n    }\r\n}\r\n"]}