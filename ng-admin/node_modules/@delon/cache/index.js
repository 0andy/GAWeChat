import { NgModule } from '@angular/core';
import { DC_STORE_STORAGE_TOKEN } from './src/interface';
import { DC_OPTIONS_TOKEN, DC_USER_OPTIONS_TOKEN, DEFAULT } from './cache.options';
import { CacheService } from './src/cache.service';
import { LocalStorageCacheService } from './src/local-storage-cache.service';
// region: export
export * from './src/interface';
export * from './src/cache.service';
// endregion
export function optionsFactory(options) {
    if (options && !Array.isArray(options.reName))
        options.reName = options.reName.split('.');
    return Object.assign(DEFAULT, options);
}
var DelonCacheModule = /** @class */ (function () {
    function DelonCacheModule() {
    }
    DelonCacheModule.forRoot = function (options) {
        return {
            ngModule: DelonCacheModule,
            providers: [
                { provide: DC_USER_OPTIONS_TOKEN, useValue: options },
                { provide: DC_OPTIONS_TOKEN, useFactory: optionsFactory, deps: [DC_USER_OPTIONS_TOKEN] },
                { provide: DC_STORE_STORAGE_TOKEN, useClass: LocalStorageCacheService },
                CacheService
            ]
        };
    };
    DelonCacheModule.decorators = [
        { type: NgModule, args: [{},] },
    ];
    /** @nocollapse */
    DelonCacheModule.ctorParameters = function () { return []; };
    return DelonCacheModule;
}());
export { DelonCacheModule };
//# sourceMappingURL=index.js.map