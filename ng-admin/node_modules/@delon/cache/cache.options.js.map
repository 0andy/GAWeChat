{"version":3,"file":"cache.options.js","sourceRoot":"","sources":["../../.ng_build/cache/cache.options.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAE/C,MAAM,CAAC,IAAM,gBAAgB,GAAG,IAAI,cAAc,CAAe,kBAAkB,CAAC,CAAC;AACrF,MAAM,CAAC,IAAM,qBAAqB,GAAG,IAAI,cAAc,CAAe,uBAAuB,CAAC,CAAC;AA0B/F,MAAM,CAAC,IAAM,OAAO,GAAG;IACnB,IAAI,EAAE,SAAS;IACf,MAAM,EAAE,EAAE;IACV,MAAM,EAAE,EAAE;IACV,QAAQ,EAAE,cAAc;CAC3B,CAAC","sourcesContent":["import { InjectionToken } from '@angular/core';\r\n\r\nexport const DC_OPTIONS_TOKEN = new InjectionToken<CacheOptions>('DC_OPTIONS_TOKEN');\r\nexport const DC_USER_OPTIONS_TOKEN = new InjectionToken<CacheOptions>('DC_USER_OPTIONS_TOKEN');\r\n\r\nexport interface CacheOptions {\r\n    /**\r\n     * 缓存模式，默认：`promise`\r\n     * - `promise` 约定模式，允许 `key` 作为 http 获取数据\r\n     * - `none` 正常模式\r\n     */\r\n    mode?: 'promise' | 'none';\r\n    /**\r\n     * 重命名返回参数，例如：\r\n     * - `null` 返回体为内容\r\n     * - `list` 返回体应 `{ list: [] }`\r\n     * - `result.list` 返回体应 `{ result: { list: [] } }`\r\n     */\r\n    reName?: string | string[];\r\n    /**\r\n     * 持久化数据键值前缀\r\n     */\r\n    prefix?: string;\r\n    /**\r\n     * 持久化数据元数据存储键名\r\n     */\r\n    meta_key?: string;\r\n}\r\n\r\nexport const DEFAULT = {\r\n    mode: 'promise',\r\n    reName: '',\r\n    prefix: '',\r\n    meta_key: '__cache_meta'\r\n};\r\n"]}