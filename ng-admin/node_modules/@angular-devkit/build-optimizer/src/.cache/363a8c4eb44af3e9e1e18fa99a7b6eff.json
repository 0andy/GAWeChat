{"remainingRequest":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@delon\\theme\\services\\settings\\settings.service.js","dependencies":[{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@delon\\theme\\services\\settings\\settings.service.js","mtime":1515671330000},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Injectable } from '@angular/core';\nvar KEY = 'layout';\nvar SettingsService = /*@__PURE__*/ (function () {\n    function SettingsService() {\n        this.app = {\n            year: (new Date()).getFullYear()\n        };\n        this.user = {};\n        this._layout = null;\n    }\n    SettingsService.prototype.get = function (key) {\n        return JSON.parse(localStorage.getItem(key) || 'null') || null;\n    };\n    SettingsService.prototype.set = function (key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    };\n    Object.defineProperty(SettingsService.prototype, \"layout\", {\n        get: function () {\n            if (!this._layout) {\n                this._layout = Object.assign({\n                    fixed: true,\n                    collapsed: false,\n                    boxed: false,\n                    theme: 'A',\n                    lang: null\n                }, this.get(KEY));\n                this.set(KEY, this._layout);\n            }\n            return this._layout;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SettingsService.prototype.setLayout = function (name, value) {\n        if (typeof this.layout[name] !== 'undefined') {\n            this.layout[name] = value;\n            this.set(KEY, this._layout);\n            return true;\n        }\n        return false;\n    };\n    SettingsService.prototype.setApp = function (val) {\n        this.app = Object.assign(this.app, val);\n    };\n    SettingsService.prototype.setUser = function (val) {\n        this.user = Object.assign(this.user, val);\n    };\n    return SettingsService;\n}());\nexport { SettingsService };\n//# sourceMappingURL=settings.service.js.map \n",null]}