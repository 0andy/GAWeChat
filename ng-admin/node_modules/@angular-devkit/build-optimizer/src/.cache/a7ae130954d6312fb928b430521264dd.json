{"remainingRequest":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\ngx-ueditor\\src\\ueditor.component.js","dependencies":[{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\ngx-ueditor\\src\\ueditor.component.js","mtime":1514032069000},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Component, Input, forwardRef, ViewChild, ElementRef, EventEmitter, Output, ViewEncapsulation, Optional, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Router, ActivationEnd } from '@angular/router';\nimport { debounceTime, filter } from 'rxjs/operators';\nimport { ScriptService } from './script.service';\nimport { UEditorConfig } from './ueditor.config';\nvar UEditorComponent = /*@__PURE__*/ (function () {\n    function UEditorComponent(el, ss, router, defConfig, cd) {\n        this.el = el;\n        this.ss = ss;\n        this.router = router;\n        this.defConfig = defConfig;\n        this.cd = cd;\n        this.inited = false;\n        this.events = {};\n        this.loading = true;\n        this.id = \"_ueditor-\" + Math.random().toString(36).substring(2);\n        this.loadingTip = '加载中...';\n        this.onPreReady = new EventEmitter();\n        this.onReady = new EventEmitter();\n        this.onDestroy = new EventEmitter();\n        this.onContentChange = new EventEmitter();\n        this.onChange = Function.prototype;\n        this.onTouched = Function.prototype;\n    }\n    UEditorComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.inited = true;\n        this.path = this.defConfig && this.defConfig.path;\n        if (!this.path)\n            this.path = './assets/ueditor/';\n        this.route$ = this.router.events.pipe(filter(function (e) { return e instanceof ActivationEnd; }), debounceTime(100), filter(function (e) { return !!document.querySelector('#' + _this.id); })).subscribe(function (res) {\n            _this.destroy();\n            _this.init();\n        });\n    };\n    UEditorComponent.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        // 已经存在对象无须进入懒加载模式\n        if (window.UE) {\n            this.init();\n            return;\n        }\n        this.ss.load(this.path, true).getChangeEmitter().subscribe(function (res) {\n            _this.init();\n        });\n    };\n    UEditorComponent.prototype.ngOnChanges = function (changes) {\n        if (this.inited && changes.config) {\n            this.destroy();\n            this.init();\n        }\n    };\n    UEditorComponent.prototype.init = function (options) {\n        var _this = this;\n        if (!window.UE)\n            throw new Error('uedito js文件加载失败');\n        if (this.instance)\n            return;\n        // registrer hook\n        if (this.defConfig && this.defConfig.hook) {\n            if (!this.defConfig._hook_finished) {\n                this.defConfig._hook_finished = true;\n                this.defConfig.hook(UE);\n            }\n        }\n        this.onPreReady.emit(this);\n        var opt = Object.assign({\n            UEDITOR_HOME_URL: this.path\n        }, this.defConfig && this.defConfig.options, this.config, options);\n        var ueditor = UE.getEditor(this.id, opt);\n        ueditor.ready(function () {\n            _this.loading = false;\n            _this.instance = ueditor;\n            _this.value && _this.instance.setContent(_this.value);\n            _this.onReady.emit(_this);\n            _this.cd.markForCheck();\n        });\n        ueditor.addListener('contentChange', function () {\n            _this.value = ueditor.getContent();\n            _this.onChange(_this.value);\n            _this.onTouched(_this.value);\n            _this.onContentChange.emit(_this.value);\n        });\n    };\n    UEditorComponent.prototype.destroy = function () {\n        if (this.instance) {\n            for (var _i = 0, _a = this.events; _i < _a.length; _i++) {\n                var ki = _a[_i];\n                this.instance.removeListener(ki, this.events[ki]);\n            }\n            this.instance.removeListener('ready');\n            this.instance.removeListener('contentChange');\n            this.instance.destroy();\n            this.instance = null;\n        }\n        this.onDestroy.emit();\n    };\n    Object.defineProperty(UEditorComponent.prototype, \"Instance\", {\n        /**\n         * 获取UE实例\n         *\n         * @readonly\n         */\n        get: /**\n             * 获取UE实例\n             *\n             * @readonly\n             */ function () {\n            return this.instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * 设置编辑器语言\n     *\n     * @param {('zh-cn' | 'en')} lang\n     */\n    /**\n         * 设置编辑器语言\n         *\n         * @param {('zh-cn' | 'en')} lang\n         */\n    UEditorComponent.prototype.setLanguage = /**\n         * 设置编辑器语言\n         *\n         * @param {('zh-cn' | 'en')} lang\n         */\n        function (lang) {\n            var _this = this;\n            this.ss.loadScript(this.path + \"/lang/\" + lang + \"/\" + lang + \".js\").then(function (res) {\n                _this.destroy();\n                // 清空语言\n                if (!UE._bak_I18N) {\n                    UE._bak_I18N = UE.I18N;\n                }\n                UE.I18N = {};\n                UE.I18N[lang] = UE._bak_I18N[lang];\n                _this.init();\n            });\n        };\n    /**\n     * 添加编辑器事件\n     */\n    /**\n         * 添加编辑器事件\n         */\n    UEditorComponent.prototype.addListener = /**\n         * 添加编辑器事件\n         */\n        function (eventName, fn) {\n            if (this.events[eventName])\n                return;\n            this.events[eventName] = fn;\n            this.instance.addListener(eventName, fn);\n        };\n    /**\n     * 移除编辑器事件\n     */\n    /**\n         * 移除编辑器事件\n         */\n    UEditorComponent.prototype.removeListener = /**\n         * 移除编辑器事件\n         */\n        function (eventName) {\n            if (!this.events[eventName])\n                return;\n            this.instance.removeListener(eventName, this.events[eventName]);\n            delete this.events[eventName];\n        };\n    UEditorComponent.prototype.ngOnDestroy = function () {\n        this.destroy();\n        if (this.route$)\n            this.route$.unsubscribe();\n    };\n    UEditorComponent.prototype.writeValue = function (value) {\n        this.value = value;\n        if (this.instance) {\n            this.instance.setContent(this.value);\n        }\n    };\n    UEditorComponent.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    UEditorComponent.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    UEditorComponent.prototype.setDisabledState = function (isDisabled) {\n        if (isDisabled) {\n            this.instance.setDisabled();\n        }\n        else {\n            this.instance.setEnabled();\n        }\n    };\n    return UEditorComponent;\n}());\nexport { UEditorComponent };\n//# sourceMappingURL=ueditor.component.js.map \n",null]}