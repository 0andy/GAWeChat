{"remainingRequest":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@delon\\abc\\charts\\tag-cloud\\tag-cloud.component.js","dependencies":[{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@delon\\abc\\charts\\tag-cloud\\tag-cloud.component.js","mtime":1515671330000},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Component, Input, ViewChild, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nvar TagCloudComponent = /*@__PURE__*/ (function () {\n    function TagCloudComponent(el, cd) {\n        this.el = el;\n        this.cd = cd;\n        // region: fields\n        this.color = 'rgba(24, 144, 255, 0.85)';\n        this._height = 0;\n        this.padding = 0;\n        this._autoLabel = true;\n        this.initFlag = false;\n    }\n    Object.defineProperty(TagCloudComponent.prototype, \"height\", {\n        get: function () { return this._height; },\n        set: function (value) {\n            this._height = coerceNumberProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TagCloudComponent.prototype, \"autoLabel\", {\n        get: function () { return this._autoLabel; },\n        set: function (value) {\n            this._autoLabel = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TagCloudComponent.prototype.initTagCloud = function () {\n        // 给point注册一个词云的shape\n        G2.Shape.registerShape('point', 'cloud', {\n            drawShape: function (cfg, container) {\n                var attrs = Object.assign({}, {\n                    fillOpacity: cfg.opacity,\n                    fontSize: cfg.origin._origin.size,\n                    rotate: cfg.origin._origin.rotate,\n                    text: cfg.origin._origin.text,\n                    textAlign: 'center',\n                    fontFamily: cfg.origin._origin.font,\n                    fill: cfg.color,\n                    textBaseline: 'Alphabetic'\n                }, cfg.style);\n                return container.addShape('text', {\n                    attrs: Object.assign(attrs, {\n                        x: cfg.x,\n                        y: cfg.y\n                    })\n                });\n            }\n        });\n    };\n    TagCloudComponent.prototype.renderChart = function () {\n        if (!this.data || (this.data && this.data.length < 1))\n            return;\n        this.node.nativeElement.innerHTML = '';\n        var dv = new DataSet.View().source(this.data);\n        var range = dv.range('value');\n        var min = range[0];\n        var max = range[1];\n        var height = +this.height;\n        var width = +this.el.nativeElement.offsetWidth;\n        dv.transform({\n            type: 'tag-cloud',\n            fields: ['name', 'value'],\n            size: [width, height],\n            padding: this.padding,\n            timeInterval: 5000,\n            rotate: \n            // max execute time\n            function () {\n                var random = ~~(Math.random() * 4) % 4;\n                if (random === 2) {\n                    random = 0;\n                }\n                return random * 90; // 0, 90, 270\n            },\n            fontSize: function (d) {\n                if (d.value) {\n                    return ((d.value - min) / (max - min)) * (80 - 24) + 24;\n                }\n                return 0;\n            }\n        });\n        var chart = new G2.Chart({\n            container: this.node.nativeElement,\n            width: width,\n            height: height,\n            padding: this.padding,\n            forceFit: true\n        });\n        chart.source(dv, {\n            x: { nice: false },\n            y: { nice: false }\n        });\n        chart.legend(false);\n        chart.axis(false);\n        chart.tooltip({\n            showTitle: false\n        });\n        chart.coord().reflect();\n        chart.point()\n            .position('x*y')\n            .color('text')\n            .shape('cloud')\n            .tooltip('value*category');\n        chart.render();\n        this.chart = chart;\n    };\n    TagCloudComponent.prototype.uninstall = function () {\n        if (this.chart) {\n            this.chart.destroy();\n            this.chart = null;\n        }\n    };\n    TagCloudComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.initFlag = true;\n        this.initTagCloud();\n        setTimeout(function () { return _this.renderChart(); }, 100);\n    };\n    TagCloudComponent.prototype.ngOnChanges = function (changes) {\n        if (this.initFlag)\n            this.renderChart();\n    };\n    TagCloudComponent.prototype.ngOnDestroy = function () {\n        this.uninstall();\n    };\n    return TagCloudComponent;\n}());\nexport { TagCloudComponent };\n//# sourceMappingURL=tag-cloud.component.js.map \n",null]}