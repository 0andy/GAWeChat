{"remainingRequest":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@delon\\acl\\services\\acl-guard.js","dependencies":[{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@delon\\acl\\services\\acl-guard.js","mtime":1515671330000},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Router } from '@angular/router';\nimport { Injectable, Inject } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport { map, tap } from 'rxjs/operators';\nimport { ACLService } from './acl.service';\nimport { DACL_OPTIONS_TOKEN } from '../acl.options';\nvar ACLGuard = /*@__PURE__*/ (function () {\n    function ACLGuard(srv, router, options) {\n        this.srv = srv;\n        this.router = router;\n        this.options = options;\n    }\n    ACLGuard.prototype.process = function (guard, url) {\n        var _this = this;\n        if (url === void 0) {\n            url = '/';\n        }\n        return (guard && guard instanceof Observable ? guard : of(typeof guard !== 'undefined' ? guard : null)).pipe(map(function (v) { return _this.srv.can(v); }), tap(function (v) {\n            if (v)\n                return;\n            _this.router.navigateByUrl(_this.options.guard_url || '/403');\n        }));\n    };\n    // lazy loading\n    // lazy loading\n    ACLGuard.prototype.canLoad =\n        // lazy loading\n        function (route) {\n            return this.process(route.data && route.data.guard || null);\n        };\n    // all children route\n    // all children route\n    ACLGuard.prototype.canActivateChild =\n        // all children route\n        function (childRoute, state) {\n            return this.canActivate(childRoute, state);\n        };\n    // route\n    // route\n    ACLGuard.prototype.canActivate =\n        // route\n        function (route, state) {\n            return this.process(route.data && route.data.guard || null);\n        };\n    return ACLGuard;\n}());\nexport { ACLGuard };\n//# sourceMappingURL=acl-guard.js.map \n",null]}