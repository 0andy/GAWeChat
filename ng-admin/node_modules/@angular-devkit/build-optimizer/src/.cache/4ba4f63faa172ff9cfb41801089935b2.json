{"remainingRequest":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@delon\\abc\\simple-table\\simple-table-export.js","dependencies":[{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@delon\\abc\\simple-table\\simple-table-export.js","mtime":1515671330000},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Injectable, Optional } from '@angular/core';\nimport { XlsxService } from '../xlsx/xlsx.service';\nimport { deepGet } from '../utils/utils';\nvar SimpleTableExport = /*@__PURE__*/ (function () {\n    function SimpleTableExport(xlsxSrv) {\n        this.xlsxSrv = xlsxSrv;\n    }\n    SimpleTableExport.prototype._stGet = function (item, col) {\n        var ret = { t: 's', v: '' };\n        if (col.format) {\n            ret.v = col.format(item, col);\n        }\n        else {\n            var val = deepGet(item, col.index, '');\n            if (typeof val === 'undefined') {\n                ret.v = '';\n            }\n            else {\n                ret.v = val;\n                switch (col.type) {\n                    case 'currency':\n                        ret.t = 'n';\n                        break;\n                    case 'date':\n                        ret.t = 'd';\n                        break;\n                    case 'yn':\n                        ret.v = ret === col.ynTruth ? (col.ynYes || '是') : (col.ynNo || '否');\n                        break;\n                }\n            }\n        }\n        return ret;\n    };\n    SimpleTableExport.prototype.genSheet = function (opt) {\n        var sheets = {};\n        var sheet = sheets[opt.sheetname || 'Sheet1'] = {};\n        var colData = opt._c.filter(function (w) { return w.exported !== false && w.index && (!w.buttons || w.buttons.length === 0); });\n        var cc = colData.length, dc = opt._d.length;\n        // region: column\n        for (var i = 0; i < cc; i++) {\n            sheet[String.fromCharCode(65 + i) + \"1\"] = { t: 's', v: colData[i].title };\n        }\n        // endregion\n        // region: content\n        for (var i = 0; i < dc; i++) {\n            for (var j = 0; j < cc; j++) {\n                sheet[\"\" + String.fromCharCode(65 + j) + (i + 2)] = this._stGet(opt._d[i], colData[j]);\n            }\n        }\n        // endregion\n        sheet['!ref'] = \"A1:\" + String.fromCharCode(65 + cc - 1) + (dc + 1);\n        return sheets;\n    };\n    SimpleTableExport.prototype.export = function (opt) {\n        if (!this.xlsxSrv)\n            throw new Error(\"muse be import 'AdXlsxModule' module, but got null\");\n        var sheets = this.genSheet(opt);\n        return this.xlsxSrv.export({\n            sheets: sheets,\n            filename: opt.filename,\n            callback: opt.callback\n        });\n    };\n    return SimpleTableExport;\n}());\nexport { SimpleTableExport };\n//# sourceMappingURL=simple-table-export.js.map \n",null]}