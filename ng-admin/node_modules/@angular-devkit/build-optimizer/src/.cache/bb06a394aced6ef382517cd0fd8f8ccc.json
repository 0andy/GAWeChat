{"remainingRequest":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@delon\\auth\\token\\token.service.js","dependencies":[{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@delon\\auth\\token\\token.service.js","mtime":1515671330000},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Injectable, Inject } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { share } from 'rxjs/operators';\nimport { DA_STORE_TOKEN } from '../store/interface';\nimport { DA_OPTIONS_TOKEN } from '../auth.options';\nvar TokenService = /*@__PURE__*/ (function () {\n    function TokenService(options, store) {\n        this.options = options;\n        this.store = store;\n        this.change$ = new BehaviorSubject(null);\n    }\n    Object.defineProperty(TokenService.prototype, \"login_url\", {\n        get: function () {\n            return this.options.login_url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TokenService.prototype, \"redirect\", {\n        get: function () {\n            return this._redirect || '/';\n        },\n        set: function (url) {\n            this._redirect = url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TokenService.prototype.set = function (data) {\n        this.change$.next(data);\n        return this.store.set(this.options.store_key, data);\n    };\n    TokenService.prototype.get = function (type) {\n        var data = this.store.get(this.options.store_key);\n        return type ? Object.assign(new type(), data) : data;\n    };\n    TokenService.prototype.clear = function () {\n        this.change$.next(null);\n        this.store.remove(this.options.store_key);\n    };\n    TokenService.prototype.change = function () {\n        return this.change$.pipe(share());\n    };\n    return TokenService;\n}());\nexport { TokenService };\n//# sourceMappingURL=token.service.js.map \n",null]}