{"remainingRequest":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@delon\\abc\\sidebar-nav\\sidebar-nav.component.js","dependencies":[{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@delon\\abc\\sidebar-nav\\sidebar-nav.component.js","mtime":1515671330000},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Component, ElementRef, Renderer2, Inject, HostListener, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DOCUMENT } from '@angular/common';\nimport { MenuService, SettingsService } from '@delon/theme';\nvar SHOWCLS = 'nav-floating-show';\nvar FLOATINGCLS = 'nav-floating';\nvar SidebarNavComponent = /*@__PURE__*/ (function () {\n    function SidebarNavComponent(menuSrv, settings, router, el, render, cd, doc) {\n        this.menuSrv = menuSrv;\n        this.settings = settings;\n        this.router = router;\n        this.render = render;\n        this.cd = cd;\n        this.doc = doc;\n        this.list = [];\n        this.rootEl = el.nativeElement;\n    }\n    SidebarNavComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.bodyEl = this.doc.querySelector('body');\n        this.menuSrv.openedByUrl(this.router.url);\n        this.genFloatingContainer();\n        this.change$ = this.menuSrv.change.subscribe(function (res) {\n            _this.list = res;\n            _this.cd.detectChanges();\n        });\n    };\n    SidebarNavComponent.prototype.floatingAreaClickHandle = function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n        if (this.settings.layout.collapsed !== true) {\n            return;\n        }\n        var linkNode = e.target;\n        if (linkNode.nodeName !== 'A') {\n            return;\n        }\n        var url = linkNode.getAttribute('href');\n        if (url) {\n            if (url.startsWith('#'))\n                url = url.slice(1);\n            this.router.navigateByUrl(url);\n        }\n        this.hideAll();\n        return false;\n    };\n    SidebarNavComponent.prototype.genFloatingContainer = function () {\n        if (this.floatingEl) {\n            this.floatingEl.remove();\n            this.floatingEl.removeEventListener('click', this.floatingAreaClickHandle.bind(this));\n        }\n        this.floatingEl = this.render.createElement('div');\n        this.floatingEl.classList.add(FLOATINGCLS + '-container');\n        this.floatingEl.addEventListener('click', this.floatingAreaClickHandle.bind(this), false);\n        this.bodyEl.appendChild(this.floatingEl);\n    };\n    SidebarNavComponent.prototype.genSubNode = function (linkNode, item) {\n        var id = \"_sidebar-nav-\" + item.__id;\n        var node = this.floatingEl.querySelector('#' + id);\n        if (node) {\n            return node;\n        }\n        node = linkNode.nextElementSibling.cloneNode(true);\n        node.id = id;\n        node.classList.add(FLOATINGCLS);\n        node.addEventListener('mouseleave', function () {\n            node.classList.remove(SHOWCLS);\n        }, false);\n        this.floatingEl.appendChild(node);\n        return node;\n    };\n    SidebarNavComponent.prototype.hideAll = function () {\n        var allNode = this.floatingEl.querySelectorAll('.' + FLOATINGCLS);\n        for (var i = 0; i < allNode.length; i++) {\n            allNode[i].classList.remove(SHOWCLS);\n        }\n    };\n    // calculate the node position values.\n    // calculate the node position values.\n    SidebarNavComponent.prototype.calPos =\n        // calculate the node position values.\n        function (linkNode, node) {\n            var rect = linkNode.getBoundingClientRect();\n            // bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14721015/\n            var scrollTop = Math.max(this.doc.documentElement.scrollTop, this.bodyEl.scrollTop);\n            var top = rect.top + scrollTop, left = rect.right + 5;\n            node.style.top = top + \"px\";\n            node.style.left = left + \"px\";\n        };\n    SidebarNavComponent.prototype.showSubMenu = function (e, item) {\n        if (this.settings.layout.collapsed !== true) {\n            return;\n        }\n        e.preventDefault();\n        var linkNode = e.target;\n        if (linkNode.nodeName !== 'A') {\n            return;\n        }\n        var subNode = this.genSubNode(linkNode, item);\n        this.hideAll();\n        subNode.classList.add(SHOWCLS);\n        this.calPos(linkNode, subNode);\n    };\n    SidebarNavComponent.prototype.toggleOpen = function (item) {\n        this.menuSrv.visit(function (i, p) {\n            if (i !== item)\n                i._open = false;\n        });\n        var pItem = item.__parent;\n        while (pItem) {\n            pItem._open = true;\n            pItem = pItem.__parent;\n        }\n        item._open = !item._open;\n        this.cd.markForCheck();\n    };\n    SidebarNavComponent.prototype.onClick = function () {\n        this.hideAll();\n    };\n    SidebarNavComponent.prototype.ngOnDestroy = function () {\n        if (this.change$)\n            this.change$.unsubscribe();\n    };\n    return SidebarNavComponent;\n}());\nexport { SidebarNavComponent };\n//# sourceMappingURL=sidebar-nav.component.js.map \n",null]}