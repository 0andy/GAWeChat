{"remainingRequest":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@delon\\abc\\reuse-tab\\reuse-tab.component.js","dependencies":[{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@delon\\abc\\reuse-tab\\reuse-tab.component.js","mtime":1515671330000},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Component, Input, Output, ChangeDetectionStrategy, ChangeDetectorRef, EventEmitter, ElementRef, Renderer2, Inject } from '@angular/core';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { combineLatest } from 'rxjs/observable/combineLatest';\nimport { filter, debounceTime, first } from 'rxjs/operators';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ReuseTabService } from './reuse-tab.service';\nvar ReuseTabComponent = /*@__PURE__*/ (function () {\n    function ReuseTabComponent(srv, cd, router, route, el, render, doc) {\n        this.srv = srv;\n        this.cd = cd;\n        this.router = router;\n        this.route = route;\n        this.el = el;\n        this.render = render;\n        this.doc = doc;\n        this._list = [];\n        this._pos = 0;\n        this._allowClose = true;\n        this._showCurrent = true;\n        this._fixed = true;\n        /** 切换时回调 */\n        this.change = new EventEmitter();\n        /** 关闭回调 */\n        this.close = new EventEmitter();\n    }\n    Object.defineProperty(ReuseTabComponent.prototype, \"max\", {\n        get: /** 允许最多复用多少个页面 */ function () { return this._max; },\n        set: function (value) {\n            this._max = coerceNumberProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ReuseTabComponent.prototype, \"allowClose\", {\n        get: /** 允许关闭 */ function () { return this._allowClose; },\n        set: function (value) {\n            this._allowClose = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ReuseTabComponent.prototype, \"showCurrent\", {\n        get: /** 总是显示当前页 */ function () { return this._showCurrent; },\n        set: function (value) {\n            this._showCurrent = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ReuseTabComponent.prototype, \"fixed\", {\n        get: /** 是否固定 */ function () { return this._fixed; },\n        set: function (value) {\n            this._fixed = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ReuseTabComponent.prototype.gen = function (url) {\n        if (!url)\n            url = this.srv.getUrl(this.route.snapshot);\n        var ls = this.srv.items.slice().map(function (item, index) {\n            return {\n                url: item.url,\n                // closabled: this.allowClose && item.closable,\n                title: item.customTitle || item.title,\n                index: index\n            };\n        });\n        if (this.showCurrent) {\n            var idx = ls.findIndex(function (w) { return w.url === url; });\n            if (idx !== -1) {\n                this._pos = idx;\n            }\n            else {\n                ls.push({\n                    url: url,\n                    title: this.srv.getTitle(url, this.srv.getTruthRoute(this.route.snapshot)),\n                    // closabled: this.allowClose && this.srv.getClosable(url, next.snapshot),\n                    index: -1\n                });\n                this._pos = ls.length;\n            }\n        }\n        else {\n            this._pos = ls.length;\n        }\n        this._list = ls;\n        this.visibility();\n        this.cd.markForCheck();\n    };\n    ReuseTabComponent.prototype.visibility = function () {\n        if (this.showCurrent)\n            return;\n        this.render.setStyle(this.el.nativeElement, 'display', this._list.length === 0 ? 'none' : 'block');\n    };\n    ReuseTabComponent.prototype.to = function (index) {\n        var item = this._list[index];\n        if (!item || !item.url)\n            return;\n        this.router.navigateByUrl(item.url);\n        this.change.emit(item);\n    };\n    ReuseTabComponent.prototype.removeByUrl = function (url) {\n        var removeIdx = this._list.findIndex(function (w) { return w.url === url; });\n        if (removeIdx === -1)\n            return null;\n        this.remove(removeIdx);\n        return this._list[Math.min(removeIdx, this._list.length - 1)].url;\n    };\n    ReuseTabComponent.prototype.remove = function (idx) {\n        if (this.showCurrent && this._list.length === 1)\n            return false;\n        var item = this._list[idx];\n        if (!this.srv._remove(item))\n            return false;\n        this._list.splice(idx, 1);\n        this.visibility();\n        this.cd.markForCheck();\n        this.close.emit(item);\n        if (this._pos === idx) {\n            this.to(this._pos);\n        }\n    };\n    ReuseTabComponent.prototype.clear = function () {\n        var _this = this;\n        this._list = [this._list.find(function (w) { return w.url === _this.router.url; })];\n        this.srv.clear();\n        this.close.emit(null);\n    };\n    ReuseTabComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.setClass();\n        var route$ = this.router.events.pipe(filter(function (evt) { return evt instanceof NavigationEnd; }));\n        this.sub$ = combineLatest(this.srv.change, route$).pipe(debounceTime(300)).subscribe(function (_a) {\n            var res = _a[0], url = _a[1];\n            var nextUrl = _this.router.url;\n            if (res.active === 'remove' && res.url) {\n                nextUrl = _this.removeByUrl(res.url);\n                if (nextUrl === null)\n                    return;\n            }\n            _this.gen(nextUrl);\n        });\n        var title$ = this.srv.change.pipe(filter(function (w) { return w && w.active === 'title'; }), first()).subscribe(function (res) {\n            _this.gen(_this.router.url);\n            title$.unsubscribe();\n        });\n        this.gen();\n    };\n    ReuseTabComponent.prototype.setClass = function () {\n        var el = this.el.nativeElement;\n        var body = this.doc.querySelector('body');\n        var fixedCls = \"fixed\";\n        var bodyCls = \"has-reuse-tab\";\n        if (this.fixed) {\n            this.render.addClass(el, fixedCls);\n            this.render.addClass(body, bodyCls);\n        }\n        else {\n            this.render.removeClass(el, fixedCls);\n            this.render.removeClass(body, bodyCls);\n        }\n    };\n    ReuseTabComponent.prototype.ngOnChanges = function (changes) {\n        if (changes.max)\n            this.srv.max = this.max;\n        if (changes.excludes)\n            this.srv.excludes = this.excludes;\n        this.setClass();\n        this.cd.markForCheck();\n    };\n    ReuseTabComponent.prototype.ngOnDestroy = function () {\n        if (this.sub$)\n            this.sub$.unsubscribe();\n    };\n    return ReuseTabComponent;\n}());\nexport { ReuseTabComponent };\n//# sourceMappingURL=reuse-tab.component.js.map \n",null]}