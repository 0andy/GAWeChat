{"remainingRequest":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@delon\\theme\\pipes\\currency\\cn-currency.pipe.js","dependencies":[{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@delon\\theme\\pipes\\currency\\cn-currency.pipe.js","mtime":1515671330000},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Pipe } from '@angular/core';\nimport { CurrencyPipe } from '@angular/common';\n/**\n * 内置 `_currency` 货币格式化\n * 简化原 `currency` 针对中文货币格式化问题\n * 别忘记在根模块中注册语言环境：\n *\n * ```typescript\n * import { registerLocaleData } from '@angular/common';\n * import localeZhHans from '@angular/common/locales/zh-Hans';\n * registerLocaleData(localeZhHans);\n * ```\n */\nvar CNCurrencyPipe = /*@__PURE__*/ (function (_super) {\n    __extends(CNCurrencyPipe, _super);\n    function CNCurrencyPipe() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CNCurrencyPipe.prototype.transform = function (value, currencyCode, display, digits) {\n        if (currencyCode === void 0) {\n            currencyCode = '￥';\n        }\n        if (display === void 0) {\n            display = 'code';\n        }\n        return _super.prototype.transform.call(this, value, currencyCode, display, digits);\n    };\n    return CNCurrencyPipe;\n}(CurrencyPipe));\nexport { CNCurrencyPipe };\n//# sourceMappingURL=cn-currency.pipe.js.map \n",null]}