{"remainingRequest":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@delon\\abc\\charts\\bar\\bar.component.js","dependencies":[{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@delon\\abc\\charts\\bar\\bar.component.js","mtime":1515671330000},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Component, Input, HostBinding, ViewChild, ElementRef, TemplateRef, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { debounceTime } from 'rxjs/operators';\nimport { FromEventObservable } from 'rxjs/observable/FromEventObservable';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nvar G2BarComponent = /*@__PURE__*/ (function () {\n    function G2BarComponent(el, cd) {\n        this.el = el;\n        this.cd = cd;\n        // region: fields\n        this._title = '';\n        this.color = 'rgba(24, 144, 255, 0.85)';\n        this._height = 0;\n        this._autoLabel = true;\n        // endregion\n        this._cls = true;\n        this.initFlag = false;\n        // region: resize\n        this.autoHideXLabels = false;\n        this.scroll$ = null;\n    }\n    Object.defineProperty(G2BarComponent.prototype, \"title\", {\n        set: function (value) {\n            if (value instanceof TemplateRef)\n                this._titleTpl = value;\n            else\n                this._title = value;\n            this.cd.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(G2BarComponent.prototype, \"height\", {\n        get: function () { return this._height; },\n        set: function (value) {\n            this._height = coerceNumberProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(G2BarComponent.prototype, \"autoLabel\", {\n        get: function () { return this._autoLabel; },\n        set: function (value) {\n            this._autoLabel = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    G2BarComponent.prototype.install = function () {\n        if (!this.data || (this.data && this.data.length < 1))\n            return;\n        // this.uninstall();\n        this.node.nativeElement.innerHTML = '';\n        var padding = Object.assign([], this.padding);\n        if (padding.length <= 0)\n            padding = [32, 0, this.autoHideXLabels ? 8 : 32, 40];\n        var chart = new G2.Chart({\n            container: this.node.nativeElement,\n            forceFit: true,\n            height: +this.height - 22,\n            legend: null,\n            padding: padding\n        });\n        chart.axis('x', !this.autoHideXLabels);\n        chart.axis('y', {\n            title: false,\n            line: false,\n            tickLine: false\n        });\n        chart.source(this.data, {\n            x: {\n                type: 'cat'\n            },\n            y: {\n                min: 0\n            }\n        });\n        chart.tooltip({\n            showTitle: false\n        });\n        chart\n            .interval()\n            .position('x*y')\n            .color(this.color)\n            .tooltip('x*y', function (x, y) {\n            return {\n                name: x,\n                value: y\n            };\n        });\n        chart.render();\n        this.chart = chart;\n    };\n    G2BarComponent.prototype.uninstall = function () {\n        if (this.chart) {\n            this.chart.destroy();\n            this.chart = null;\n        }\n    };\n    G2BarComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.initFlag = true;\n        setTimeout(function () { return _this.resize(); }, 100);\n        this.installResizeEvent();\n    };\n    G2BarComponent.prototype.ngOnChanges = function (changes) {\n        if (this.initFlag)\n            this.install();\n    };\n    G2BarComponent.prototype.ngOnDestroy = function () {\n        this.uninstallResizeEvent();\n        this.uninstall();\n    };\n    G2BarComponent.prototype.installResizeEvent = function () {\n        var _this = this;\n        if (!this.autoLabel || this.scroll$)\n            return;\n        this.scroll$ = FromEventObservable.create(window, 'resize')\n            .pipe(debounceTime(200))\n            .subscribe(function () { return _this.resize(); });\n    };\n    G2BarComponent.prototype.uninstallResizeEvent = function () {\n        if (this.scroll$)\n            this.scroll$.unsubscribe();\n    };\n    G2BarComponent.prototype.resize = function () {\n        var canvasWidth = this.el.nativeElement.clientWidth;\n        var minWidth = this.data.length * 30;\n        if (canvasWidth <= minWidth) {\n            if (!this.autoHideXLabels) {\n                this.autoHideXLabels = true;\n                this.install();\n                return;\n            }\n        }\n        else if (this.autoHideXLabels) {\n            this.autoHideXLabels = false;\n            this.install();\n            return;\n        }\n        if (!this.chart)\n            this.install();\n    };\n    return G2BarComponent;\n}());\nexport { G2BarComponent };\n//# sourceMappingURL=bar.component.js.map \n",null]}