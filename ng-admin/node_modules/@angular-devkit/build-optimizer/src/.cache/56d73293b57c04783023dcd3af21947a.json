{"remainingRequest":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@delon\\auth\\token\\jwt\\jwt.helper.js","dependencies":[{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@delon\\auth\\token\\jwt\\jwt.helper.js","mtime":1515671330000},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["export function urlBase64Decode(str) {\r\n    var output = str.replace(/-/g, '+').replace(/_/g, '/');\r\n    switch (output.length % 4) {\r\n        case 0: {\r\n            break;\r\n        }\r\n        case 2: {\r\n            output += '==';\r\n            break;\r\n        }\r\n        case 3: {\r\n            output += '=';\r\n            break;\r\n        }\r\n        default: {\r\n            throw new Error('Illegal base64url string!');\r\n        }\r\n    }\r\n    return b64DecodeUnicode(output);\r\n}\r\n// credits for decoder goes to https://github.com/atk\r\nfunction b64decode(str) {\r\n    var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n    var output = '';\r\n    str = String(str).replace(/=+$/, '');\r\n    if (str.length % 4 === 1) {\r\n        throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\r\n    }\r\n    for (\r\n    // initialize result and counters\r\n    var bc = 0, bs = void 0, buffer = void 0, idx = 0; \r\n    // get next character\r\n    (buffer = str.charAt(idx++)); \r\n    // character found in table? initialize bit storage and add its ascii value;\r\n    ~buffer &&\r\n        ((bs = bc % 4 ? bs * 64 + buffer : buffer),\r\n            // and if not first of each 4 characters,\r\n            // convert the first 8 bits to one ascii character\r\n            bc++ % 4) ? (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6)))) : 0) {\r\n        // try to find character in table (0-63, not found => -1)\r\n        buffer = chars.indexOf(buffer);\r\n    }\r\n    return output;\r\n}\r\n// https://developer.mozilla.org/en/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem\r\nfunction b64DecodeUnicode(str) {\r\n    return decodeURIComponent(Array.prototype.map.call(b64decode(str), function (c) {\r\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n    }).join(''));\r\n}\r\n//# sourceMappingURL=jwt.helper.js.map",null]}