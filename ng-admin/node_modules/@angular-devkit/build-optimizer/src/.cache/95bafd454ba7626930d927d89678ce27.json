{"remainingRequest":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@delon\\abc\\count-down\\count-down.component.js","dependencies":[{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@delon\\abc\\count-down\\count-down.component.js","mtime":1515671330000},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport * as moment from 'moment';\nvar CountDownComponent = /*@__PURE__*/ (function () {\n    function CountDownComponent() {\n        this.begin = new EventEmitter();\n        this.notify = new EventEmitter();\n        this.end = new EventEmitter();\n    }\n    Object.defineProperty(CountDownComponent.prototype, \"target\", {\n        set: /**\n             * 目标时间\n             */ function (value) {\n            this.config = {\n                template: \"$!h!:$!m!:$!s!\",\n                stopTime: typeof value === 'number' ? moment().add(value, 's').valueOf() : moment(value).valueOf()\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CountDownComponent.prototype._start = function () {\n        this.begin.emit();\n    };\n    CountDownComponent.prototype._notify = function (time) {\n        this.notify.emit(time);\n    };\n    CountDownComponent.prototype._finished = function () {\n        this.end.emit();\n    };\n    return CountDownComponent;\n}());\nexport { CountDownComponent };\n//# sourceMappingURL=count-down.component.js.map \n",null]}