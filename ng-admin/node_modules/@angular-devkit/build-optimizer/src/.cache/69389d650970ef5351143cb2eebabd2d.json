{"remainingRequest":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@delon\\theme\\services\\title\\title.service.js","dependencies":[{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@delon\\theme\\services\\title\\title.service.js","mtime":1515671330000},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Injectable, Inject, Optional } from '@angular/core';\nimport { Title, DOCUMENT } from '@angular/platform-browser';\nimport { MenuService } from '../menu/menu.service';\nimport { ALAIN_I18N_TOKEN } from '../i18n/i18n';\n/**\n * 设置标题（用法见 AppComponent）\n * 标题获取的优先级为：route（支持i18n） > html\n *  + 路由：配置标准的方法见 `./routes/routes.ts` 路由配置节点中 `data` 属性，允许设置：`translate` 或 `title` 两个参数，前者 i18n.\n *  + html：若不指定则从 `content__title` 中获取 `h1` 内容\n */\nvar TitleService = /*@__PURE__*/ (function () {\n    function TitleService(title, menuSrv, translatorSrv, doc) {\n        this.title = title;\n        this.menuSrv = menuSrv;\n        this.translatorSrv = translatorSrv;\n        this.doc = doc;\n        this._prefix = '';\n        this._suffix = '';\n        this._separator = ' - ';\n        this._reverse = false;\n    }\n    Object.defineProperty(TitleService.prototype, \"separator\", {\n        /** 设置分隔符 */\n        set: /** 设置分隔符 */ function (value) {\n            this._separator = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TitleService.prototype, \"prefix\", {\n        /** 设置前缀 */\n        set: /** 设置前缀 */ function (value) {\n            this._prefix = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TitleService.prototype, \"suffix\", {\n        /** 设置后缀 */\n        set: /** 设置后缀 */ function (value) {\n            this._suffix = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TitleService.prototype, \"reverse\", {\n        /** 设置是否反转 */\n        set: /** 设置是否反转 */ function (value) {\n            this._reverse = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TitleService.prototype.getByElement = function () {\n        var el = this.doc.querySelector('.content__title h1');\n        if (el) {\n            return el.firstChild.textContent.trim();\n        }\n        return '';\n    };\n    /**\n     * 设置标题\n     * 若不指定则从 `content__title` 中获取 `h1` 内容\n     */\n    /**\n         * 设置标题\n         * 若不指定则从 `content__title` 中获取 `h1` 内容\n         */\n    TitleService.prototype.setTitle = /**\n         * 设置标题\n         * 若不指定则从 `content__title` 中获取 `h1` 内容\n         */\n        function (title) {\n            if (!title) {\n                title = this.getByElement();\n            }\n            if (title && !Array.isArray(title)) {\n                title = [title];\n            }\n            var newTitles = [];\n            if (this._prefix) {\n                newTitles.push(this._prefix);\n            }\n            if (title && title.length > 0) {\n                newTitles.push.apply(newTitles, title);\n            }\n            if (this._suffix) {\n                newTitles.push(this._suffix);\n            }\n            if (this._reverse) {\n                newTitles = newTitles.reverse();\n            }\n            this.title.setTitle(newTitles.join(this._separator));\n        };\n    /**\n     * 根据URL地址从 `MenuService` 中获取对应的标题\n     */\n    /**\n         * 根据URL地址从 `MenuService` 中获取对应的标题\n         */\n    TitleService.prototype.setTitleByUrl = /**\n         * 根据URL地址从 `MenuService` 中获取对应的标题\n         */\n        function (url) {\n            var menus = this.menuSrv.getPathByUrl(url);\n            if (!menus || menus.length <= 0) {\n                this.setTitle();\n                return;\n            }\n            var item = menus[menus.length - 1];\n            var title;\n            if (item.translate && this.translatorSrv)\n                title = this.translatorSrv.fanyi(item.translate);\n            this.setTitle(title || item.text);\n        };\n    return TitleService;\n}());\nexport { TitleService };\n//# sourceMappingURL=title.service.js.map \n",null]}