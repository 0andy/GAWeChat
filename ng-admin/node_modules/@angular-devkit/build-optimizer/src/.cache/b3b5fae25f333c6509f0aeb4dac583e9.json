{"remainingRequest":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@delon\\theme\\services\\modal\\modal.helper.js","dependencies":[{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@delon\\theme\\services\\modal\\modal.helper.js","mtime":1515671330000},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Injectable } from '@angular/core';\nimport { NzModalService } from 'ng-zorro-antd';\nimport { filter } from 'rxjs/operators';\n/**\n * 对话框辅助类\n */\nvar ModalHelper = /*@__PURE__*/ (function () {\n    function ModalHelper(modalSrv) {\n        this.modalSrv = modalSrv;\n    }\n    /**\n     * 打开对话框，默认会过滤一些事件的回调，因此更容易处理回调：\n     * this.modalHelper.open(FormEditComponent, { i }).subscribe(res => this.load());\n     *\n     * 对于组件的成功&关闭的处理说明：\n     * 成功：\n     * this.subject.destroy('onOk');\n     *  若需要回调用参数则：\n     *  this.subject.next(data);\n     *  this.subject.destroy();\n     *\n     * 关闭：\n     * this.subject.destroy();\n     *\n     * @param {*} comp 组件\n     * @param {*} [params] 组件参数\n     * @param {('sm' | 'lg' | '' | number)} [size='lg'] 大小；例如：lg、600，默认：lg\n     * @param {*} [options] 对话框ConfigInterface参数\n     */\n    /**\n         * 打开对话框，默认会过滤一些事件的回调，因此更容易处理回调：\n         * this.modalHelper.open(FormEditComponent, { i }).subscribe(res => this.load());\n         *\n         * 对于组件的成功&关闭的处理说明：\n         * 成功：\n         * this.subject.destroy('onOk');\n         *  若需要回调用参数则：\n         *  this.subject.next(data);\n         *  this.subject.destroy();\n         *\n         * 关闭：\n         * this.subject.destroy();\n         *\n         * @param {*} comp 组件\n         * @param {*} [params] 组件参数\n         * @param {('sm' | 'lg' | '' | number)} [size='lg'] 大小；例如：lg、600，默认：lg\n         * @param {*} [options] 对话框ConfigInterface参数\n         */\n    ModalHelper.prototype.open = /**\n         * 打开对话框，默认会过滤一些事件的回调，因此更容易处理回调：\n         * this.modalHelper.open(FormEditComponent, { i }).subscribe(res => this.load());\n         *\n         * 对于组件的成功&关闭的处理说明：\n         * 成功：\n         * this.subject.destroy('onOk');\n         *  若需要回调用参数则：\n         *  this.subject.next(data);\n         *  this.subject.destroy();\n         *\n         * 关闭：\n         * this.subject.destroy();\n         *\n         * @param {*} comp 组件\n         * @param {*} [params] 组件参数\n         * @param {('sm' | 'lg' | '' | number)} [size='lg'] 大小；例如：lg、600，默认：lg\n         * @param {*} [options] 对话框ConfigInterface参数\n         */\n        function (comp, params, size, options) {\n            if (size === void 0) {\n                size = 'lg';\n            }\n            var cls = '', width = '';\n            if (size) {\n                if (typeof size === 'number') {\n                    width = size + \"px\";\n                }\n                else {\n                    cls = \"modal-\" + size;\n                }\n            }\n            return this.modalSrv\n                .open(Object.assign({\n                wrapClassName: cls,\n                content: comp,\n                width: width ? width : undefined,\n                footer: false,\n                componentParams: params\n            }, options || {}))\n                .pipe(filter(function (res) {\n                var findIdx = -1;\n                if (typeof res === 'string') {\n                    var resStr_1 = res;\n                    findIdx = ['onShow', 'onShown', 'onHide', 'onHidden', 'onCancel', 'onDestroy'].findIndex(function (w) { return resStr_1.startsWith(w); });\n                }\n                return findIdx === -1;\n            }));\n        };\n    /**\n     * 静态框，点击蒙层不允许关闭\n     */\n    /**\n         * 静态框，点击蒙层不允许关闭\n         */\n    ModalHelper.prototype.static = /**\n         * 静态框，点击蒙层不允许关闭\n         */\n        function (comp, params, size, options) {\n            if (size === void 0) {\n                size = 'lg';\n            }\n            return this.open(comp, params, size, Object.assign({\n                maskClosable: false\n            }, options));\n        };\n    return ModalHelper;\n}());\nexport { ModalHelper };\n//# sourceMappingURL=modal.helper.js.map \n",null]}