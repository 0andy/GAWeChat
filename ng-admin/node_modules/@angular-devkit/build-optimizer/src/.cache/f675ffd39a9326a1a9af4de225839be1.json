{"remainingRequest":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\ng-zorro-antd\\esm5\\antd.js","dependencies":[{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\ng-zorro-antd\\esm5\\antd.js","mtime":1519565597000},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { APP_INITIALIZER, ApplicationRef, ChangeDetectionStrategy, ChangeDetectorRef, Component, ComponentFactory, ComponentFactoryResolver, ContentChild, ContentChildren, Directive, ElementRef, EventEmitter, Host, HostBinding, HostListener, Inject, Injectable, InjectionToken, Injector, Input, IterableDiffers, NgModule, NgZone, Optional, Output, Pipe, Renderer, Renderer2, SkipSelf, TemplateRef, Type, ViewChild, ViewChildren, ViewContainerRef, ViewEncapsulation, forwardRef } from '@angular/core';\nimport { CommonModule, DOCUMENT } from '@angular/common';\nimport { fromEvent as fromEvent$1 } from 'rxjs/observable/fromEvent';\nimport { distinctUntilChanged as distinctUntilChanged$1 } from 'rxjs/operators/distinctUntilChanged';\nimport { throttleTime as throttleTime$1 } from 'rxjs/operators/throttleTime';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { FormsModule, NG_VALUE_ACCESSOR, NgControl } from '@angular/forms';\nimport moment from 'moment';\nimport { __assign, __extends } from 'tslib';\nimport { CdkConnectedOverlay, Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { BACKSPACE, DOWN_ARROW, ENTER, LEFT_ARROW, RIGHT_ARROW, TAB, UP_ARROW } from '@angular/cdk/keycodes';\nimport { Subject as Subject$1 } from 'rxjs/Subject';\nimport { debounceTime as debounceTime$1 } from 'rxjs/operators/debounceTime';\nimport { mapTo as mapTo$1 } from 'rxjs/operators/mapTo';\nimport { merge as merge$1 } from 'rxjs/operators/merge';\nimport { BehaviorSubject as BehaviorSubject$1 } from 'rxjs/BehaviorSubject';\nimport { merge as merge$3 } from 'rxjs/observable/merge';\nimport { filter as filter$1 } from 'rxjs/operators/filter';\nimport { map as map$1 } from 'rxjs/operators/map';\nimport { pluck as pluck$1 } from 'rxjs/operators/pluck';\nimport { takeUntil as takeUntil$1 } from 'rxjs/operators/takeUntil';\nimport { tap as tap$1 } from 'rxjs/operators/tap';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { Observable as Observable$1 } from 'rxjs/Observable';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { of as of$1 } from 'rxjs/observable/of';\nimport { auditTime as auditTime$1 } from 'rxjs/operators/auditTime';\nimport { startWith as startWith$1 } from 'rxjs/operators/startWith';\nimport { HttpClient, HttpEventType, HttpHeaders, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { ComponentPortal } from '@angular/cdk/portal';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar availablePrefixs = ['moz', 'ms', 'webkit'];\n/**\n * @return {?}\n */\nfunction requestAnimationFramePolyfill() {\n    var /** @type {?} */ lastTime = 0;\n    return function (callback) {\n        var /** @type {?} */ currTime = new Date().getTime();\n        var /** @type {?} */ timeToCall = Math.max(0, 16 - (currTime - lastTime));\n        var /** @type {?} */ id = window.setTimeout(function () { callback(currTime + timeToCall); }, timeToCall);\n        lastTime = currTime + timeToCall;\n        return id;\n    };\n}\n/**\n * @return {?}\n */\nfunction getRequestAnimationFrame() {\n    if (typeof window === 'undefined') {\n        return function () { return null; };\n    }\n    if (window.requestAnimationFrame) {\n        // https://github.com/vuejs/vue/issues/4465\n        return window.requestAnimationFrame.bind(window);\n    }\n    var /** @type {?} */ prefix = availablePrefixs.filter(function (key) { return key + \"RequestAnimationFrame\" in window; })[0];\n    return prefix\n        ? window[prefix + \"RequestAnimationFrame\"]\n        : requestAnimationFramePolyfill();\n}\nvar reqAnimFrame = getRequestAnimationFrame();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} t\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction easeInOutCubic(t, b, c, d) {\n    var /** @type {?} */ cc = c - b;\n    var /** @type {?} */ tt = t / (d / 2);\n    if (tt < 1) {\n        return cc / 2 * tt * tt * tt + b;\n    }\n    else {\n        return cc / 2 * ((tt -= 2) * tt * tt + 2) + b;\n    }\n}\nvar NzScrollService = /*@__PURE__*/ (function () {\n    /* tslint:disable-next-line:no-any */\n    function NzScrollService(doc) {\n        this.doc = doc;\n    }\n    /** 设置 `el` 滚动条位置 */\n    /**\n     * 设置 `el` 滚动条位置\n     * @param {?} el\n     * @param {?=} topValue\n     * @return {?}\n     */\n    NzScrollService.prototype.setScrollTop = /**\n     * 设置 `el` 滚动条位置\n     * @param {?} el\n     * @param {?=} topValue\n     * @return {?}\n     */\n        function (el, topValue) {\n            if (topValue === void 0) {\n                topValue = 0;\n            }\n            if (el === window) {\n                this.doc.body.scrollTop = topValue;\n                this.doc.documentElement.scrollTop = topValue;\n            }\n            else {\n                ((el)).scrollTop = topValue;\n            }\n        };\n    /** 获取 `el` 相对于视窗距离 */\n    /**\n     * 获取 `el` 相对于视窗距离\n     * @param {?} el\n     * @return {?}\n     */\n    NzScrollService.prototype.getOffset = /**\n     * 获取 `el` 相对于视窗距离\n     * @param {?} el\n     * @return {?}\n     */\n        function (el) {\n            var /** @type {?} */ ret = {\n                top: 0,\n                left: 0\n            };\n            if (!el || !el.getClientRects().length)\n                return ret;\n            var /** @type {?} */ rect = el.getBoundingClientRect();\n            if (rect.width || rect.height) {\n                var /** @type {?} */ doc = el.ownerDocument.documentElement;\n                ret.top = rect.top - doc.clientTop;\n                ret.left = rect.left - doc.clientLeft;\n            }\n            else {\n                ret.top = rect.top;\n                ret.left = rect.left;\n            }\n            return ret;\n        };\n    /** 获取 `el` 滚动条位置 */\n    // TODO: remove '| Window' as the fallback already happens here\n    /**\n     * 获取 `el` 滚动条位置\n     * @param {?=} el\n     * @param {?=} top\n     * @return {?}\n     */\n    NzScrollService.prototype.getScroll = /**\n     * 获取 `el` 滚动条位置\n     * @param {?=} el\n     * @param {?=} top\n     * @return {?}\n     */\n        function (el, top) {\n            if (top === void 0) {\n                top = true;\n            }\n            var /** @type {?} */ target = el ? el : window;\n            var /** @type {?} */ prop = top ? 'pageYOffset' : 'pageXOffset';\n            var /** @type {?} */ method = top ? 'scrollTop' : 'scrollLeft';\n            var /** @type {?} */ isWindow = target === window;\n            var /** @type {?} */ ret = isWindow ? target[prop] : target[method];\n            if (isWindow && typeof ret !== 'number') {\n                ret = this.doc.documentElement[method];\n            }\n            return ret;\n        };\n    /**\n     * 使用动画形式将 `el` 滚动至某位置\n     *\n     * @param containerEl 容器，默认 `window`\n     * @param targetTopValue 滚动至目标 `top` 值，默认：0，相当于顶部\n     * @param easing 动作算法，默认：`easeInOutCubic`\n     * @param callback 动画结束后回调\n     */\n    /**\n     * 使用动画形式将 `el` 滚动至某位置\n     *\n     * @param {?} containerEl 容器，默认 `window`\n     * @param {?=} targetTopValue 滚动至目标 `top` 值，默认：0，相当于顶部\n     * @param {?=} easing 动作算法，默认：`easeInOutCubic`\n     * @param {?=} callback 动画结束后回调\n     * @return {?}\n     */\n    NzScrollService.prototype.scrollTo = /**\n     * 使用动画形式将 `el` 滚动至某位置\n     *\n     * @param {?} containerEl 容器，默认 `window`\n     * @param {?=} targetTopValue 滚动至目标 `top` 值，默认：0，相当于顶部\n     * @param {?=} easing 动作算法，默认：`easeInOutCubic`\n     * @param {?=} callback 动画结束后回调\n     * @return {?}\n     */\n        function (containerEl, targetTopValue, easing, callback) {\n            var _this = this;\n            if (targetTopValue === void 0) {\n                targetTopValue = 0;\n            }\n            var /** @type {?} */ target = containerEl ? containerEl : window;\n            var /** @type {?} */ scrollTop = this.getScroll(target);\n            var /** @type {?} */ startTime = Date.now();\n            var /** @type {?} */ frameFunc = function () {\n                var /** @type {?} */ timestamp = Date.now();\n                var /** @type {?} */ time = timestamp - startTime;\n                _this.setScrollTop(target, (easing || easeInOutCubic)(time, scrollTop, targetTopValue, 450));\n                if (time < 450) {\n                    reqAnimFrame(frameFunc);\n                }\n                else {\n                    if (callback)\n                        callback();\n                }\n            };\n            reqAnimFrame(frameFunc);\n        };\n    return NzScrollService;\n}());\n/**\n * @param {?} doc\n * @param {?} scrollService\n * @return {?}\n */\nfunction SCROLL_SERVICE_PROVIDER_FACTORY(doc, scrollService) {\n    return scrollService || new NzScrollService(doc);\n}\nvar SCROLL_SERVICE_PROVIDER = {\n    provide: NzScrollService,\n    useFactory: SCROLL_SERVICE_PROVIDER_FACTORY,\n    deps: [DOCUMENT, [new Optional(), new SkipSelf(), NzScrollService]]\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzAffixComponent = /*@__PURE__*/ (function () {\n    function NzAffixComponent(scrollSrv, _el) {\n        this.scrollSrv = scrollSrv;\n        this._el = _el;\n        this.didScroll = false;\n        this.scrollTime = null;\n        this.scroll$ = null;\n        this.scrollWinInTarget$ = null;\n        this.fixed = false;\n        this.nzOffsetTop = 0;\n        this.nzOffsetBottom = 0;\n        this.nzChange = new EventEmitter();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NzAffixComponent.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n        function (changes) {\n            if (changes.nzTarget) {\n                this.registerScrollEvent();\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzAffixComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            if (!this.nzTarget) {\n                this.registerScrollEvent();\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzAffixComponent.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n        function () {\n            this.orgOffset = null;\n            this.fixed = false;\n        };\n    /**\n     * @return {?}\n     */\n    NzAffixComponent.prototype.reCalculate = /**\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ elOffset = this.scrollSrv.getOffset(this._el.nativeElement);\n            this.orgOffset = {\n                top: elOffset.top + this.scrollSrv.getScroll(this.nzTarget),\n                left: elOffset.left + this.scrollSrv.getScroll(this.nzTarget, false)\n            };\n            return this;\n        };\n    /**\n     * @return {?}\n     */\n    NzAffixComponent.prototype.process = /**\n     * @return {?}\n     */\n        function () {\n            if (!this.orgOffset) {\n                this.reCalculate();\n            }\n            var /** @type {?} */ containerScrollTop = this.scrollSrv.getScroll(this.nzTarget);\n            var /** @type {?} */ fixTop = this.nzTarget ? this.scrollSrv.getOffset(this.nzTarget).top : 0;\n            var /** @type {?} */ hasFixed = this.orgOffset.top - fixTop - containerScrollTop - this.nzOffsetTop <= 0;\n            if (this.fixed === hasFixed) {\n                return;\n            }\n            var /** @type {?} */ wrapEl = this.wrap.nativeElement;\n            wrapEl.classList[hasFixed ? 'add' : 'remove']('ant-affix');\n            if (hasFixed) {\n                wrapEl.style.cssText = \"top:\" + ((+this.nzOffsetTop) + (+fixTop)) + \"px;left:\" + this.orgOffset.left + \"px\";\n            }\n            else {\n                wrapEl.style.cssText = \"\";\n            }\n            this.fixed = hasFixed;\n            this.nzChange.emit(hasFixed);\n        };\n    /**\n     * @return {?}\n     */\n    NzAffixComponent.prototype.removeListen = /**\n     * @return {?}\n     */\n        function () {\n            if (this.scrollTime) {\n                clearTimeout(this.scrollTime);\n            }\n            if (this.scroll$) {\n                this.scroll$.unsubscribe();\n            }\n            if (this.scrollWinInTarget$) {\n                this.scrollWinInTarget$.unsubscribe();\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzAffixComponent.prototype.registerScrollEvent = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            this.removeListen();\n            this.reCalculate().process();\n            // TODO: should refactor this logic\n            this.scrollTime = window.setInterval(function () {\n                if (_this.didScroll) {\n                    _this.didScroll = false;\n                    _this.process();\n                }\n            }, 100);\n            this.scroll$ = fromEvent$1(this.nzTarget || window, 'scroll')\n                .subscribe(function () { return _this.didScroll = true; });\n            if (this.nzTarget) {\n                // 当 window 滚动位发生变动时，需要重新计算滚动容器\n                this.scrollWinInTarget$ = fromEvent$1(window, 'scroll').pipe(throttleTime$1(50), distinctUntilChanged$1())\n                    .subscribe(function (e) {\n                    _this.orgOffset = null;\n                    _this.fixed = false;\n                });\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzAffixComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            this.removeListen();\n        };\n    return NzAffixComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzAffixModule = /*@__PURE__*/ (function () {\n    function NzAffixModule() {\n    }\n    return NzAffixModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar fadeAnimation = trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n]);\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBoolean(value) {\n    return value === '' || (value && value !== 'false');\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzAlertComponent = /*@__PURE__*/ (function () {\n    function NzAlertComponent() {\n        this._banner = false;\n        this._closeable = false;\n        this._showIcon = false;\n        this._display = true;\n        this.antAlert = 'ant-alert';\n        this.nzType = 'info';\n        this.nzOnClose = new EventEmitter();\n        this._classMap = (_a = {},\n            _a[\"\" + this.antAlert] = true,\n            _a[this.antAlert + \"-\" + this.nzType] = true,\n            _a[this.antAlert + \"-no-icon\"] = !this.nzShowIcon,\n            _a[this.antAlert + \"-banner\"] = this.nzBanner,\n            _a[this.antAlert + \"-with-description\"] = !!this.nzDescription,\n            _a);\n        var _a;\n    }\n    Object.defineProperty(NzAlertComponent.prototype, \"nzBanner\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._banner;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._banner = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzAlertComponent.prototype, \"nzCloseable\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._closeable;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._closeable = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzAlertComponent.prototype, \"nzShowIcon\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._showIcon;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._showIcon = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzAlertComponent.prototype.closeAlert = /**\n     * @return {?}\n     */\n        function () {\n            this._display = false;\n            this.nzOnClose.emit(true);\n        };\n    /**\n     * @return {?}\n     */\n    NzAlertComponent.prototype.ngOnChanges = /**\n     * @return {?}\n     */\n        function () {\n            this._classMap = (_a = {},\n                _a[\"\" + this.antAlert] = true,\n                _a[this.antAlert + \"-\" + this.nzType] = true,\n                _a[this.antAlert + \"-no-icon\"] = !this.nzShowIcon,\n                _a[this.antAlert + \"-banner\"] = this.nzBanner,\n                _a[this.antAlert + \"-with-description\"] = !!this.nzDescription,\n                _a);\n            var _a;\n        };\n    return NzAlertComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzAlertModule = /*@__PURE__*/ (function () {\n    function NzAlertModule() {\n    }\n    return NzAlertModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzAnchorComponent = /*@__PURE__*/ (function () {\n    /* tslint:disable-next-line:no-any */\n    function NzAnchorComponent(scrollSrv, _renderer, doc) {\n        this.scrollSrv = scrollSrv;\n        this._renderer = _renderer;\n        this.links = [];\n        this.scroll$ = null;\n        this.target = null;\n        this.animating = false;\n        this._top = 0;\n        this._visible = false;\n        this.nzOffsetTop = 0;\n        this.nzBounds = 5;\n        this.nzScroll = new EventEmitter();\n        this.doc = doc;\n    }\n    Object.defineProperty(NzAnchorComponent.prototype, \"nzTarget\", {\n        set: /**\n         * @param {?} el\n         * @return {?}\n         */ function (el) {\n            this.target = el;\n            this.registerScrollEvent();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzAnchorComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            if (!this.scroll$) {\n                this.registerScrollEvent();\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzAnchorComponent.prototype.getTarget = /**\n     * @return {?}\n     */\n        function () {\n            return this.target || window;\n        };\n    /**\n     * @return {?}\n     */\n    NzAnchorComponent.prototype.handleScroll = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            if (this.animating) {\n                return;\n            }\n            var /** @type {?} */ sections = [];\n            this.links.forEach(function (comp) {\n                comp.active = false;\n                var /** @type {?} */ target = _this.doc.querySelector(comp.nzHref);\n                var /** @type {?} */ top = _this.scrollSrv.getOffset(target).top;\n                if (target && top < _this.nzOffsetTop + _this.nzBounds) {\n                    sections.push({\n                        top: top,\n                        comp: comp\n                    });\n                }\n            });\n            this._visible = !!sections.length;\n            if (!this._visible) {\n                return;\n            }\n            var /** @type {?} */ maxSection = sections.reduce(function (prev, curr) { return curr.top > prev.top ? curr : prev; });\n            maxSection.comp.active = true;\n            var /** @type {?} */ linkNode = (((maxSection.comp.el.nativeElement)).querySelector('.ant-anchor-link-title'));\n            this.ball.nativeElement.style.top = linkNode.offsetTop + linkNode.clientHeight / 2 - 4.5 + \"px\";\n            this.nzScroll.emit(maxSection.comp);\n        };\n    /**\n     * @return {?}\n     */\n    NzAnchorComponent.prototype.removeListen = /**\n     * @return {?}\n     */\n        function () {\n            if (this.scroll$) {\n                this.scroll$.unsubscribe();\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzAnchorComponent.prototype.registerScrollEvent = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            this.removeListen();\n            // 由于页面刷新时滚动条位置的记忆\n            // 倒置在dom未渲染完成，导致计算不正确（500ms用于延后执行解决）\n            setTimeout(function () {\n                _this.handleScroll();\n            }, 500);\n            this.scroll$ = fromEvent$1(this.getTarget(), 'scroll').pipe(throttleTime$1(50), distinctUntilChanged$1())\n                .subscribe(function (e) {\n                _this.handleScroll();\n            });\n        };\n    /**\n     * @param {?} linkComp\n     * @return {?}\n     */\n    NzAnchorComponent.prototype.add = /**\n     * @param {?} linkComp\n     * @return {?}\n     */\n        function (linkComp) {\n            this.links.push(linkComp);\n        };\n    /** 设置滚动条至 `linkComp` 所处位置 */\n    /**\n     * 设置滚动条至 `linkComp` 所处位置\n     * @param {?} linkComp\n     * @return {?}\n     */\n    NzAnchorComponent.prototype.scrollTo = /**\n     * 设置滚动条至 `linkComp` 所处位置\n     * @param {?} linkComp\n     * @return {?}\n     */\n        function (linkComp) {\n            var _this = this;\n            var /** @type {?} */ el = this.doc.querySelector(linkComp.nzHref);\n            if (!el) {\n                return;\n            }\n            this.animating = true;\n            var /** @type {?} */ containerScrollTop = this.scrollSrv.getScroll(this.getTarget());\n            var /** @type {?} */ elOffsetTop = this.scrollSrv.getOffset(el).top;\n            var /** @type {?} */ targetScrollTop = containerScrollTop + elOffsetTop - this.nzOffsetTop;\n            this.scrollSrv.scrollTo(this.getTarget(), targetScrollTop, null, function () {\n                _this.animating = false;\n                _this.handleScroll();\n            });\n        };\n    /**\n     * @return {?}\n     */\n    NzAnchorComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            this.removeListen();\n        };\n    return NzAnchorComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzAnchorLinkComponent = /*@__PURE__*/ (function () {\n    function NzAnchorLinkComponent(el, _anchorComp) {\n        this.el = el;\n        this._anchorComp = _anchorComp;\n        this.active = false;\n        this._anchorComp.add(this);\n    }\n    /**\n     * @return {?}\n     */\n    NzAnchorLinkComponent.prototype._onClick = /**\n     * @return {?}\n     */\n        function () {\n            this._anchorComp.scrollTo(this);\n        };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NzAnchorLinkComponent.prototype.goToClick = /**\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            this._anchorComp.scrollTo(this);\n            // return false;\n        };\n    return NzAnchorLinkComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzAnchorModule = /*@__PURE__*/ (function () {\n    function NzAnchorModule() {\n    }\n    return NzAnchorModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzAvatarComponent = /*@__PURE__*/ (function () {\n    function NzAvatarComponent(_elementRef, _renderer) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._prefixCls = 'ant-avatar';\n        this._classList = [];\n        this._sizeMap = { large: 'lg', small: 'sm' };\n        this._hasText = false;\n        this._isSrcExist = true;\n        this._hasIcon = false;\n        this.nzShape = 'circle';\n        this.nzSize = 'default';\n        this._el = _elementRef.nativeElement;\n        this._renderer.addClass(this._el, this._prefixCls);\n    }\n    /**\n     * @return {?}\n     */\n    NzAvatarComponent.prototype._setClassMap = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            this._classList.forEach(function (_className) {\n                _this._renderer.removeClass(_this._el, _className);\n            });\n            this._classList = [\n                this._sizeMap[this.nzSize] && this._prefixCls + \"-\" + this._sizeMap[this.nzSize],\n                this.nzShape && this._prefixCls + \"-\" + this.nzShape,\n                this.nzIcon && this._prefixCls + \"-icon\",\n                this.nzSrc && this._prefixCls + \"-image\"\n            ].filter(function (item) {\n                return !!item;\n            });\n            this._classList.forEach(function (_className) {\n                _this._renderer.addClass(_this._el, _className);\n            });\n            return this;\n        };\n    /**\n     * @return {?}\n     */\n    NzAvatarComponent.prototype._imgError = /**\n     * @return {?}\n     */\n        function () {\n            this._isSrcExist = false;\n            // TODO(i): need force remove [nzSrc] if broken image?\n            this._hasIcon = false;\n            this._hasText = false;\n            if (this.nzIcon) {\n                this._hasIcon = true;\n            }\n            else if (this.nzText) {\n                this._hasText = true;\n            }\n            this._setClassMap()._notifyCalc();\n        };\n    /**\n     * @return {?}\n     */\n    NzAvatarComponent.prototype._calcStringSize = /**\n     * @return {?}\n     */\n        function () {\n            if (!this._hasText)\n                return;\n            var /** @type {?} */ el = this._textEl && this._textEl.nativeElement;\n            if (!el)\n                return;\n            var /** @type {?} */ childrenWidth = el.offsetWidth;\n            var /** @type {?} */ avatarWidth = this._el.getBoundingClientRect().width;\n            var /** @type {?} */ scale = avatarWidth - 8 < childrenWidth ? (avatarWidth - 8) / childrenWidth : 1;\n            if (scale === 1) {\n                this._textStyles = {};\n            }\n            else {\n                this._textStyles = {\n                    transform: \"scale(\" + scale + \")\",\n                    position: 'absolute',\n                    display: 'inline-block',\n                    left: \"calc(50% - \" + Math.round(childrenWidth / 2) + \"px)\"\n                };\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzAvatarComponent.prototype._notifyCalc = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            // If use ngAfterViewChecked, always demands more computations, so......\n            setTimeout(function () {\n                _this._calcStringSize();\n            });\n            return this;\n        };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NzAvatarComponent.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n        function (changes) {\n            this._hasText = !this.nzSrc && !!this.nzText;\n            this._hasIcon = !this.nzSrc && !!this.nzIcon;\n            this._setClassMap()._notifyCalc();\n        };\n    return NzAvatarComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzAvatarModule = /*@__PURE__*/ (function () {\n    function NzAvatarModule() {\n    }\n    return NzAvatarModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzBackTopComponent = /*@__PURE__*/ (function () {\n    function NzBackTopComponent(scrollSrv, _renderer) {\n        this.scrollSrv = scrollSrv;\n        this._renderer = _renderer;\n        this.scroll$ = null;\n        this.target = null;\n        this._display = false;\n        this.nzVisibilityHeight = 400;\n        this.nzClick = new EventEmitter();\n    }\n    Object.defineProperty(NzBackTopComponent.prototype, \"nzTarget\", {\n        set: /**\n         * @param {?} el\n         * @return {?}\n         */ function (el) {\n            this.target = el;\n            this.registerScrollEvent();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzBackTopComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            if (!this.scroll$)\n                this.registerScrollEvent();\n        };\n    /**\n     * @return {?}\n     */\n    NzBackTopComponent.prototype.clickBackTop = /**\n     * @return {?}\n     */\n        function () {\n            this.scrollSrv.scrollTo(this.getTarget(), 0);\n            this.nzClick.emit(true);\n        };\n    /**\n     * @return {?}\n     */\n    NzBackTopComponent.prototype.getTarget = /**\n     * @return {?}\n     */\n        function () {\n            return this.target || window;\n        };\n    /**\n     * @return {?}\n     */\n    NzBackTopComponent.prototype.handleScroll = /**\n     * @return {?}\n     */\n        function () {\n            this._display = this.scrollSrv.getScroll(this.getTarget()) > this.nzVisibilityHeight;\n        };\n    /**\n     * @return {?}\n     */\n    NzBackTopComponent.prototype.removeListen = /**\n     * @return {?}\n     */\n        function () {\n            if (this.scroll$)\n                this.scroll$.unsubscribe();\n        };\n    /**\n     * @return {?}\n     */\n    NzBackTopComponent.prototype.registerScrollEvent = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            this.removeListen();\n            this.handleScroll();\n            this.scroll$ = fromEvent$1(this.getTarget(), 'scroll').pipe(throttleTime$1(50), distinctUntilChanged$1())\n                .subscribe(function (e) {\n                _this.handleScroll();\n            });\n        };\n    /**\n     * @return {?}\n     */\n    NzBackTopComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            this.removeListen();\n        };\n    return NzBackTopComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzBackTopModule = /*@__PURE__*/ (function () {\n    function NzBackTopModule() {\n    }\n    return NzBackTopModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzBadgeComponent = /*@__PURE__*/ (function () {\n    function NzBadgeComponent() {\n        this._showDot = false;\n        this._showZero = false;\n        this.countArray = [];\n        this.countSingleArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n        this.nzOverflowCount = 99;\n    }\n    Object.defineProperty(NzBadgeComponent.prototype, \"setNoWrapper\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return !this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzBadgeComponent.prototype, \"nzShowZero\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._showZero;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._showZero = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzBadgeComponent.prototype, \"nzDot\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._showDot;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._showDot = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzBadgeComponent.prototype, \"nzCount\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.count;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (value < 0) {\n                this.count = 0;\n            }\n            else {\n                this.count = value;\n            }\n            this.countArray = this.count.toString().split('');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzBadgeComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            this.maxNumberArray = this.nzOverflowCount.toString().split('');\n        };\n    return NzBadgeComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzBadgeModule = /*@__PURE__*/ (function () {\n    function NzBadgeModule() {\n    }\n    return NzBadgeModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzBreadCrumbComponent = /*@__PURE__*/ (function () {\n    function NzBreadCrumbComponent() {\n        this.nzSeparator = '/';\n    }\n    return NzBreadCrumbComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzBreadCrumbItemComponent = /*@__PURE__*/ (function () {\n    function NzBreadCrumbItemComponent(nzBreadCrumbComponent) {\n        this.nzBreadCrumbComponent = nzBreadCrumbComponent;\n    }\n    return NzBreadCrumbItemComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzBreadCrumbModule = /*@__PURE__*/ (function () {\n    function NzBreadCrumbModule() {\n    }\n    return NzBreadCrumbModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzButtonGroupComponent = /*@__PURE__*/ (function () {\n    function NzButtonGroupComponent() {\n        this._prefixCls = 'ant-btn-group';\n        this._sizeMap = { large: 'lg', small: 'sm' };\n        this._classMap = (_a = {},\n            _a[this._prefixCls] = true,\n            _a[this._prefixCls + \"-\" + this._sizeMap[this.nzSize]] = this._sizeMap[this.nzSize],\n            _a);\n        var _a;\n    }\n    Object.defineProperty(NzButtonGroupComponent.prototype, \"nzSize\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._size;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._size = value;\n            this._classMap = (_a = {},\n                _a[this._prefixCls] = true,\n                _a[this._prefixCls + \"-\" + this._sizeMap[this.nzSize]] = this._sizeMap[this.nzSize],\n                _a);\n            var _a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzButtonGroupComponent.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            /** trim text node between button */\n            Array.from(this._groupWrapper.nativeElement.childNodes).forEach(function (node) {\n                if (node.nodeType === 3) {\n                    _this._groupWrapper.nativeElement.removeChild(node);\n                }\n            });\n        };\n    return NzButtonGroupComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzButtonComponent = /*@__PURE__*/ (function () {\n    function NzButtonComponent(_elementRef, _renderer) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._ghost = false;\n        this._loading = false;\n        this._classList = [];\n        this._iconOnly = false;\n        this._clicked = false;\n        this._prefixCls = 'ant-btn';\n        this._sizeMap = { large: 'lg', small: 'sm' };\n        this._el = this._elementRef.nativeElement;\n        this.nativeElement = this._elementRef.nativeElement;\n        this._renderer.addClass(this._el, this._prefixCls);\n    }\n    Object.defineProperty(NzButtonComponent.prototype, \"nzGhost\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._ghost;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._ghost = toBoolean(value);\n            this._setClassMap();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzButtonComponent.prototype, \"nzType\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._type;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._type = value;\n            this._setClassMap();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzButtonComponent.prototype, \"nzShape\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._shape;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._shape = value;\n            this._setClassMap();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzButtonComponent.prototype, \"nzSize\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._size;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._size = value;\n            this._setClassMap();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzButtonComponent.prototype, \"nzLoading\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._loading;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._loading = toBoolean(value);\n            this._setClassMap();\n            this._setIconDisplay(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * toggle button clicked animation\n     * @return {?}\n     */\n    NzButtonComponent.prototype._onClick = /**\n     * toggle button clicked animation\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            this._clicked = true;\n            this._setClassMap();\n            setTimeout(function () {\n                _this._clicked = false;\n                _this._setClassMap();\n            }, 300);\n        };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzButtonComponent.prototype._setIconDisplay = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            var /** @type {?} */ innerI = this._iconElement;\n            if (innerI) {\n                this._renderer.setStyle(innerI, 'display', value ? 'none' : 'inline-block');\n            }\n        };\n    /** temp solution since no method add classMap to host https://github.com/angular/angular/issues/7289 */\n    /**\n     * temp solution since no method add classMap to host https://github.com/angular/angular/issues/7289\n     * @return {?}\n     */\n    NzButtonComponent.prototype._setClassMap = /**\n     * temp solution since no method add classMap to host https://github.com/angular/angular/issues/7289\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            this._classList.forEach(function (_className) {\n                _this._renderer.removeClass(_this._el, _className);\n            });\n            this._classList = [\n                this.nzType && this._prefixCls + \"-\" + this.nzType,\n                this.nzShape && this._prefixCls + \"-\" + this.nzShape,\n                this._sizeMap[this.nzSize] && this._prefixCls + \"-\" + this._sizeMap[this.nzSize],\n                this.nzLoading && this._prefixCls + \"-loading\",\n                this._clicked && this._prefixCls + \"-clicked\",\n                this._iconOnly && this._prefixCls + \"-icon-only\",\n                this.nzGhost && this._prefixCls + \"-background-ghost\",\n            ].filter(function (item) {\n                return !!item;\n            });\n            this._classList.forEach(function (_className) {\n                _this._renderer.addClass(_this._el, _className);\n            });\n        };\n    /**\n     * @return {?}\n     */\n    NzButtonComponent.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n        function () {\n            this._iconElement = this._innerIElement;\n            /** check if host children only has i element */\n            if (this._iconElement && this._el.children.length === 1 && (this._iconElement.isEqualNode(this._el.children[0]))) {\n                this._iconOnly = true;\n                this._setClassMap();\n            }\n            this._setIconDisplay(this.nzLoading);\n        };\n    Object.defineProperty(NzButtonComponent.prototype, \"_innerIElement\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._el.querySelector('i');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return NzButtonComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzButtonModule = /*@__PURE__*/ (function () {\n    function NzButtonModule() {\n    }\n    return NzButtonModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar LoggerService = /*@__PURE__*/ (function () {\n    function LoggerService(_loggerState) {\n        this._loggerState = _loggerState;\n    }\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    LoggerService.prototype.log = /**\n     * @param {...?} args\n     * @return {?}\n     */\n        function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this._loggerState) {\n                // console.log(...args);\n                console.log.apply(console, arguments);\n            }\n        };\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    LoggerService.prototype.warn = /**\n     * @param {...?} args\n     * @return {?}\n     */\n        function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this._loggerState) {\n                // console.warn(...args);\n                console.warn.apply(console, arguments);\n            }\n        };\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    LoggerService.prototype.error = /**\n     * @param {...?} args\n     * @return {?}\n     */\n        function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this._loggerState) {\n                // console.error(...args);\n                console.error.apply(console, arguments);\n            }\n        };\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    LoggerService.prototype.info = /**\n     * @param {...?} args\n     * @return {?}\n     */\n        function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this._loggerState) {\n                // console.log(...args);\n                console.log.apply(console, arguments);\n            }\n        };\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    LoggerService.prototype.debug = /**\n     * @param {...?} args\n     * @return {?}\n     */\n        function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this._loggerState) {\n                // console.log('[NG-ZORRO-DEBUG]', ...args);\n                var /** @type {?} */ arrs = Array.prototype.slice.call(arguments);\n                console.log.apply(console, ['[NG-ZORRO-DEBUG]'].concat(arrs));\n            }\n        };\n    return LoggerService;\n}());\nvar NZ_LOGGER_STATE = new InjectionToken('nz-logger-state');\n/**\n * @param {?} exist\n * @param {?} loggerState\n * @return {?}\n */\nfunction LOGGER_SERVICE_PROVIDER_FACTORY(exist, loggerState) { return exist || new LoggerService(loggerState); }\nvar LOGGER_SERVICE_PROVIDER = {\n    provide: LoggerService,\n    useFactory: LOGGER_SERVICE_PROVIDER_FACTORY,\n    deps: [[new Optional(), new SkipSelf(), LoggerService], NZ_LOGGER_STATE]\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar LoggerModule = /*@__PURE__*/ (function () {\n    function LoggerModule() {\n    }\n    return LoggerModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar zhCN = {\n    locale: 'zh-CN',\n    Pagination: {\n        itemsPerPage: '%num% 条/页',\n        jumpTo: '跳至',\n        page: '页',\n        forwardPage: '向前 %num% 页',\n        backwardPage: '向后 %num% 页',\n        prevPage: '上一页',\n        nextPage: '下一页',\n        firstPage: '第一页',\n        lastPage: '最后一页: %page%',\n        totalItems: '共 %total% 条',\n    },\n    DateTime: {\n        clear: '清除',\n        chooseMonth: '选择月份',\n        chooseYear: '选择年份',\n        nYear: '%num%年',\n        nMonth: '%num%月',\n        nDay: '%num%日',\n        prevYear: '上一年',\n        nextYear: '下一年',\n        prevMonth: '上个月',\n        nextMonth: '下个月',\n        prevDecade: '上一年代',\n        nextDecade: '下一年代',\n        chooseDecade: '选择年代',\n        chooseTime: '选择时间',\n        chooseDate: '选择日期',\n        chooseTimePlease: '请选择时间',\n        chooseDatePlease: '请选择日期',\n        chooseStartDatePlease: '开始日期',\n        chooseEndDatePlease: '结束日期',\n        thisMoment: '此刻',\n        today: '今天',\n        ok: '确 定',\n    },\n    Modal: {\n        okText: '确定',\n        cancelText: '取消',\n        understood: '知道了',\n    },\n    Table: {\n        emptyText: '没有数据',\n    },\n    Select: {\n        notFoundContent: '\b无法找到',\n    },\n    Transfer: {\n        titles: ',',\n        notFoundContent: '无匹配结果',\n        searchPlaceholder: '请输入',\n        itemUnit: '项目',\n        itemsUnit: '项目',\n    },\n    Upload: {\n        uploading: '文件上传中',\n        removeFile: '删除文件',\n        uploadError: '上传错误',\n        previewFile: '预览文件',\n    }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar enUS = {\n    locale: 'en-US',\n    Pagination: {\n        itemsPerPage: '%num% / page',\n        jumpTo: 'Goto',\n        page: '',\n        forwardPage: '%num% pages forward',\n        backwardPage: '%num% pages backward',\n        prevPage: 'Previous page',\n        nextPage: 'Next page',\n        firstPage: 'First page',\n        lastPage: 'Last page: %page%',\n        totalItems: '%total% items',\n    },\n    DateTime: {\n        clear: 'Clear',\n        chooseMonth: 'Choose a month',\n        chooseYear: 'Choose a year',\n        chooseDecade: 'Choose a decade',\n        nYear: '%num%',\n        nMonth: '%num%',\n        nDay: '%num%',\n        prevYear: 'Previous year',\n        nextYear: 'Next year',\n        prevMonth: 'Previous month',\n        nextMonth: 'Next month',\n        prevDecade: 'Previous decade',\n        nextDecade: 'Next decade',\n        chooseTime: 'Select time',\n        chooseDate: 'Select date',\n        chooseTimePlease: 'Select time',\n        chooseDatePlease: 'Select date',\n        chooseStartDatePlease: 'Start date',\n        chooseEndDatePlease: 'End date',\n        thisMoment: 'This moment',\n        today: 'Today',\n        ok: 'Ok',\n    },\n    Modal: {\n        okText: 'OK',\n        cancelText: 'Cancel',\n        understood: 'Got it',\n    },\n    Table: {\n        emptyText: 'No data',\n    },\n    Select: {\n        notFoundContent: '\bNot Found',\n    },\n    Transfer: {\n        titles: ',',\n        notFoundContent: 'Not Found',\n        searchPlaceholder: 'Search here',\n        itemUnit: 'item',\n        itemsUnit: 'items',\n    },\n    Upload: {\n        uploading: 'Uploading...',\n        removeFile: 'Remove',\n        uploadError: 'Error',\n        previewFile: 'Preview',\n    }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar trTR = {\n    locale: 'tr-TR',\n    Pagination: {\n        itemsPerPage: '%num% / sayfa',\n        jumpTo: 'Goto',\n        page: '',\n        forwardPage: '%num% sayfa ileri',\n        backwardPage: '%num% sayfa geri',\n        prevPage: 'Önceki sayfa',\n        nextPage: 'Sonraki sayfa',\n        firstPage: 'İlk Sayfa',\n        lastPage: 'Son sayfa: %page%',\n        totalItems: '%total% öğe',\n    },\n    DateTime: {\n        clear: 'Temiz',\n        chooseMonth: 'Bir ay seçin',\n        chooseYear: 'Bir yıl seçin',\n        chooseDecade: 'On Yıl seçin',\n        nYear: '%num%',\n        nMonth: '%num%',\n        nDay: '%num%',\n        prevYear: 'Önceki yıl',\n        nextYear: 'Sonraki yıl',\n        prevMonth: 'Önceki ay',\n        nextMonth: 'Sonraki ay',\n        prevDecade: 'Önceki on yıl',\n        nextDecade: 'Sonraki on yıl',\n        chooseTime: 'Saat seçin',\n        chooseDate: 'Tarih seçin',\n        chooseTimePlease: 'Saat seçin',\n        chooseDatePlease: 'Tarih seçin',\n        chooseStartDatePlease: 'Başlangıç tarihi',\n        chooseEndDatePlease: 'Bitiş tarihi',\n        thisMoment: 'Şimdi',\n        today: 'Bugün',\n        ok: 'Tamam',\n    },\n    Modal: {\n        okText: 'Tamam',\n        cancelText: 'İptal',\n        understood: 'Anladım',\n    },\n    Table: {\n        emptyText: 'Veri yok',\n    },\n    Select: {\n        notFoundContent: '\bBulunamadı',\n    },\n    Transfer: {\n        titles: ',',\n        notFoundContent: 'Bulunamadı',\n        searchPlaceholder: 'Burada ara',\n        itemUnit: 'öğe',\n        itemsUnit: 'öğeler',\n    },\n    Upload: {\n        uploading: 'Yükleniyor...',\n        removeFile: \"Dosyay\\u0131 kald\\u0131r\",\n        uploadError: 'Yükleme Hatası',\n        previewFile: \"Dosyay\\u0131 \\u00D6nizle\",\n    }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar zhTW = {\n    locale: 'zh-TW',\n    Pagination: {\n        itemsPerPage: '%num% 條/頁',\n        jumpTo: '跳至',\n        page: '頁',\n        forwardPage: '向前 %num% 頁',\n        backwardPage: '向後 %num% 頁',\n        prevPage: '上一頁',\n        nextPage: '下一頁',\n        firstPage: '第一頁',\n        lastPage: '最后一頁: %page%',\n        totalItems: '共 %total% 條',\n    },\n    DateTime: {\n        clear: '清除',\n        chooseMonth: '選擇月份',\n        chooseYear: '選擇年份',\n        nYear: '%num%年',\n        nMonth: '%num%月',\n        nDay: '%num%日',\n        prevYear: '上一年',\n        nextYear: '下一年',\n        prevMonth: '上个月',\n        nextMonth: '下个月',\n        prevDecade: '上一年代',\n        nextDecade: '下一年代',\n        chooseDecade: '選擇年代',\n        chooseTime: '選擇時間',\n        chooseDate: '選擇日期',\n        chooseTimePlease: '请選擇時間',\n        chooseDatePlease: '请選擇日期',\n        chooseStartDatePlease: '開始日期',\n        chooseEndDatePlease: '結束日期',\n        thisMoment: '此刻',\n        today: '今天',\n        ok: '確 定',\n    },\n    Modal: {\n        okText: '確定',\n        cancelText: '取消',\n        understood: 'OK',\n    },\n    Table: {\n        emptyText: '目前尚無資料',\n    },\n    Select: {\n        notFoundContent: '查無此資料',\n    },\n    Transfer: {\n        titles: ',',\n        notFoundContent: '查無此資料',\n        searchPlaceholder: '搜尋資料',\n        itemUnit: '項目',\n        itemsUnit: '項目',\n    },\n    Upload: {\n        uploading: '正在上傳...',\n        removeFile: '刪除檔案',\n        uploadError: '上傳失敗',\n        previewFile: '檔案預覽',\n    }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ruRU = {\n    locale: 'ru-RU',\n    Pagination: {\n        itemsPerPage: '%num% / страниц',\n        jumpTo: 'Перейти',\n        page: '',\n        forwardPage: '%num% страниц вперед',\n        backwardPage: '%num% страниц назад',\n        prevPage: 'Предыдущая страница',\n        nextPage: 'Следующая страница',\n        firstPage: 'Первая страница',\n        lastPage: 'Последняя страница: %page%',\n        totalItems: 'Всего %total%',\n    },\n    DateTime: {\n        clear: 'Очистить',\n        chooseMonth: 'Выберите месяц',\n        chooseYear: 'Выберите год',\n        chooseDecade: 'Выберите десятилетие',\n        nYear: '%num%',\n        nMonth: '%num%',\n        nDay: '%num%',\n        prevYear: 'Предыдущий год',\n        nextYear: 'Следующий год',\n        prevMonth: 'Предыдущий месяц',\n        nextMonth: 'Следующий месяц',\n        prevDecade: 'Предыдущее десятилетие',\n        nextDecade: 'Следующее десятилетие',\n        chooseTime: 'Выберите время',\n        chooseDate: 'Выберите дату',\n        chooseTimePlease: 'Выберите время',\n        chooseDatePlease: 'Выберите дату',\n        chooseStartDatePlease: 'Дата начала',\n        chooseEndDatePlease: 'Дата окончания',\n        thisMoment: 'Сейчас',\n        today: 'Сегодня',\n        ok: 'Ок',\n    },\n    Modal: {\n        okText: 'Ок',\n        cancelText: 'Отмена',\n        understood: 'Ок',\n    },\n    Table: {\n        emptyText: 'Нет данных',\n    },\n    Select: {\n        notFoundContent: 'Ничего не найдено',\n    },\n    Transfer: {\n        titles: ',',\n        notFoundContent: 'Нет данных',\n        searchPlaceholder: 'Поиск',\n        itemUnit: 'элемент',\n        itemsUnit: 'элементов',\n    },\n    Upload: {\n        uploading: 'Закачиваю...',\n        removeFile: 'Удалить файл',\n        uploadError: 'Ошибка при закачке',\n        previewFile: 'Предпросмотр файла',\n    }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzLocale = /*@__PURE__*/ (function () {\n    function NzLocale() {\n    }\n    return NzLocale;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NZ_LOCALE = new InjectionToken('nz-locale');\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzLocaleService = /*@__PURE__*/ (function () {\n    function NzLocaleService(locale, _logger) {\n        this._logger = _logger;\n        this.setLocale(locale);\n    }\n    // [NOTE] Performance issue: this method may called by every change detections\n    // TODO: cache more deeply paths for performance\n    /**\n     * @param {?} path\n     * @param {?=} data\n     * @return {?}\n     */\n    NzLocaleService.prototype.translate = /**\n     * @param {?} path\n     * @param {?=} data\n     * @return {?}\n     */\n        function (path, data) {\n            this._logger.debug(\"[NzLocaleService] Translating(\" + this._locale.locale + \"): \" + path);\n            var /** @type {?} */ content = (this._getObjectPath(this._locale, path));\n            if (typeof content === 'string') {\n                if (data) {\n                    Object.keys(data).forEach(function (key) { return content = content.replace(new RegExp(\"%\" + key + \"%\", 'g'), data[key]); });\n                }\n                return content;\n            }\n            return path;\n        };\n    /**\n     * Set/Change current locale globally throughout the WHOLE application\n     * [NOTE] If called at runtime, rendered interface may not change along with the locale change (because this do not trigger another render schedule)\n     * @param locale The translating letters\n     */\n    /**\n     * Set/Change current locale globally throughout the WHOLE application\n     * [NOTE] If called at runtime, rendered interface may not change along with the locale change (because this do not trigger another render schedule)\n     * @param {?} locale The translating letters\n     * @return {?}\n     */\n    NzLocaleService.prototype.setLocale = /**\n     * Set/Change current locale globally throughout the WHOLE application\n     * [NOTE] If called at runtime, rendered interface may not change along with the locale change (because this do not trigger another render schedule)\n     * @param {?} locale The translating letters\n     * @return {?}\n     */\n        function (locale) {\n            moment.locale(locale.locale);\n            this._locale = locale;\n        };\n    /**\n     * @return {?}\n     */\n    NzLocaleService.prototype.getLocale = /**\n     * @return {?}\n     */\n        function () {\n            return this._locale;\n        };\n    /**\n     * @param {?} obj\n     * @param {?} path\n     * @return {?}\n     */\n    NzLocaleService.prototype._getObjectPath = /**\n     * @param {?} obj\n     * @param {?} path\n     * @return {?}\n     */\n        function (obj, path) {\n            var /** @type {?} */ res = obj;\n            var /** @type {?} */ paths = path.split('.');\n            var /** @type {?} */ depth = paths.length;\n            var /** @type {?} */ index = 0;\n            while (res && index < depth) {\n                res = res[paths[index++]];\n            }\n            return index === depth ? res : null;\n        };\n    return NzLocaleService;\n}());\n/**\n * @param {?} exist\n * @param {?} locale\n * @param {?} logger\n * @return {?}\n */\nfunction NZ_LOCALE_SERVICE_PROVIDER_FACTORY(exist, locale, logger) {\n    return exist || new NzLocaleService(locale, logger);\n}\nvar NZ_LOCALE_SERVICE_PROVIDER = {\n    provide: NzLocaleService,\n    useFactory: NZ_LOCALE_SERVICE_PROVIDER_FACTORY,\n    deps: [[new Optional(), new SkipSelf(), NzLocaleService], NZ_LOCALE, LoggerService],\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzTranslatePipe = /*@__PURE__*/ (function () {\n    function NzTranslatePipe(_locale) {\n        this._locale = _locale;\n    }\n    /**\n     * @param {?} path\n     * @param {?=} keyValue\n     * @return {?}\n     */\n    NzTranslatePipe.prototype.transform = /**\n     * @param {?} path\n     * @param {?=} keyValue\n     * @return {?}\n     */\n        function (path, keyValue) {\n            return this._locale.translate(path, keyValue);\n        };\n    return NzTranslatePipe;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ɵ0 = zhCN;\nvar NzLocaleModule = /*@__PURE__*/ (function () {\n    function NzLocaleModule() {\n    }\n    return NzLocaleModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzRadioGroupComponent = /*@__PURE__*/ (function () {\n    function NzRadioGroupComponent(_elementRef, _render) {\n        this._elementRef = _elementRef;\n        this._render = _render;\n        this._prefixCls = 'ant-radio-group';\n        // ngModel Access\n        this.onChange = function () { return null; };\n        this.onTouched = function () { return null; };\n        this.radios = [];\n        this._el = this._elementRef.nativeElement;\n    }\n    Object.defineProperty(NzRadioGroupComponent.prototype, \"nzSize\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._size;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._size = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzRadioGroupComponent.prototype, \"isLarge\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._size === 'large';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzRadioGroupComponent.prototype, \"isSmall\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._size === 'small';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} radio\n     * @return {?}\n     */\n    NzRadioGroupComponent.prototype.addRadio = /**\n     * @param {?} radio\n     * @return {?}\n     */\n        function (radio) {\n            this.radios.push(radio);\n            radio.nzChecked = radio.nzValue === this._value;\n        };\n    /**\n     * @return {?}\n     */\n    NzRadioGroupComponent.prototype.checkRadios = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            this.radios.forEach(function (item) {\n                item.nzChecked = item.nzValue === _this._value;\n            });\n        };\n    /**\n     * @param {?} radio\n     * @return {?}\n     */\n    NzRadioGroupComponent.prototype.selectRadio = /**\n     * @param {?} radio\n     * @return {?}\n     */\n        function (radio) {\n            this.updateValue(radio.nzValue);\n        };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzRadioGroupComponent.prototype.updateValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            if (this._value === value) {\n                return;\n            }\n            this._value = value;\n            this.onChange(value);\n            this.checkRadios();\n        };\n    /**\n     * @return {?}\n     */\n    NzRadioGroupComponent.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            /** trim text node between radio button */\n            Array.from(this._el.childNodes).forEach(function (node) {\n                if (node.nodeType === 3) {\n                    _this._el.removeChild(node);\n                }\n            });\n        };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzRadioGroupComponent.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            this._value = value;\n            this.checkRadios();\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NzRadioGroupComponent.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onChange = fn;\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NzRadioGroupComponent.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onTouched = fn;\n        };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NzRadioGroupComponent.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n        function (isDisabled) {\n            this.radios.forEach(function (radio) {\n                radio.nzDisabled = isDisabled;\n            });\n        };\n    /**\n     * @return {?}\n     */\n    NzRadioGroupComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            this._render.addClass(this._el, \"\" + this._prefixCls);\n        };\n    return NzRadioGroupComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzRadioComponent = /*@__PURE__*/ (function () {\n    function NzRadioComponent(_elementRef, _renderer, _nzRadioGroup) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._nzRadioGroup = _nzRadioGroup;\n        this._focused = false;\n        this._checked = false;\n        this._disabled = false;\n        this._prefixCls = 'ant-radio';\n        this._innerPrefixCls = this._prefixCls + \"-inner\";\n        this._inputPrefixCls = this._prefixCls + \"-input\";\n        // ngModel Access\n        this.onChange = function () { return null; };\n        this.onTouched = function () { return null; };\n        this._el = this._elementRef.nativeElement;\n    }\n    Object.defineProperty(NzRadioComponent.prototype, \"nzChecked\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._checked;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._checked = toBoolean(value);\n            this.setClassMap();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzRadioComponent.prototype, \"nzValue\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._value;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (this._value === value) {\n                return;\n            }\n            this._value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzRadioComponent.prototype, \"nzDisabled\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._disabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._disabled = toBoolean(value);\n            this.setClassMap();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NzRadioComponent.prototype.onClick = /**\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            e.preventDefault();\n            if (!this._disabled) {\n                if (this._nzRadioGroup) {\n                    this._checked = true;\n                    this.setClassMap();\n                    this._nzRadioGroup.selectRadio(this);\n                }\n                else {\n                    this.updateValue(!this._checked);\n                }\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzRadioComponent.prototype.nzFocus = /**\n     * @return {?}\n     */\n        function () {\n            this._focused = true;\n            this.setClassMap();\n        };\n    /**\n     * @return {?}\n     */\n    NzRadioComponent.prototype.nzBlur = /**\n     * @return {?}\n     */\n        function () {\n            this._focused = false;\n            this.setClassMap();\n            if (this._nzRadioGroup)\n                this._nzRadioGroup.onTouched();\n        };\n    /**\n     * @return {?}\n     */\n    NzRadioComponent.prototype.setClassMap = /**\n     * @return {?}\n     */\n        function () {\n            this._classMap = (_a = {},\n                _a[this._prefixCls] = true,\n                _a[this._prefixCls + \"-checked\"] = this._checked,\n                _a[this._prefixCls + \"-focused\"] = this._focused,\n                _a[this._prefixCls + \"-disabled\"] = this._disabled,\n                _a);\n            var _a;\n        };\n    /**\n     * @return {?}\n     */\n    NzRadioComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            if (this._nzRadioGroup)\n                this._nzRadioGroup.addRadio(this);\n            this._renderer.addClass(this._el, this._prefixCls + \"-wrapper\");\n            this.setClassMap();\n        };\n    // region: value accessor\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzRadioComponent.prototype.updateValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            if (value === this._checked) {\n                return;\n            }\n            this.onChange(value);\n            this._focused = false;\n            this._checked = value;\n            this.setClassMap();\n        };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzRadioComponent.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            this._checked = value;\n            this.setClassMap();\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NzRadioComponent.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onChange = fn;\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NzRadioComponent.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onTouched = fn;\n        };\n    return NzRadioComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzRadioButtonComponent = /*@__PURE__*/ (function (_super) {\n    __extends(NzRadioButtonComponent, _super);\n    function NzRadioButtonComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._checked = false;\n        _this._disabled = false;\n        _this._prefixCls = 'ant-radio-button';\n        _this._innerPrefixCls = _this._prefixCls + \"-inner\";\n        _this._inputPrefixCls = _this._prefixCls + \"-input\";\n        return _this;\n    }\n    Object.defineProperty(NzRadioButtonComponent.prototype, \"nzDisabled\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._disabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._disabled = toBoolean(value);\n            this.setClassMap();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzRadioButtonComponent.prototype, \"nzChecked\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._checked;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._checked = toBoolean(value);\n            this.setClassMap();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return NzRadioButtonComponent;\n}(NzRadioComponent));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzRadioModule = /*@__PURE__*/ (function () {\n    function NzRadioModule() {\n    }\n    return NzRadioModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar dropDownAnimation = trigger('dropDownAnimation', [\n    state('bottom', style({\n        opacity: 1,\n        transform: 'scaleY(1)',\n        transformOrigin: '0% 0%'\n    })),\n    transition('void => bottom', [\n        style({\n            opacity: 0,\n            transform: 'scaleY(0)',\n            transformOrigin: '0% 0%'\n        }),\n        animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n    ]),\n    state('top', style({\n        opacity: 1,\n        transform: 'scaleY(1)',\n        transformOrigin: '0% 100%'\n    })),\n    transition('void => top', [\n        style({\n            opacity: 0,\n            transform: 'scaleY(0)',\n            transformOrigin: '0% 100%'\n        }),\n        animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n    ]),\n    transition('* => void', [\n        animate('250ms 100ms linear', style({ opacity: 0 }))\n    ])\n]);\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar tagAnimation = trigger('tagAnimation', [\n    state('*', style({ opacity: 1, transform: 'scale(1)' })),\n    transition('void => *', [\n        style({ opacity: 0, transform: 'scale(0)' }),\n        animate('150ms linear')\n    ]),\n    state('void', style({ opacity: 0, transform: 'scale(0)' })),\n    transition('* => void', [\n        style({ opacity: 1, transform: 'scale(1)' }),\n        animate('150ms linear')\n    ])\n]);\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzOptionPipe = /*@__PURE__*/ (function () {\n    function NzOptionPipe() {\n    }\n    // TODO: enable type checking for this method\n    /**\n     * @param {?} options\n     * @param {?} value\n     * @return {?}\n     */\n    NzOptionPipe.prototype.transform = /**\n     * @param {?} options\n     * @param {?} value\n     * @return {?}\n     */\n        function (options, value) {\n            if (value.searchText) {\n                var /** @type {?} */ _options = options.filter(function (option) { return option.nzLabel && (option.nzLabel.toLowerCase().indexOf(value.searchText.toLowerCase()) !== -1); });\n                if (value.tags) {\n                    _options = options.filter(function (option) { return option.nzLabel && (option.nzLabel.toLowerCase() === value.searchText.toLowerCase()); });\n                }\n                if (_options.length) {\n                    return _options;\n                }\n                else {\n                    return [/** @type {?} */ (({\n                            nzValue: value.value,\n                            _value: value.value,\n                            nzDisabled: value.disabled,\n                            _disabled: value.disabled,\n                            nzLabel: value.notFoundContent,\n                            _label: value.notFoundContent,\n                        }))];\n                }\n            }\n            else {\n                return options;\n            }\n        };\n    return NzOptionPipe;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzSelectComponent = /*@__PURE__*/ (function () {\n    function NzSelectComponent(_elementRef, _renderer, _locale) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._locale = _locale;\n        this._allowClear = false;\n        this._disabled = false;\n        this._isTags = false;\n        this._isMultiple = false;\n        this._keepUnListOptions = false;\n        this._showSearch = false;\n        this._isOpen = false;\n        this._prefixCls = 'ant-select';\n        this._classList = [];\n        this._dropDownPrefixCls = this._prefixCls + \"-dropdown\";\n        this._selectionPrefixCls = this._prefixCls + \"-selection\";\n        this._placeholder = 'placeholder';\n        this._notFoundContent = this._locale.translate('Select.notFoundContent');\n        this._searchText = '';\n        this._triggerWidth = 0;\n        this._selectedOptions = new Set();\n        this._options = [];\n        this._cacheOptions = [];\n        this._filterOptions = [];\n        this._tagsOptions = [];\n        this._isMultiInit = false;\n        this._dropDownPosition = 'bottom';\n        this._composing = false;\n        // ngModel Access\n        this.onChange = function () { return null; };\n        this.onTouched = function () { return null; };\n        this.nzSearchChange = new EventEmitter();\n        this.nzOpenChange = new EventEmitter();\n        this.nzScrollToBottom = new EventEmitter();\n        this.nzFilter = true;\n        this.nzMaxMultiple = Infinity;\n        /**\n         * new nz-option insert or new tags insert\n         */\n        this.addOption = function (option) {\n            _this._options.push(option);\n            if (!_this._isTags) {\n                if (option.nzValue) {\n                    _this.updateSelectedOption(_this._value);\n                }\n                else {\n                    _this.forceUpdateSelectedOption(_this._value);\n                }\n            }\n        };\n        /**\n         * cancel select multiple option\n         */\n        this.unSelectMultipleOption = function (option, $event, emitChange) {\n            if (emitChange === void 0) {\n                emitChange = true;\n            }\n            _this._operatingMultipleOption = option;\n            _this._selectedOptions.delete(option);\n            if (emitChange) {\n                _this.emitMultipleOptions();\n            }\n            // 对Tag进行特殊处理\n            if (_this._isTags && (_this._options.indexOf(option) !== -1) && (_this._tagsOptions.indexOf(option) !== -1)) {\n                _this.removeOption(option);\n                _this._tagsOptions.splice(_this._tagsOptions.indexOf(option), 1);\n            }\n            if ($event) {\n                $event.preventDefault();\n                $event.stopPropagation();\n            }\n        };\n        this._el = this._elementRef.nativeElement;\n    }\n    Object.defineProperty(NzSelectComponent.prototype, \"nzAllowClear\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._allowClear;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._allowClear = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSelectComponent.prototype, \"nzKeepUnListOptions\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._keepUnListOptions;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._keepUnListOptions = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSelectComponent.prototype, \"nzMode\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._mode = value;\n            if (this._mode === 'multiple') {\n                this.nzMultiple = true;\n            }\n            else if (this._mode === 'tags') {\n                this.nzTags = true;\n            }\n            else if (this._mode === 'combobox') {\n                this.nzShowSearch = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSelectComponent.prototype, \"nzMultiple\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._isMultiple;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._isMultiple = toBoolean(value);\n            if (this._isMultiple) {\n                this.nzShowSearch = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSelectComponent.prototype, \"nzPlaceHolder\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._placeholder;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._placeholder = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSelectComponent.prototype, \"nzNotFoundContent\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._notFoundContent;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._notFoundContent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSelectComponent.prototype, \"nzSize\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._size;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._size = { large: 'lg', small: 'sm' }[value];\n            this.setClassMap();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSelectComponent.prototype, \"nzShowSearch\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._showSearch;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._showSearch = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSelectComponent.prototype, \"nzTags\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._isTags;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            var /** @type {?} */ isTags = toBoolean(value);\n            this._isTags = isTags;\n            this.nzMultiple = isTags;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSelectComponent.prototype, \"nzDisabled\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._disabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._disabled = toBoolean(value);\n            this.closeDropDown();\n            this.setClassMap();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSelectComponent.prototype, \"nzOpen\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._isOpen;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            var _this = this;\n            var /** @type {?} */ isOpen = toBoolean(value);\n            if (this._isOpen === isOpen) {\n                return;\n            }\n            if (isOpen) {\n                this.scrollToActive();\n                this._setTriggerWidth();\n            }\n            this._isOpen = isOpen;\n            this.nzOpenChange.emit(this._isOpen);\n            this.setClassMap();\n            if (this._isOpen) {\n                setTimeout(function () {\n                    _this.checkDropDownScroll();\n                });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** nz-option remove or tags remove */\n    /**\n     * nz-option remove or tags remove\n     * @param {?} option\n     * @return {?}\n     */\n    NzSelectComponent.prototype.removeOption = /**\n     * nz-option remove or tags remove\n     * @param {?} option\n     * @return {?}\n     */\n        function (option) {\n            this._options.splice(this._options.indexOf(option), 1);\n            if (!this._isTags) {\n                this.forceUpdateSelectedOption(this._value);\n            }\n        };\n    /** dropdown position changed */\n    /**\n     * dropdown position changed\n     * @param {?} position\n     * @return {?}\n     */\n    NzSelectComponent.prototype.onPositionChange = /**\n     * dropdown position changed\n     * @param {?} position\n     * @return {?}\n     */\n        function (position) {\n            this._dropDownPosition = position.connectionPair.originY;\n        };\n    /**\n     * @return {?}\n     */\n    NzSelectComponent.prototype.compositionStart = /**\n     * @return {?}\n     */\n        function () {\n            this._composing = true;\n        };\n    /**\n     * @return {?}\n     */\n    NzSelectComponent.prototype.compositionEnd = /**\n     * @return {?}\n     */\n        function () {\n            this._composing = false;\n        };\n    /** clear single selected option */\n    /**\n     * clear single selected option\n     * @param {?=} $event\n     * @return {?}\n     */\n    NzSelectComponent.prototype.clearSelect = /**\n     * clear single selected option\n     * @param {?=} $event\n     * @return {?}\n     */\n        function ($event) {\n            if ($event) {\n                $event.preventDefault();\n                $event.stopPropagation();\n            }\n            this._selectedOption = null;\n            this.nzValue = null;\n            this.onChange(null);\n        };\n    /** click dropdown option by user */\n    /**\n     * click dropdown option by user\n     * @param {?} option\n     * @param {?=} $event\n     * @return {?}\n     */\n    NzSelectComponent.prototype.clickOption = /**\n     * click dropdown option by user\n     * @param {?} option\n     * @param {?=} $event\n     * @return {?}\n     */\n        function (option, $event) {\n            if (!option) {\n                return;\n            }\n            this.chooseOption(option, true, $event);\n            this.clearSearchText();\n            if (!this._isMultiple) {\n                this.nzOpen = false;\n            }\n        };\n    /** choose option */\n    /**\n     * choose option\n     * @param {?} option\n     * @param {?=} isUserClick\n     * @param {?=} $event\n     * @return {?}\n     */\n    NzSelectComponent.prototype.chooseOption = /**\n     * choose option\n     * @param {?} option\n     * @param {?=} isUserClick\n     * @param {?=} $event\n     * @return {?}\n     */\n        function (option, isUserClick, $event) {\n            if (isUserClick === void 0) {\n                isUserClick = false;\n            }\n            if ($event) {\n                $event.preventDefault();\n                $event.stopPropagation();\n            }\n            this._activeFilterOption = option;\n            if (option && !option.nzDisabled) {\n                if (!this.nzMultiple) {\n                    this._selectedOption = option;\n                    this._value = option.nzValue;\n                    if (isUserClick) {\n                        this.onChange(option.nzValue);\n                    }\n                }\n                else {\n                    if (isUserClick) {\n                        this.isInSet(this._selectedOptions, option) ? this.unSelectMultipleOption(option) : this.selectMultipleOption(option);\n                    }\n                }\n            }\n        };\n    /**\n     * @param {?} element\n     * @param {?} text\n     * @return {?}\n     */\n    NzSelectComponent.prototype.updateWidth = /**\n     * @param {?} element\n     * @param {?} text\n     * @return {?}\n     */\n        function (element, text) {\n            var _this = this;\n            if (text) {\n                /** wait for scroll width change */\n                setTimeout(function (_) {\n                    _this._renderer.setStyle(element, 'width', element.scrollWidth + \"px\");\n                });\n            }\n            else {\n                this._renderer.removeStyle(element, 'width');\n            }\n        };\n    /** determine if option in set */\n    /**\n     * determine if option in set\n     * @param {?} set\n     * @param {?} option\n     * @return {?}\n     */\n    NzSelectComponent.prototype.isInSet = /**\n     * determine if option in set\n     * @param {?} set\n     * @param {?} option\n     * @return {?}\n     */\n        function (set, option) {\n            return (((Array.from(set))).find(function (data) { return data.nzValue === option.nzValue; }));\n        };\n    /** select multiple option */\n    /**\n     * select multiple option\n     * @param {?} option\n     * @param {?=} $event\n     * @return {?}\n     */\n    NzSelectComponent.prototype.selectMultipleOption = /**\n     * select multiple option\n     * @param {?} option\n     * @param {?=} $event\n     * @return {?}\n     */\n        function (option, $event) {\n            /** if tags do push to tag option */\n            if (this._isTags && (this._options.indexOf(option) === -1) && (this._tagsOptions.indexOf(option) === -1)) {\n                this.addOption(option);\n                this._tagsOptions.push(option);\n            }\n            this._operatingMultipleOption = option;\n            if (this._selectedOptions.size < this.nzMaxMultiple) {\n                this._selectedOptions.add(option);\n            }\n            this.emitMultipleOptions();\n            if ($event) {\n                $event.preventDefault();\n                $event.stopPropagation();\n            }\n        };\n    /** emit multiple options */\n    /**\n     * emit multiple options\n     * @return {?}\n     */\n    NzSelectComponent.prototype.emitMultipleOptions = /**\n     * emit multiple options\n     * @return {?}\n     */\n        function () {\n            if (this._isMultiInit) {\n                return;\n            }\n            var /** @type {?} */ arrayOptions = Array.from(this._selectedOptions);\n            this._value = arrayOptions.map(function (item) { return item.nzValue; });\n            this.onChange(this._value);\n        };\n    /** update selected option when add remove option etc */\n    /**\n     * update selected option when add remove option etc\n     * @param {?} currentModelValue\n     * @param {?=} triggerByNgModel\n     * @return {?}\n     */\n    NzSelectComponent.prototype.updateSelectedOption = /**\n     * update selected option when add remove option etc\n     * @param {?} currentModelValue\n     * @param {?=} triggerByNgModel\n     * @return {?}\n     */\n        function (currentModelValue, triggerByNgModel) {\n            var _this = this;\n            if (triggerByNgModel === void 0) {\n                triggerByNgModel = false;\n            }\n            if (currentModelValue == null) {\n                return;\n            }\n            if (this.nzMultiple) {\n                var /** @type {?} */ selectedOptions = this._options.filter(function (item) {\n                    return (item != null) && (currentModelValue.indexOf(item.nzValue) !== -1);\n                });\n                if ((this.nzKeepUnListOptions || this.nzTags) && (!triggerByNgModel)) {\n                    var /** @type {?} */ _selectedOptions_1 = Array.from(this._selectedOptions);\n                    selectedOptions.forEach(function (option) {\n                        var /** @type {?} */ _exist = _selectedOptions_1.some(function (item) { return item._value === option._value; });\n                        if (!_exist) {\n                            _this._selectedOptions.add(option);\n                        }\n                    });\n                }\n                else {\n                    this._selectedOptions = new Set();\n                    selectedOptions.forEach(function (option) {\n                        _this._selectedOptions.add(option);\n                    });\n                }\n            }\n            else {\n                var /** @type {?} */ selectedOption = this._options.filter(function (item) {\n                    return (item != null) && (item.nzValue === currentModelValue);\n                });\n                this.chooseOption(selectedOption[0]);\n            }\n        };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzSelectComponent.prototype.forceUpdateSelectedOption = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            var _this = this;\n            /** trigger dirty check */\n            setTimeout(function (_) {\n                _this.updateSelectedOption(value);\n            });\n        };\n    Object.defineProperty(NzSelectComponent.prototype, \"nzValue\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._value;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._updateValue(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} emitChange\n     * @return {?}\n     */\n    NzSelectComponent.prototype.clearAllSelectedOption = /**\n     * @param {?=} emitChange\n     * @return {?}\n     */\n        function (emitChange) {\n            var _this = this;\n            if (emitChange === void 0) {\n                emitChange = true;\n            }\n            this._selectedOptions.forEach(function (item) {\n                _this.unSelectMultipleOption(item, null, emitChange);\n            });\n        };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    NzSelectComponent.prototype.handleKeyEnterEvent = /**\n     * @param {?} event\n     * @return {?}\n     */\n        function (event) {\n            /** when composing end */\n            if (!this._composing && this._isOpen) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.updateFilterOption(false);\n                this.clickOption(this._activeFilterOption);\n            }\n        };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    NzSelectComponent.prototype.handleKeyBackspaceEvent = /**\n     * @param {?} event\n     * @return {?}\n     */\n        function (event) {\n            if ((!this._searchText) && (!this._composing) && (this._isMultiple)) {\n                event.preventDefault();\n                var /** @type {?} */ lastOption = Array.from(this._selectedOptions).pop();\n                this.unSelectMultipleOption(lastOption);\n            }\n        };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NzSelectComponent.prototype.handleKeyDownEvent = /**\n     * @param {?} $event\n     * @return {?}\n     */\n        function ($event) {\n            if (this._isOpen) {\n                $event.preventDefault();\n                $event.stopPropagation();\n                this._activeFilterOption = this.nextOption(this._activeFilterOption, this._filterOptions.filter(function (w) { return !w.nzDisabled; }));\n                this.scrollToActive();\n            }\n        };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NzSelectComponent.prototype.handleKeyUpEvent = /**\n     * @param {?} $event\n     * @return {?}\n     */\n        function ($event) {\n            if (this._isOpen) {\n                $event.preventDefault();\n                $event.stopPropagation();\n                this._activeFilterOption = this.preOption(this._activeFilterOption, this._filterOptions.filter(function (w) { return !w.nzDisabled; }));\n                this.scrollToActive();\n            }\n        };\n    /**\n     * @param {?} option\n     * @param {?} options\n     * @return {?}\n     */\n    NzSelectComponent.prototype.preOption = /**\n     * @param {?} option\n     * @param {?} options\n     * @return {?}\n     */\n        function (option, options) {\n            return options[options.indexOf(option) - 1] || options[options.length - 1];\n        };\n    /**\n     * @param {?} option\n     * @param {?} options\n     * @return {?}\n     */\n    NzSelectComponent.prototype.nextOption = /**\n     * @param {?} option\n     * @param {?} options\n     * @return {?}\n     */\n        function (option, options) {\n            return options[options.indexOf(option) + 1] || options[0];\n        };\n    /**\n     * @return {?}\n     */\n    NzSelectComponent.prototype.clearSearchText = /**\n     * @return {?}\n     */\n        function () {\n            this._searchText = '';\n            this.updateFilterOption();\n        };\n    /**\n     * @param {?=} updateActiveFilter\n     * @return {?}\n     */\n    NzSelectComponent.prototype.updateFilterOption = /**\n     * @param {?=} updateActiveFilter\n     * @return {?}\n     */\n        function (updateActiveFilter) {\n            if (updateActiveFilter === void 0) {\n                updateActiveFilter = true;\n            }\n            if (this.nzFilter) {\n                this._filterOptions = new NzOptionPipe().transform(this._options, {\n                    'searchText': this._searchText,\n                    'tags': this._isTags,\n                    'notFoundContent': this._isTags ? this._searchText : this._notFoundContent,\n                    'disabled': !this._isTags,\n                    'value': this._isTags ? this._searchText : 'disabled'\n                });\n            }\n            else {\n                this._filterOptions = this._options;\n            }\n            /** TODO: cause pre & next key selection not work */\n            if (updateActiveFilter && !this._selectedOption) {\n                this._activeFilterOption = this._filterOptions[0];\n            }\n        };\n    /**\n     * @param {?} searchValue\n     * @return {?}\n     */\n    NzSelectComponent.prototype.onSearchChange = /**\n     * @param {?} searchValue\n     * @return {?}\n     */\n        function (searchValue) {\n            this.nzSearchChange.emit(searchValue);\n        };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NzSelectComponent.prototype.onClick = /**\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            var _this = this;\n            e.preventDefault();\n            if (!this._disabled) {\n                this.nzOpen = !this.nzOpen;\n                if (this.nzShowSearch) {\n                    /** wait for search display */\n                    setTimeout(function (_) {\n                        _this.searchInputElementRef.nativeElement.focus();\n                    });\n                }\n            }\n        };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NzSelectComponent.prototype.onKeyDown = /**\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            var _this = this;\n            var /** @type {?} */ keyCode = e.keyCode;\n            if (keyCode === TAB && this.nzOpen) {\n                this.nzOpen = false;\n                return;\n            }\n            if ((keyCode !== DOWN_ARROW && keyCode !== ENTER) || this.nzOpen) {\n                return;\n            }\n            e.preventDefault();\n            if (!this._disabled) {\n                this.nzOpen = true;\n                if (this.nzShowSearch) {\n                    /** wait for search display */\n                    setTimeout(function (_) {\n                        _this.searchInputElementRef.nativeElement.focus();\n                    });\n                }\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzSelectComponent.prototype.closeDropDown = /**\n     * @return {?}\n     */\n        function () {\n            if (!this.nzOpen) {\n                return;\n            }\n            this.onTouched();\n            if (this.nzMultiple) {\n                this._renderer.removeStyle(this.searchInputElementRef.nativeElement, 'width');\n            }\n            this.clearSearchText();\n            this.nzOpen = false;\n        };\n    /**\n     * @return {?}\n     */\n    NzSelectComponent.prototype.setClassMap = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            this._classList.forEach(function (_className) {\n                _this._renderer.removeClass(_this._el, _className);\n            });\n            this._classList = [\n                this._prefixCls,\n                (this._mode === 'combobox') && this._prefixCls + \"-combobox\",\n                (!this._disabled) && this._prefixCls + \"-enabled\",\n                (this._disabled) && this._prefixCls + \"-disabled\",\n                this._isOpen && this._prefixCls + \"-open\",\n                this._showSearch && this._prefixCls + \"-show-search\",\n                this._size && this._prefixCls + \"-\" + this._size\n            ].filter(function (item) {\n                return !!item;\n            });\n            this._classList.forEach(function (_className) {\n                _this._renderer.addClass(_this._el, _className);\n            });\n            this._selectionClassMap = (_a = {},\n                _a[this._selectionPrefixCls] = true,\n                _a[this._selectionPrefixCls + \"--single\"] = !this.nzMultiple,\n                _a[this._selectionPrefixCls + \"--multiple\"] = this.nzMultiple,\n                _a);\n            var _a;\n        };\n    /**\n     * @return {?}\n     */\n    NzSelectComponent.prototype.setDropDownClassMap = /**\n     * @return {?}\n     */\n        function () {\n            this._dropDownClassMap = (_a = {},\n                _a[this._dropDownPrefixCls] = true,\n                _a['component-select'] = this._mode === 'combobox',\n                _a[this._dropDownPrefixCls + \"--single\"] = !this.nzMultiple,\n                _a[this._dropDownPrefixCls + \"--multiple\"] = this.nzMultiple,\n                _a[this._dropDownPrefixCls + \"-placement-bottomLeft\"] = this._dropDownPosition === 'bottom',\n                _a[this._dropDownPrefixCls + \"-placement-topLeft\"] = this._dropDownPosition === 'top',\n                _a);\n            var _a;\n        };\n    /**\n     * @return {?}\n     */\n    NzSelectComponent.prototype.scrollToActive = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            /** wait for dropdown display */\n            setTimeout(function (_) {\n                if (_this._activeFilterOption && _this._activeFilterOption.nzValue) {\n                    var /** @type {?} */ index = _this._filterOptions.findIndex(function (option) { return option.nzValue === _this._activeFilterOption.nzValue; });\n                    try {\n                        var /** @type {?} */ scrollPane = (_this.dropdownUl.nativeElement.children[index]);\n                        // TODO: scrollIntoViewIfNeeded is not a standard API, why doing so?\n                        /* tslint:disable-next-line:no-any */\n                        ((scrollPane)).scrollIntoViewIfNeeded(false);\n                    }\n                    catch (e) {\n                    }\n                }\n            });\n        };\n    /**\n     * @return {?}\n     */\n    NzSelectComponent.prototype.flushComponentState = /**\n     * @return {?}\n     */\n        function () {\n            this.updateFilterOption();\n            if (!this.nzMultiple) {\n                this.updateSelectedOption(this._value);\n            }\n            else {\n                if (this._value) {\n                    this.updateSelectedOption(this._value);\n                }\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzSelectComponent.prototype._setTriggerWidth = /**\n     * @return {?}\n     */\n        function () {\n            this._triggerWidth = this._getTriggerRect().width;\n            /** should remove after after https://github.com/angular/material2/pull/8765 merged **/\n            if (this._cdkOverlay && this._cdkOverlay.overlayRef) {\n                this._cdkOverlay.overlayRef.updateSize({\n                    width: this._triggerWidth\n                });\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzSelectComponent.prototype._getTriggerRect = /**\n     * @return {?}\n     */\n        function () {\n            return this.trigger.nativeElement.getBoundingClientRect();\n        };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzSelectComponent.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            this._updateValue(value, false);\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NzSelectComponent.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onChange = fn;\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NzSelectComponent.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onTouched = fn;\n        };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NzSelectComponent.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n        function (isDisabled) {\n            this.nzDisabled = isDisabled;\n        };\n    /**\n     * @param {?} ul\n     * @return {?}\n     */\n    NzSelectComponent.prototype.dropDownScroll = /**\n     * @param {?} ul\n     * @return {?}\n     */\n        function (ul) {\n            if (ul && (ul.scrollHeight - ul.scrollTop === ul.clientHeight)) {\n                this.nzScrollToBottom.emit(true);\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzSelectComponent.prototype.checkDropDownScroll = /**\n     * @return {?}\n     */\n        function () {\n            if (this.dropdownUl && (this.dropdownUl.nativeElement.scrollHeight === this.dropdownUl.nativeElement.clientHeight)) {\n                this.nzScrollToBottom.emit(true);\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzSelectComponent.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n        function () {\n            if (this._value != null) {\n                this.flushComponentState();\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzSelectComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            this.updateFilterOption();\n            this.setClassMap();\n            this.setDropDownClassMap();\n        };\n    /**\n     * @return {?}\n     */\n    NzSelectComponent.prototype.ngAfterContentChecked = /**\n     * @return {?}\n     */\n        function () {\n            if (this._cacheOptions !== this._options) {\n                /** update filter option after every content check cycle */\n                this.updateFilterOption();\n                this._cacheOptions = this._options;\n            }\n            else {\n                this.updateFilterOption(false);\n            }\n        };\n    /**\n     * @param {?} value\n     * @param {?=} emitChange\n     * @return {?}\n     */\n    NzSelectComponent.prototype._updateValue = /**\n     * @param {?} value\n     * @param {?=} emitChange\n     * @return {?}\n     */\n        function (value, emitChange) {\n            if (emitChange === void 0) {\n                emitChange = true;\n            }\n            if (this._value === value) {\n                return;\n            }\n            if ((value == null) && this.nzMultiple) {\n                this._value = [];\n            }\n            else {\n                this._value = value;\n            }\n            if (!this.nzMultiple) {\n                if (value == null) {\n                    this._selectedOption = null;\n                }\n                else {\n                    this.updateSelectedOption(value);\n                }\n            }\n            else {\n                if (value) {\n                    if (value.length === 0) {\n                        this.clearAllSelectedOption(emitChange);\n                    }\n                    else {\n                        this.updateSelectedOption(value, true);\n                    }\n                }\n                else if (value == null) {\n                    this.clearAllSelectedOption(emitChange);\n                }\n            }\n        };\n    return NzSelectComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzOptionComponent = /*@__PURE__*/ (function () {\n    function NzOptionComponent(_nzSelect) {\n        this._nzSelect = _nzSelect;\n        this._disabled = false;\n    }\n    Object.defineProperty(NzOptionComponent.prototype, \"nzValue\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._value;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (this._value === value) {\n                return;\n            }\n            this._value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzOptionComponent.prototype, \"nzLabel\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._label;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (this._label === value) {\n                return;\n            }\n            this._label = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzOptionComponent.prototype, \"nzDisabled\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._disabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._disabled = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzOptionComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            this._nzSelect.addOption(this);\n        };\n    /**\n     * @return {?}\n     */\n    NzOptionComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            this._nzSelect.removeOption(this);\n        };\n    return NzOptionComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzSelectModule = /*@__PURE__*/ (function () {\n    function NzSelectModule() {\n    }\n    return NzSelectModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n/**\n * @record\n */\n/**\n * @record\n */\n/** @enum {number} */\nvar RangePart = /*@__PURE__*/ (function () {\n    var RangePart = { Start: 0, End: 1, };\n    RangePart[RangePart.Start] = \"Start\";\n    RangePart[RangePart.End] = \"End\";\n    return RangePart;\n}());\nvar NzCalendarComponent = /*@__PURE__*/ (function () {\n    function NzCalendarComponent(_elementRef, _localeService) {\n        this._elementRef = _elementRef;\n        this._localeService = _localeService;\n        this._clearTime = true;\n        this._datePicker = false;\n        this._fullScreen = true;\n        this._showHeader = true;\n        this._isRange = false;\n        this._weeksCalendar = [];\n        this._quartersCalendar = [];\n        this._listOfWeekName = [];\n        this._listOfMonthName = [];\n        this._listOfYearName = [];\n        this._yearUnit = '年';\n        this._monthUnit = '月';\n        this._showMonth = moment(new Date()).month();\n        this._showYear = moment(new Date()).year();\n        this._value = new Date();\n        this._rangeValue = [null, null];\n        this._locale = this._localeService.getLocale().locale;\n        this.nzClickDay = new EventEmitter();\n        this.nzClickMonth = new EventEmitter();\n        this.nzHoverDay = new EventEmitter();\n        this.nzClearTime = true;\n        this.nzMode = 'month';\n        this._el = this._elementRef.nativeElement;\n    }\n    Object.defineProperty(NzCalendarComponent.prototype, \"nzFullScreen\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._fullScreen;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._fullScreen = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCalendarComponent.prototype, \"nzShowHeader\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._showHeader;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._showHeader = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCalendarComponent.prototype, \"nzIsRange\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._isRange;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._isRange = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCalendarComponent.prototype, \"nzDisabledDate\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._disabledDate;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._disabledDate = value;\n            this._buildCalendar();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCalendarComponent.prototype, \"nzDatePicker\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._datePicker;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._datePicker = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCalendarComponent.prototype, \"nzValue\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._value || new Date();\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (this._value === value) {\n                return;\n            }\n            this._value = value || new Date();\n            this._showMonth = moment(this._value).month();\n            this._showYear = moment(this._value).year();\n            this._buildCalendar();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCalendarComponent.prototype, \"nzRangeValue\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._rangeValue;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._rangeValue = value;\n            this._buildCalendar();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCalendarComponent.prototype, \"nzHoveringSelectValue\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._hoveringSelectValue;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (this._hoveringSelectValue === value) {\n                return;\n            }\n            this._hoveringSelectValue = value;\n            this._buildCalendar();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCalendarComponent.prototype, \"nzShowYear\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._showYear;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._showYear = value;\n            this._buildCalendar();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCalendarComponent.prototype, \"nzShowMonth\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._showMonth;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._showMonth = value;\n            this._buildCalendar();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCalendarComponent.prototype, \"nzLocale\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._locale;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._locale = value;\n            moment.locale(this._locale);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NzCalendarComponent.prototype._removeTime = /**\n     * @param {?} date\n     * @return {?}\n     */\n        function (date) {\n            if (this.nzClearTime) {\n                return date.hour(0).minute(0).second(0).millisecond(0);\n            }\n            else {\n                return date;\n            }\n        };\n    /**\n     * @param {?} $event\n     * @param {?} day\n     * @return {?}\n     */\n    NzCalendarComponent.prototype._clickDay = /**\n     * @param {?} $event\n     * @param {?} day\n     * @return {?}\n     */\n        function ($event, day) {\n            $event.preventDefault();\n            $event.stopPropagation();\n            if (day.disabled) {\n                return;\n            }\n            this.nzClickDay.emit(day);\n        };\n    /**\n     * @param {?} $event\n     * @param {?} month\n     * @return {?}\n     */\n    NzCalendarComponent.prototype._clickMonth = /**\n     * @param {?} $event\n     * @param {?} month\n     * @return {?}\n     */\n        function ($event, month) {\n            $event.preventDefault();\n            $event.stopPropagation();\n            if (month.disabled) {\n                return;\n            }\n            this.nzClickMonth.emit(month);\n        };\n    /**\n     * @param {?} $event\n     * @param {?} day\n     * @return {?}\n     */\n    NzCalendarComponent.prototype._onDayHover = /**\n     * @param {?} $event\n     * @param {?} day\n     * @return {?}\n     */\n        function ($event, day) {\n            $event.preventDefault();\n            $event.stopPropagation();\n            if (day.disabled || day.date.isSame(this._hoveringSelectValue)) {\n                return;\n            }\n            this.nzHoverDay.emit(day);\n        };\n    /**\n     * @param {?} date\n     * @param {?} month\n     * @return {?}\n     */\n    NzCalendarComponent.prototype._isSelectedDay = /**\n     * @param {?} date\n     * @param {?} month\n     * @return {?}\n     */\n        function (date, month) {\n            if (this.nzIsRange) {\n                return (date.isSame(this._rangeValue[RangePart.Start], 'day')\n                    || date.isSame(this._rangeValue[RangePart.End], 'day')\n                    || date.isSame(this._hoveringSelectValue, 'day'))\n                    && date.month() === month.month();\n            }\n            else {\n                return date.isSame(this.nzValue, 'day');\n            }\n        };\n    /**\n     * @param {?} date\n     * @param {?} month\n     * @return {?}\n     */\n    NzCalendarComponent.prototype._isInRange = /**\n     * @param {?} date\n     * @param {?} month\n     * @return {?}\n     */\n        function (date, month) {\n            var /** @type {?} */ ghostDate;\n            if (this.nzIsRange && date.month() === month.month()) {\n                if (this._rangeValue.every(function (e) { return moment(e).isValid(); })) {\n                    return date.isBetween.apply(date, this._rangeValue);\n                }\n                ghostDate = this._rangeValue.find(function (e) { return moment(e).isValid(); });\n                if (ghostDate && this._hoveringSelectValue) {\n                    var /** @type {?} */ start = moment.min(moment(ghostDate), moment(this._hoveringSelectValue)).toDate();\n                    var /** @type {?} */ end = moment.max(moment(ghostDate), moment(this._hoveringSelectValue)).toDate();\n                    return date.isBetween(start, end);\n                }\n                return false;\n            }\n            else {\n                return false;\n            }\n        };\n    /**\n     * @param {?} d\n     * @return {?}\n     */\n    NzCalendarComponent.prototype._buildMonth = /**\n     * @param {?} d\n     * @return {?}\n     */\n        function (d) {\n            var /** @type {?} */ weeks = [];\n            var /** @type {?} */ _rawDate = this._removeTime(d);\n            var /** @type {?} */ start = _rawDate.clone().date(1).day(0);\n            var /** @type {?} */ month = _rawDate.clone();\n            var /** @type {?} */ done = false;\n            var /** @type {?} */ date = start.clone();\n            var /** @type {?} */ monthIndex = date.month();\n            var /** @type {?} */ count = 0;\n            while (!done) {\n                weeks.push({ days: this._buildWeek(date.clone(), month) });\n                date.add(1, 'w');\n                done = count++ > 4;\n                monthIndex = date.month();\n            }\n            return weeks;\n        };\n    /**\n     * @param {?} firstDate\n     * @param {?} month\n     * @return {?}\n     */\n    NzCalendarComponent.prototype._buildWeek = /**\n     * @param {?} firstDate\n     * @param {?} month\n     * @return {?}\n     */\n        function (firstDate, month) {\n            var /** @type {?} */ date = firstDate;\n            var /** @type {?} */ days = [];\n            for (var /** @type {?} */ i = 0; i < 7; i++) {\n                days.push({\n                    number: date.date(),\n                    isLastMonth: date.month() < month.month(),\n                    isNextMonth: date.month() > month.month(),\n                    isCurrentDay: date.isSame(new Date(), 'day'),\n                    isSelectedDay: this._isSelectedDay(date, month),\n                    isInRange: this._isInRange(date, month),\n                    title: date.format('YYYY-MM-DD'),\n                    date: date,\n                    disabled: this.nzDisabledDate && this.nzDisabledDate(date.toDate()),\n                    firstDisabled: this.nzDisabledDate && this.nzDisabledDate(date.toDate()) && (date.day() === 0 || (date.day() !== 0 && this.nzDisabledDate && !this.nzDisabledDate(date.clone().subtract(1, 'day').toDate()))),\n                    lastDisabled: this.nzDisabledDate && this.nzDisabledDate(date.toDate()) && (date.day() === 6 || (date.day() !== 6 && this.nzDisabledDate && !this.nzDisabledDate(date.clone().add(1, 'day').toDate())))\n                });\n                date = date.clone();\n                date.add(1, 'd');\n            }\n            return days;\n        };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NzCalendarComponent.prototype._buildYears = /**\n     * @param {?} date\n     * @return {?}\n     */\n        function (date) {\n            var /** @type {?} */ quarters = [];\n            var /** @type {?} */ months = [];\n            for (var /** @type {?} */ i = 0; i < 12; i++) {\n                months.push({\n                    index: i,\n                    name: this._listOfMonthName[i],\n                    year: date.year(),\n                    isCurrentMonth: moment(new Date()).month() === i && date.isSame(new Date(), 'year'),\n                    isSelectedMonth: this._showMonth === i,\n                    disabled: this.nzDisabledDate && this.nzDisabledDate(date.month(i).toDate())\n                });\n                if ((i + 1) % 3 === 0) {\n                    quarters.push(months);\n                    months = [];\n                }\n            }\n            return quarters;\n        };\n    /**\n     * @return {?}\n     */\n    NzCalendarComponent.prototype._buildCalendar = /**\n     * @return {?}\n     */\n        function () {\n            moment.locale(this._locale);\n            /** TODO replace with real i18n*/\n            if (this._locale !== 'zh-cn') {\n                try {\n                    this._yearUnit = moment.duration(12, 'month').humanize().split(' ')[1][0].toUpperCase() + moment.duration(12, 'month').humanize().split(' ')[1].slice(1, moment.duration(12, 'month').humanize().split(' ')[1].length);\n                    this._monthUnit = moment.duration(4, 'week').humanize().split(' ')[1][0].toUpperCase() + moment.duration(4, 'week').humanize().split(' ')[1].slice(1, moment.duration(4, 'week').humanize().split(' ')[1].length);\n                }\n                catch (e) { }\n            }\n            if (this._locale === 'ru-RU') {\n                try {\n                    var /** @type {?} */ monthText = moment.duration(12, 'month').humanize().split(' ')[0];\n                    var /** @type {?} */ weekText = moment.duration(4, 'week').humanize().split(' ')[0];\n                    this._yearUnit = monthText.charAt(0).toUpperCase() + monthText.slice(1);\n                    this._monthUnit = weekText.charAt(0).toUpperCase() + weekText.slice(1);\n                }\n                catch (e) { }\n            }\n            this._listOfYearName = this._generateYears(this._showYear);\n            this._listOfWeekName = moment.weekdaysMin();\n            this._listOfMonthName = moment.monthsShort();\n            var /** @type {?} */ date = moment(this.nzValue).year(this._showYear).month(this._showMonth);\n            this._weeksCalendar = this._buildMonth(date);\n            this._quartersCalendar = this._buildYears(date);\n        };\n    /**\n     * @param {?} year\n     * @return {?}\n     */\n    NzCalendarComponent.prototype._generateYears = /**\n     * @param {?} year\n     * @return {?}\n     */\n        function (year) {\n            var /** @type {?} */ listOfYears = [];\n            for (var _i = 0, _a = Array.from(Array(20).keys()); _i < _a.length; _i++) {\n                var i = _a[_i];\n                listOfYears.push(i - 10 + year);\n            }\n            return listOfYears;\n        };\n    /**\n     * @return {?}\n     */\n    NzCalendarComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            this._buildCalendar();\n        };\n    return NzCalendarComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzCalendarModule = /*@__PURE__*/ (function () {\n    function NzCalendarModule() {\n    }\n    return NzCalendarModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzCardGridDirective = /*@__PURE__*/ (function () {\n    function NzCardGridDirective() {\n    }\n    return NzCardGridDirective;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzCardComponent = /*@__PURE__*/ (function () {\n    function NzCardComponent() {\n        this._borderd = true;\n        this._loading = false;\n        this._noHovering = false;\n    }\n    Object.defineProperty(NzCardComponent.prototype, \"nzBordered\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._borderd;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._borderd = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCardComponent.prototype, \"nzLoading\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._loading;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._loading = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCardComponent.prototype, \"nzNoHovering\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._noHovering;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._noHovering = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return NzCardComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzCardModule = /*@__PURE__*/ (function () {\n    function NzCardModule() {\n    }\n    return NzCardModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzCarouselContentDirective = /*@__PURE__*/ (function () {\n    function NzCarouselContentDirective(_el) {\n        this._el = _el;\n        this.width = 0;\n        this.isActive = false;\n        this.left = null;\n        this.top = null;\n        this.fadeMode = false;\n        this.nativeElement = this._el.nativeElement;\n    }\n    Object.defineProperty(NzCarouselContentDirective.prototype, \"setActiveClass\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.isActive === true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCarouselContentDirective.prototype, \"setWidth\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCarouselContentDirective.prototype, \"setLeft\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.left;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCarouselContentDirective.prototype, \"setTop\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.top;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCarouselContentDirective.prototype, \"setPosition\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            if (this.fadeMode) {\n                return 'relative';\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCarouselContentDirective.prototype, \"setOpacity\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            if (this.fadeMode) {\n                return this.isActive ? 1 : 0;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return NzCarouselContentDirective;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzCarouselComponent = /*@__PURE__*/ (function () {\n    function NzCarouselComponent(hostElement, _renderer) {\n        this.hostElement = hostElement;\n        this._renderer = _renderer;\n        this._autoPlay = false;\n        this._dots = true;\n        this._vertical = false;\n        this._pauseOnHover = true;\n        this.activeIndex = 0;\n        this.transform = 'translate3d(0px, 0px, 0px)';\n        this._autoPlaySpeed = 3000;\n        this._mouseHover = false;\n        this._nzCarousel = true;\n        this.nzEffect = 'scrollx';\n        this.nzAfterChange = new EventEmitter();\n        this.nzBeforeChange = new EventEmitter();\n    }\n    Object.defineProperty(NzCarouselComponent.prototype, \"_slideContents\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this.slideContents = value;\n            this.renderContent();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCarouselComponent.prototype, \"nzAutoPlaySpeed\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._autoPlaySpeed;\n        },\n        set: /**\n         * @param {?} speed\n         * @return {?}\n         */ function (speed) {\n            // css transition speed is 500ms\n            this._autoPlaySpeed = Math.max(speed, 500);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzCarouselComponent.prototype._onMouseenter = /**\n     * @return {?}\n     */\n        function () {\n            this._mouseHover = true;\n            if (this.nzAutoPlay && this.nzPauseOnHover) {\n                this.clearInterval();\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzCarouselComponent.prototype._onMouseleave = /**\n     * @return {?}\n     */\n        function () {\n            this._mouseHover = false;\n            if (!this.interval && this.nzAutoPlay) {\n                this.createInterval();\n            }\n        };\n    Object.defineProperty(NzCarouselComponent.prototype, \"_nextIndex\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.activeIndex < this.slideContents.length - 1 ? (this.activeIndex + 1) : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCarouselComponent.prototype, \"_prevIndex\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.activeIndex > 0 ? (this.activeIndex - 1) : (this.slideContents.length - 1);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCarouselComponent.prototype, \"nzPauseOnHover\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._pauseOnHover;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._pauseOnHover = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCarouselComponent.prototype, \"nzDots\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._dots;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._dots = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCarouselComponent.prototype, \"nzAutoPlay\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._autoPlay;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._autoPlay = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCarouselComponent.prototype, \"nzVertical\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._vertical;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._vertical = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} content\n     * @param {?} i\n     * @return {?}\n     */\n    NzCarouselComponent.prototype.setActive = /**\n     * @param {?} content\n     * @param {?} i\n     * @return {?}\n     */\n        function (content, i) {\n            if ((this.nzAutoPlay && !this.nzPauseOnHover) || (this.nzAutoPlay && this.nzPauseOnHover && !this._mouseHover)) {\n                this.createInterval();\n            }\n            var /** @type {?} */ beforeIndex = this.slideContents.toArray().findIndex(function (slide) { return slide.isActive; });\n            this.nzBeforeChange.emit({ form: beforeIndex, to: i });\n            this.activeIndex = i;\n            if (this.nzEffect !== 'fade') {\n                if (!this.nzVertical) {\n                    this.transform = \"translate3d(\" + -this.activeIndex * this.hostElement.nativeElement.offsetWidth + \"px, 0px, 0px)\";\n                }\n                else {\n                    this.transform = \"translate3d(0px, \" + -this.activeIndex * this.hostElement.nativeElement.offsetHeight + \"px, 0px)\";\n                }\n            }\n            this.slideContents.forEach(function (slide) { return slide.isActive = false; });\n            content.isActive = true;\n            this.nzAfterChange.emit(i);\n        };\n    /**\n     * @return {?}\n     */\n    NzCarouselComponent.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n        function () {\n            this.renderContent();\n        };\n    /**\n     * @return {?}\n     */\n    NzCarouselComponent.prototype.renderContent = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            setTimeout(function (_) {\n                if (_this.slideContents.first) {\n                    _this.slideContents.first.isActive = true;\n                }\n                _this.slideContents.forEach(function (content, i) {\n                    content.width = _this.hostElement.nativeElement.offsetWidth;\n                    if (_this.nzEffect === 'fade') {\n                        content.fadeMode = true;\n                        if (!_this.nzVertical) {\n                            content.left = -i * content.width;\n                        }\n                        else {\n                            content.top = -i * _this.hostElement.nativeElement.offsetHeight;\n                        }\n                    }\n                });\n                if (_this.nzAutoPlay) {\n                    _this.createInterval();\n                }\n                if (_this.nzVertical) {\n                    _this._renderer.removeStyle(_this.slickList.nativeElement, 'height');\n                    if (_this.slideContents.first) {\n                        _this._renderer.setStyle(_this.slickList.nativeElement, 'height', _this.slideContents.first.nativeElement.offsetHeight + \"px\");\n                    }\n                    _this._renderer.removeStyle(_this.slickTrack.nativeElement, 'height');\n                    _this._renderer.setStyle(_this.slickTrack.nativeElement, 'height', _this.slideContents.length * _this.hostElement.nativeElement.offsetHeight + \"px\");\n                }\n                else {\n                    _this._renderer.removeStyle(_this.slickTrack.nativeElement, 'width');\n                    _this._renderer.setStyle(_this.slickTrack.nativeElement, 'width', _this.slideContents.length * _this.hostElement.nativeElement.offsetWidth + \"px\");\n                }\n            });\n        };\n    /**\n     * @return {?}\n     */\n    NzCarouselComponent.prototype.createInterval = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            this.clearInterval();\n            this.interval = setInterval(function (_) {\n                _this.setActive(_this.slideContents.toArray()[_this._nextIndex], _this._nextIndex);\n            }, this.nzAutoPlaySpeed);\n        };\n    /**\n     * @return {?}\n     */\n    NzCarouselComponent.prototype.clearInterval = /**\n     * @return {?}\n     */\n        function () {\n            if (this.interval) {\n                clearInterval(this.interval);\n                this.interval = null;\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzCarouselComponent.prototype.nzSlickNext = /**\n     * @return {?}\n     */\n        function () {\n            this.setActive(this.slideContents.toArray()[this._nextIndex], this._nextIndex);\n        };\n    /**\n     * @return {?}\n     */\n    NzCarouselComponent.prototype.nzSlickPrev = /**\n     * @return {?}\n     */\n        function () {\n            this.setActive(this.slideContents.toArray()[this._prevIndex], this._prevIndex);\n        };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    NzCarouselComponent.prototype.nzSlickGoTo = /**\n     * @param {?} index\n     * @return {?}\n     */\n        function (index) {\n            if (index >= 0 && index <= this.slideContents.length - 1) {\n                this.setActive(this.slideContents.toArray()[index], index);\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzCarouselComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            this.clearInterval();\n        };\n    return NzCarouselComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzCarouselModule = /*@__PURE__*/ (function () {\n    function NzCarouselModule() {\n    }\n    return NzCarouselModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzInputGroupComponent = /*@__PURE__*/ (function () {\n    function NzInputGroupComponent(_elementRef, _render) {\n        this._elementRef = _elementRef;\n        this._render = _render;\n        this._compat = false;\n        this._prefixCls = 'ant-input';\n        this._el = this._elementRef.nativeElement;\n        this._render.addClass(this._el, this._prefixCls + \"-group\");\n    }\n    Object.defineProperty(NzInputGroupComponent.prototype, \"_isLarge\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.nzSize === 'lg';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzInputGroupComponent.prototype, \"_isSmall\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.nzSize === 'sm';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzInputGroupComponent.prototype, \"nzCompact\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._compat;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._compat = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzInputGroupComponent.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            /** trim text node between button */\n            Array.from(this._el.childNodes).forEach(function (node) {\n                if (node.nodeType === 3) {\n                    _this._el.removeChild(node);\n                }\n            });\n        };\n    return NzInputGroupComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar HIDDEN_TEXTAREA_STYLE = \"\\n  min-height:0 !important;\\n  max-height:none !important;\\n  height:0 !important;\\n  visibility:hidden !important;\\n  overflow:hidden !important;\\n  position:absolute !important;\\n  z-index:-1000 !important;\\n  top:0 !important;\\n  right:0 !important\\n\";\nvar SIZING_STYLE = [\n    'letter-spacing',\n    'line-height',\n    'padding-top',\n    'padding-bottom',\n    'font-family',\n    'font-weight',\n    'font-size',\n    'text-rendering',\n    'text-transform',\n    'width',\n    'text-indent',\n    'padding-left',\n    'padding-right',\n    'border-width',\n    'box-sizing',\n];\nvar computedStyleCache = {};\nvar hiddenTextarea;\n/**\n * @param {?} node\n * @param {?=} useCache\n * @return {?}\n */\nfunction calculateNodeStyling(node, useCache) {\n    if (useCache === void 0) {\n        useCache = false;\n    }\n    var /** @type {?} */ nodeRef = (node.getAttribute('id') ||\n        node.getAttribute('data-reactid') ||\n        node.getAttribute('name'));\n    if (useCache && computedStyleCache[nodeRef]) {\n        return computedStyleCache[nodeRef];\n    }\n    var /** @type {?} */ style$$1 = window.getComputedStyle(node);\n    var /** @type {?} */ boxSizing = (style$$1.getPropertyValue('box-sizing') ||\n        style$$1.getPropertyValue('-moz-box-sizing') ||\n        style$$1.getPropertyValue('-webkit-box-sizing'));\n    var /** @type {?} */ paddingSize = (parseFloat(style$$1.getPropertyValue('padding-bottom')) +\n        parseFloat(style$$1.getPropertyValue('padding-top')));\n    var /** @type {?} */ borderSize = (parseFloat(style$$1.getPropertyValue('border-bottom-width')) +\n        parseFloat(style$$1.getPropertyValue('border-top-width')));\n    var /** @type {?} */ sizingStyle = SIZING_STYLE\n        .map(function (name) { return name + \":\" + style$$1.getPropertyValue(name); })\n        .join(';');\n    var /** @type {?} */ nodeInfo = {\n        sizingStyle: sizingStyle,\n        paddingSize: paddingSize,\n        borderSize: borderSize,\n        boxSizing: boxSizing,\n    };\n    if (useCache && nodeRef) {\n        computedStyleCache[nodeRef] = nodeInfo;\n    }\n    return nodeInfo;\n}\n/**\n * @param {?} uiTextNode\n * @param {?=} useCache\n * @param {?=} minRows\n * @param {?=} maxRows\n * @return {?}\n */\nfunction calculateNodeHeight(uiTextNode, useCache, minRows, maxRows) {\n    if (useCache === void 0) {\n        useCache = false;\n    }\n    if (minRows === void 0) {\n        minRows = null;\n    }\n    if (maxRows === void 0) {\n        maxRows = null;\n    }\n    if (!hiddenTextarea) {\n        hiddenTextarea = document.createElement('textarea');\n        document.body.appendChild(hiddenTextarea);\n    }\n    // Fix wrap=\"off\" issue\n    // https://github.com/ant-design/ant-design/issues/6577\n    if (uiTextNode.getAttribute('wrap')) {\n        hiddenTextarea.setAttribute('wrap', uiTextNode.getAttribute('wrap'));\n    }\n    else {\n        hiddenTextarea.removeAttribute('wrap');\n    }\n    // Copy all CSS properties that have an impact on the height of the content in\n    // the textbox\n    var _a = calculateNodeStyling(uiTextNode, useCache), paddingSize = _a.paddingSize, borderSize = _a.borderSize, boxSizing = _a.boxSizing, sizingStyle = _a.sizingStyle;\n    // Need to have the overflow attribute to hide the scrollbar otherwise\n    // text-lines will not calculated properly as the shadow will technically be\n    // narrower for content\n    hiddenTextarea.setAttribute('style', sizingStyle + \";\" + HIDDEN_TEXTAREA_STYLE);\n    hiddenTextarea.value = uiTextNode.value || uiTextNode.placeholder || '';\n    var /** @type {?} */ minHeight = -Infinity;\n    var /** @type {?} */ maxHeight = Infinity;\n    var /** @type {?} */ height = hiddenTextarea.scrollHeight;\n    var /** @type {?} */ overflowY;\n    if (boxSizing === 'border-box') {\n        // border-box: add border, since height = content + padding + border\n        height = height + borderSize;\n    }\n    else if (boxSizing === 'content-box') {\n        // remove padding, since height = content\n        height = height - paddingSize;\n    }\n    if (minRows !== null || maxRows !== null) {\n        // measure height of a textarea with a single row\n        hiddenTextarea.value = '';\n        var /** @type {?} */ singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;\n        if (minRows !== null) {\n            minHeight = singleRowHeight * minRows;\n            if (boxSizing === 'border-box') {\n                minHeight = minHeight + paddingSize + borderSize;\n            }\n            height = Math.max(minHeight, height);\n        }\n        if (maxRows !== null) {\n            maxHeight = singleRowHeight * maxRows;\n            if (boxSizing === 'border-box') {\n                maxHeight = maxHeight + paddingSize + borderSize;\n            }\n            overflowY = height > maxHeight ? '' : 'hidden';\n            height = Math.min(maxHeight, height);\n        }\n    }\n    // Remove scroll bar flash when autosize without maxRows\n    if (!maxRows) {\n        overflowY = 'hidden';\n    }\n    return { height: height, minHeight: minHeight, maxHeight: maxHeight, overflowY: overflowY };\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\nvar NzInputComponent = /*@__PURE__*/ (function () {\n    function NzInputComponent(_elementRef, _renderer) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._disabled = false;\n        this._readonly = false;\n        this._size = 'default';\n        this._prefixCls = 'ant-input';\n        this._composing = false;\n        this._autosize = false;\n        // ngModel Access\n        this.onChange = function () { return null; };\n        this.onTouched = function () { return null; };\n        this.nzType = 'text';\n        this.nzBlur = new EventEmitter();\n        this.nzFocus = new EventEmitter();\n        this.nzOnSearch = new EventEmitter();\n        this._el = this._elementRef.nativeElement;\n    }\n    Object.defineProperty(NzInputComponent.prototype, \"nzSize\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._size;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._size = { large: 'lg', small: 'sm' }[value];\n            this.setClassMap();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzInputComponent.prototype, \"nzDisabled\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._disabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._disabled = toBoolean(value);\n            this.setClassMap();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzInputComponent.prototype, \"nzReadonly\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._readonly;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._readonly = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzInputComponent.prototype, \"nzAutosize\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._autosize;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (typeof value === 'string') {\n                this._autosize = true;\n            }\n            else {\n                this._autosize = value;\n            }\n            if (this._autosize) {\n                this.nzRows = 1;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NzInputComponent.prototype.compositionStart = /**\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            this._composing = true;\n        };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NzInputComponent.prototype.compositionEnd = /**\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            this._composing = false;\n            this.onChange(this._value);\n        };\n    Object.defineProperty(NzInputComponent.prototype, \"nzValue\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._value;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if ((this._value === value) || ((this._value == null) && (value == null))) {\n                return;\n            }\n            this._value = value;\n            if (!this._composing) {\n                this.onChange(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NzInputComponent.prototype._emitBlur = /**\n     * @param {?} $event\n     * @return {?}\n     */\n        function ($event) {\n            this.nzBlur.emit($event);\n            this.onTouched();\n        };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NzInputComponent.prototype._emitFocus = /**\n     * @param {?} $event\n     * @return {?}\n     */\n        function ($event) {\n            this.nzFocus.emit($event);\n        };\n    /**\n     * @return {?}\n     */\n    NzInputComponent.prototype._onPressEnter = /**\n     * @return {?}\n     */\n        function () {\n            if (this.nzType === 'search') {\n                this._emitSearch();\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzInputComponent.prototype._emitSearch = /**\n     * @return {?}\n     */\n        function () {\n            this.nzOnSearch.emit(this._value);\n        };\n    /**\n     * @return {?}\n     */\n    NzInputComponent.prototype.setClassMap = /**\n     * @return {?}\n     */\n        function () {\n            this._classMap = (_a = {},\n                _a[this._prefixCls + \"-\" + this._size] = true,\n                _a[this._prefixCls + \"-disabled\"] = this._disabled,\n                _a);\n            var _a;\n        };\n    /**\n     * @return {?}\n     */\n    NzInputComponent.prototype.resizeTextarea = /**\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ textAreaRef = this.textAreaRef.nativeElement;\n            // eliminate jitter\n            textAreaRef.style.height = 'auto';\n            var /** @type {?} */ maxRows = this.nzAutosize ? ((this.nzAutosize)).maxRows || null : null;\n            var /** @type {?} */ minRows = this.nzAutosize ? ((this.nzAutosize)).minRows || null : null;\n            var /** @type {?} */ textareaStyles = calculateNodeHeight(textAreaRef, false, minRows, maxRows);\n            textAreaRef.style.height = textareaStyles.height + \"px\";\n            textAreaRef.style.overflowY = textareaStyles.overflowY;\n        };\n    /**\n     * @return {?}\n     */\n    NzInputComponent.prototype.textareaOnChange = /**\n     * @return {?}\n     */\n        function () {\n            if (this.nzType === 'textarea' && this.nzAutosize) {\n                this.resizeTextarea();\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzInputComponent.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n        function () {\n            if (this.nzType === 'search' || this._prefixContent || this._suffixContent) {\n                this._renderer.setAttribute(this._el, 'class', this._prefixCls + \"-affix-wrapper\");\n            }\n            else {\n                this._renderer.setAttribute(this._el, 'class', this._prefixCls + \"-wrapper\");\n            }\n            if ((this._addOnContentBefore || this._addOnContentAfter)) {\n                this._renderer.setAttribute(this._el, 'class', this._prefixCls + \"-group\");\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzInputComponent.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            if (this.nzType === 'textarea' && this.nzAutosize) {\n                setTimeout(function () { return _this.resizeTextarea(); }, 0);\n            }\n        };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzInputComponent.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            // this.nzValue = value; // [NOTE] nzValue will trigger the onChange which leads to a new \"VIEW -> MODEL updating\"\n            this._value = value;\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NzInputComponent.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onChange = fn;\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NzInputComponent.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onTouched = fn;\n        };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NzInputComponent.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n        function (isDisabled) {\n            this.nzDisabled = isDisabled;\n        };\n    return NzInputComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzInputDirectiveComponent = /*@__PURE__*/ (function () {\n    function NzInputDirectiveComponent(_elementRef, _render) {\n        this._elementRef = _elementRef;\n        this._render = _render;\n        this._disabled = false;\n        this._readonly = false;\n        this.size = 'default';\n        this._autosize = false;\n        this.nativeElement = this._elementRef.nativeElement;\n    }\n    Object.defineProperty(NzInputDirectiveComponent.prototype, \"nzSize\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.size;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this.size = { large: 'lg', small: 'sm' }[value];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzInputDirectiveComponent.prototype, \"nzDisabled\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._disabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            var /** @type {?} */ disabled = toBoolean(value);\n            if (disabled) {\n                this._render.setAttribute(this.nativeElement, 'disabled', '');\n            }\n            else {\n                this._render.removeAttribute(this.nativeElement, 'disabled');\n            }\n            this._disabled = disabled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzInputDirectiveComponent.prototype, \"nzReadonly\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._readonly;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            var /** @type {?} */ readonly = toBoolean(value);\n            if (readonly) {\n                this._render.setAttribute(this.nativeElement, 'readonly', '');\n            }\n            else {\n                this._render.removeAttribute(this.nativeElement, 'readonly');\n            }\n            this._readonly = readonly;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzInputDirectiveComponent.prototype, \"nzAutosize\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._autosize;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (typeof value === 'string') {\n                this._autosize = true;\n            }\n            else {\n                this._autosize = value;\n            }\n            if (this._autosize) {\n                this._render.setAttribute(this.nativeElement, 'autosize', '');\n            }\n            else {\n                this._render.removeAttribute(this.nativeElement, 'autosize');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzInputDirectiveComponent.prototype, \"setLgClass\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.size === 'lg';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzInputDirectiveComponent.prototype, \"setSmClass\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.size === 'sm';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return NzInputDirectiveComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzInputModule = /*@__PURE__*/ (function () {\n    function NzInputModule() {\n    }\n    return NzInputModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ESC = 27;\n/**\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction toArray(value) {\n    var /** @type {?} */ ret;\n    if (value == null) {\n        ret = [];\n    }\n    else if (!Array.isArray(value)) {\n        ret = [value];\n    }\n    else {\n        ret = value;\n    }\n    return ret;\n}\n/**\n * @template T\n * @param {?} array1\n * @param {?} array2\n * @return {?}\n */\nfunction arrayEquals(array1, array2) {\n    if (!array1 || !array2 || array1.length !== array2.length) {\n        return false;\n    }\n    var /** @type {?} */ len = array1.length;\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        if (array1[i] !== array2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nvar defaultDisplayRender = function (label) { return label.join(' / '); };\n/**\n * @record\n */\n/**\n * @record\n */\nvar NzCascaderComponent = /*@__PURE__*/ (function () {\n    function NzCascaderComponent(_elementRef, _render, _cdr) {\n        this._elementRef = _elementRef;\n        this._render = _render;\n        this._cdr = _cdr;\n        this._allowClear = true;\n        this._disabled = false;\n        this._enableCache = true;\n        this._showArrow = true;\n        this._showInput = true;\n        this._showSearch = false;\n        this._changeOnSelect = false;\n        this._prefixCls = 'ant-cascader';\n        this._inputPrefixCls = 'ant-input';\n        this._dropDownPosition = 'bottom';\n        this._focused = false;\n        this._popupVisible = false;\n        this._displayLabelIsTemplate = false;\n        this._displayLabelContext = {};\n        /* tslint:disable-next-line:variable-name */\n        this.__inputValue = '';\n        // selection will trigger value change\n        this._selectedOptions = [];\n        // activaction will not triiger value change\n        this._activatedOptions = [];\n        // all data columns\n        this._nzColumns = [];\n        // ngModel Access\n        this.onChange = Function.prototype;\n        this.onTouched = Function.prototype;\n        /**\n         * Input size, one of `large` `default` `small`\n         */\n        this.nzSize = 'default';\n        /**\n         * Input placeholder\n         */\n        this.nzPlaceHolder = 'Please select';\n        /**\n         * Hover text for the clear icon\n         */\n        this.nzClearText = 'Clear';\n        /**\n         * Specify content to show when no result matches.\n         */\n        this.nzNotFoundContent = 'Not Found';\n        /**\n         * Expand column item when click or hover, one of 'click' 'hover'\n         */\n        this.nzExpandTrigger = 'click';\n        /**\n         * Delay time to show when mouse enter, when `nzExpandTrigger` is `hover`.\n         */\n        this.nzMouseEnterDelay = 150;\n        /**\n         * Delay time to hide when mouse enter, when `nzExpandTrigger` is `hover`.\n         */\n        this.nzMouseLeaveDelay = 150;\n        /**\n         * Triggering mode: can be Array<'click'|'hover'>\n         */\n        this.nzTriggerAction = ['click'];\n        /**\n         * Property name for getting `value` in the option\n         */\n        this.nzValueProperty = 'value';\n        /**\n         * Property name for getting `label` in the option\n         */\n        this.nzLabelProperty = 'label';\n        this.tabIndex = '0';\n        /**\n         * Event: emit on popup show or hide\n         */\n        this.nzVisibleChange = new EventEmitter();\n        /**\n         * Event: emit on values changed\n         */\n        this.nzChange = new EventEmitter();\n        /**\n         * Event: emit on values and selection changed\n         */\n        this.nzSelectionChange = new EventEmitter();\n        /**\n         * Event: emit on option selected, event data：{option: any, index: number}\n         */\n        this.nzSelect = new EventEmitter();\n        /**\n         * Event: emit before loading children. event data：{option: any|null, index: number, resolve, reject}\n         */\n        this.nzLoad = new EventEmitter();\n        /**\n         * Event: emit on the clear button clicked\n         */\n        this.nzClear = new EventEmitter();\n        this._el = this._elementRef.nativeElement;\n    }\n    Object.defineProperty(NzCascaderComponent.prototype, \"_inputValue\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.__inputValue;\n        },\n        set: /**\n         * @param {?} inputValue\n         * @return {?}\n         */ function (inputValue) {\n            this.__inputValue = inputValue;\n            if (inputValue.length) {\n                this._addHostClass(this._prefixCls + \"-picker-with-value\");\n            }\n            else {\n                this._removeHostClass(this._prefixCls + \"-picker-with-value\");\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCascaderComponent.prototype, \"nzDisabled\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._disabled;\n        },\n        set: /**\n         * Whether is disabled\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._disabled = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCascaderComponent.prototype, \"nzShowInput\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._showInput;\n        },\n        set: /**\n         * Whether show input box. Defaults to `true`.\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._showInput = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCascaderComponent.prototype, \"nzShowSearch\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._showSearch;\n        },\n        set: /**\n         * Whether can search. Defaults to `false`.\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._showSearch = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCascaderComponent.prototype, \"nzAllowClear\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._allowClear;\n        },\n        set: /**\n         * Whether allow clear. Defaults to `true`.\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._allowClear = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCascaderComponent.prototype, \"nzShowArrow\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._showArrow;\n        },\n        set: /**\n         * Whether to show arrow\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._showArrow = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCascaderComponent.prototype, \"nzEnableCache\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._enableCache;\n        },\n        set: /**\n         * Whether cache children when they were loaded asych\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._enableCache = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCascaderComponent.prototype, \"nzChangeOnSelect\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._changeOnSelect;\n        },\n        set: /**\n         * Change value on each selection if set to true\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._changeOnSelect = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    NzCascaderComponent.prototype.onPositionChange = /**\n     * @param {?} position\n     * @return {?}\n     */\n        function (position) {\n            var /** @type {?} */ _position = position.connectionPair.originY === 'bottom' ? 'bottom' : 'top';\n            if (this._dropDownPosition !== _position) {\n                this._dropDownPosition = _position;\n                this._cdr.detectChanges();\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzCascaderComponent.prototype.nzFocus = /**\n     * @return {?}\n     */\n        function () {\n            this._focused = true;\n            this._addHostClass(this._prefixCls + \"-focused\");\n        };\n    /**\n     * @return {?}\n     */\n    NzCascaderComponent.prototype.nzBlur = /**\n     * @return {?}\n     */\n        function () {\n            this._focused = false;\n            this._removeHostClass(this._prefixCls + \"-focused\");\n        };\n    Object.defineProperty(NzCascaderComponent.prototype, \"_pickerLabelCls\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return _a = {},\n                _a[this._prefixCls + \"-picker-label\"] = true,\n                _a;\n            var _a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCascaderComponent.prototype, \"_arrowCls\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return _a = {},\n                _a[this._prefixCls + \"-picker-arrow\"] = true,\n                _a[this._prefixCls + \"-picker-arrow-expand\"] = this._popupVisible,\n                _a;\n            var _a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCascaderComponent.prototype, \"_clearCls\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return _a = {},\n                _a[this._prefixCls + \"-picker-clear\"] = true,\n                _a;\n            var _a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCascaderComponent.prototype, \"_inputCls\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return _a = {},\n                _a[this._prefixCls + \"-input\"] = 1,\n                _a[this._inputPrefixCls + \"-disabled\"] = this.nzDisabled,\n                _a[this._inputPrefixCls + \"-lg\"] = this.nzSize === 'large',\n                _a[this._inputPrefixCls + \"-sm\"] = this.nzSize === 'small',\n                _a;\n            var _a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCascaderComponent.prototype, \"_menuCls\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return _a = {},\n                _a[this._prefixCls + \"-menus\"] = true,\n                _a[this._prefixCls + \"-menus-hidden\"] = !this._popupVisible,\n                _a[\"\" + this.nzPopupClassName] = this.nzPopupClassName,\n                _a;\n            var _a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCascaderComponent.prototype, \"_columnCls\", {\n        /** 获取菜单中列的样式 */\n        get: /**\n         * 获取菜单中列的样式\n         * @return {?}\n         */ function () {\n            return _a = {},\n                _a[this._prefixCls + \"-menu\"] = true,\n                _a[\"\" + this.nzColumnClassName] = this.nzColumnClassName,\n                _a;\n            var _a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** 获取列中Option的样式 */\n    /**\n     * 获取列中Option的样式\n     * @param {?} option\n     * @param {?} index\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._getOptionCls = /**\n     * 获取列中Option的样式\n     * @param {?} option\n     * @param {?} index\n     * @return {?}\n     */\n        function (option, index) {\n            return _a = {},\n                _a[this._prefixCls + \"-menu-item\"] = true,\n                _a[this._prefixCls + \"-menu-item-expand\"] = !option.isLeaf,\n                _a[this._prefixCls + \"-menu-item-active\"] = this._isActiveOption(option, index),\n                _a[this._prefixCls + \"-menu-item-disabled\"] = option.disabled,\n                _a[this._prefixCls + \"-menu-item-loading\"] = option.loading,\n                _a;\n            var _a;\n        };\n    /**\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._getLabel = /**\n     * @return {?}\n     */\n        function () {\n            return this._displayLabelIsTemplate ? '' : this._displayLabel;\n        };\n    /** prevent input change event */\n    /**\n     * prevent input change event\n     * @param {?} event\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._handlerInputChange = /**\n     * prevent input change event\n     * @param {?} event\n     * @return {?}\n     */\n        function (event) {\n            event.stopPropagation();\n        };\n    /** input blur */\n    /**\n     * input blur\n     * @param {?} event\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._handleInputBlur = /**\n     * input blur\n     * @param {?} event\n     * @return {?}\n     */\n        function (event) {\n            if (!this.nzShowSearch) {\n                return;\n            }\n            if (this._popupVisible) {\n                this.nzFocus();\n            }\n            else {\n                this.nzBlur();\n            }\n        };\n    /** input focus */\n    /**\n     * input focus\n     * @param {?} event\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._handleInputFocus = /**\n     * input focus\n     * @param {?} event\n     * @return {?}\n     */\n        function (event) {\n            if (!this.nzShowSearch) {\n                return;\n            }\n            this.nzFocus();\n        };\n    /** input key down */\n    /**\n     * input key down\n     * @param {?} event\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._handleInputKeyDown = /**\n     * input key down\n     * @param {?} event\n     * @return {?}\n     */\n        function (event) { };\n    /**\n     * @param {?} inputValue\n     * @param {?=} fireSearch\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._setInputValue = /**\n     * @param {?} inputValue\n     * @param {?=} fireSearch\n     * @return {?}\n     */\n        function (inputValue, fireSearch) {\n            if (fireSearch === void 0) {\n                fireSearch = true;\n            }\n            if (inputValue !== this._inputValue) {\n                this._inputValue = inputValue;\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._hasInput = /**\n     * @return {?}\n     */\n        function () {\n            return this._inputValue.length > 0;\n        };\n    /**\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._hasSelection = /**\n     * @return {?}\n     */\n        function () {\n            return this._selectedOptions.length > 0;\n        };\n    Object.defineProperty(NzCascaderComponent.prototype, \"_showClearIcon\", {\n        /** Whether the clear button is visible */\n        get: /**\n         * Whether the clear button is visible\n         * @return {?}\n         */ function () {\n            var /** @type {?} */ isSelected = this._hasSelection();\n            var /** @type {?} */ isHasInput = this._hasInput();\n            return this.nzAllowClear && !this.nzDisabled && (isSelected || isHasInput);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** clear the input box and selected options */\n    /**\n     * clear the input box and selected options\n     * @param {?} event\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._clearSelection = /**\n     * clear the input box and selected options\n     * @param {?} event\n     * @return {?}\n     */\n        function (event) {\n            if (event) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n            this._displayLabel = '';\n            this._displayLabelIsTemplate = false;\n            this._selectedOptions = [];\n            this._activatedOptions = [];\n            this._setInputValue('', false);\n            this.setPopupVisible(false);\n            // trigger change event\n            this._onValueChange();\n        };\n    Object.defineProperty(NzCascaderComponent.prototype, \"_displayRender\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.nzDisplayRender || defaultDisplayRender;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._buildDisplayLabel = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            var /** @type {?} */ selectedOptions = this._selectedOptions;\n            var /** @type {?} */ labels = selectedOptions.map(function (o) { return o[_this.nzLabelProperty || 'label']; });\n            // 设置当前控件的显示值\n            this._displayLabel = this._displayRender.call(this, labels, selectedOptions);\n            this._displayLabelIsTemplate = !(typeof this._displayLabel === 'string');\n            this._displayLabelContext = { labels: labels, selectedOptions: selectedOptions };\n        };\n    /** 由用户来定义点击后是否变更 */\n    /**\n     * 由用户来定义点击后是否变更\n     * @param {?} option\n     * @param {?} index\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._isChangeOn = /**\n     * 由用户来定义点击后是否变更\n     * @param {?} option\n     * @param {?} index\n     * @return {?}\n     */\n        function (option, index) {\n            if (typeof this.nzChangeOn === 'function') {\n                return this.nzChangeOn(option, index) === true;\n            }\n            return false;\n        };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    NzCascaderComponent.prototype.onKeyDown = /**\n     * @param {?} event\n     * @return {?}\n     */\n        function (event) {\n            var /** @type {?} */ keyCode = event.keyCode;\n            if (keyCode !== DOWN_ARROW &&\n                keyCode !== UP_ARROW &&\n                keyCode !== LEFT_ARROW &&\n                keyCode !== RIGHT_ARROW &&\n                keyCode !== ENTER &&\n                keyCode !== BACKSPACE &&\n                keyCode !== ESC) {\n                return;\n            }\n            // Press any keys above to reopen menu\n            if (!this._isPopupVisible() &&\n                keyCode !== BACKSPACE &&\n                keyCode !== ESC) {\n                this.setPopupVisible(true);\n                return;\n            }\n            // Press ESC to close menu\n            if (keyCode === ESC) {\n                this.setPopupVisible(false);\n                return;\n            }\n            if (this._isPopupVisible()) {\n                event.preventDefault();\n                if (keyCode === DOWN_ARROW) {\n                    this._moveDown();\n                }\n                if (keyCode === UP_ARROW) {\n                    this._moveUp();\n                }\n                if (keyCode === LEFT_ARROW) {\n                    this._moveLeft();\n                }\n                if (keyCode === RIGHT_ARROW) {\n                    this._moveRight();\n                }\n            }\n        };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._onTriggerClick = /**\n     * @param {?} event\n     * @return {?}\n     */\n        function (event) {\n            if (this.nzDisabled) {\n                return;\n            }\n            this.onTouched(); // set your control to 'touched'\n            if (this._isClickTiggerAction()) {\n                this._delaySetPopupVisible(!this._popupVisible, 100);\n            }\n        };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._onTriggerMouseEnter = /**\n     * @param {?} event\n     * @return {?}\n     */\n        function (event) {\n            if (this.nzDisabled) {\n                return;\n            }\n            if (this._isPointerTiggerAction()) {\n                this._delaySetPopupVisible(true, this.nzMouseEnterDelay);\n            }\n        };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._onTriggerMouseLeave = /**\n     * @param {?} event\n     * @return {?}\n     */\n        function (event) {\n            if (this.nzDisabled) {\n                return;\n            }\n            if (!this._isPopupVisible()) {\n                return;\n            }\n            if (this._isPointerTiggerAction()) {\n                var /** @type {?} */ currEl = this._el;\n                var /** @type {?} */ popupEl = this.menu && /** @type {?} */ (this.menu.nativeElement);\n                if (currEl.contains(/** @type {?} */ (event.target)) ||\n                    (popupEl && popupEl.contains(/** @type {?} */ (event.target)))) {\n                    return; // 还在菜单内部\n                }\n                this._delaySetPopupVisible(false, this.nzMouseLeaveDelay);\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._isClickTiggerAction = /**\n     * @return {?}\n     */\n        function () {\n            if (typeof this.nzTriggerAction === 'string') {\n                return this.nzTriggerAction === 'click';\n            }\n            return this.nzTriggerAction.indexOf('click') !== -1;\n        };\n    /**\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._isPointerTiggerAction = /**\n     * @return {?}\n     */\n        function () {\n            if (typeof this.nzTriggerAction === 'string') {\n                return this.nzTriggerAction === 'hover';\n            }\n            return this.nzTriggerAction.indexOf('hover') !== -1;\n        };\n    /**\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._closeMenu = /**\n     * @return {?}\n     */\n        function () {\n            this._clearDelayTimer();\n            this.setPopupVisible(false);\n        };\n    /**\n     * 显示或者隐藏菜单\n     *\n     * @param visible true-显示，false-隐藏\n     * @param delay 延迟时间\n     */\n    /**\n     * 显示或者隐藏菜单\n     *\n     * @param {?} visible true-显示，false-隐藏\n     * @param {?} delay 延迟时间\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._delaySetPopupVisible = /**\n     * 显示或者隐藏菜单\n     *\n     * @param {?} visible true-显示，false-隐藏\n     * @param {?} delay 延迟时间\n     * @return {?}\n     */\n        function (visible, delay) {\n            var _this = this;\n            this._clearDelayTimer();\n            if (delay) {\n                this._delayTimer = setTimeout(function () {\n                    _this.setPopupVisible(visible);\n                    _this._clearDelayTimer();\n                }, delay);\n            }\n            else {\n                this.setPopupVisible(visible);\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._isPopupVisible = /**\n     * @return {?}\n     */\n        function () {\n            return this._popupVisible;\n        };\n    /**\n     * @param {?} popupVisible\n     * @return {?}\n     */\n    NzCascaderComponent.prototype.setPopupVisible = /**\n     * @param {?} popupVisible\n     * @return {?}\n     */\n        function (popupVisible) {\n            if (this.nzDisabled) {\n                return;\n            }\n            if (this._popupVisible !== popupVisible) {\n                this._popupVisible = popupVisible;\n                // We must listen to `mousedown` or `touchstart`, edge case:\n                // https://github.com/ant-design/ant-design/issues/5804\n                // https://github.com/react-component/calendar/issues/250\n                // https://github.com/react-component/trigger/issues/50\n                if (popupVisible) {\n                    if (!this._clickOutsideHandler) {\n                        this._clickOutsideHandler = this._render.listen('document', 'mousedown', this._onDocumentClick.bind(this));\n                    }\n                    // always hide on mobile\n                    if (!this._touchOutsideHandler) {\n                        this._touchOutsideHandler = this._render.listen('document', 'touchstart', this._onDocumentClick.bind(this));\n                    }\n                }\n                if (!popupVisible) {\n                    this._clearOutsideHandler();\n                }\n                if (popupVisible) {\n                    this._beforeVisible();\n                }\n                this.nzVisibleChange.emit(popupVisible);\n            }\n        };\n    /** load init data if necessary */\n    /**\n     * load init data if necessary\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._beforeVisible = /**\n     * load init data if necessary\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            if (!this._nzColumns.length) {\n                new Promise(function (resolve, reject) {\n                    _this.nzLoad.emit({\n                        option: null,\n                        index: -1,\n                        resolve: resolve,\n                        reject: reject\n                    });\n                }).then(function (children) {\n                    _this._setColumnData(children, 0);\n                }, function (reason) {\n                    // should not be here\n                });\n            }\n        };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._onDocumentClick = /**\n     * @param {?} event\n     * @return {?}\n     */\n        function (event) {\n            var /** @type {?} */ target = (event.target);\n            var /** @type {?} */ popupEl = this.menu && /** @type {?} */ (this.menu.nativeElement);\n            if (!this._el.contains(target) && !popupEl.contains(target)) {\n                this.setPopupVisible(false);\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._clearOutsideHandler = /**\n     * @return {?}\n     */\n        function () {\n            if (this._clickOutsideHandler) {\n                this._clickOutsideHandler(); // Removes \"listen\" listener\n                this._clickOutsideHandler = null;\n            }\n            if (this._touchOutsideHandler) {\n                this._touchOutsideHandler(); // Removes \"listen\" listener\n                this._touchOutsideHandler = null;\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._clearDelayTimer = /**\n     * @return {?}\n     */\n        function () {\n            if (this._delayTimer) {\n                clearTimeout(this._delayTimer);\n                this._delayTimer = null;\n            }\n        };\n    /** 获取Option的值，例如，可以指定labelProperty=\"name\"来取Name */\n    /**\n     * 获取Option的值，例如，可以指定labelProperty=\"name\"来取Name\n     * @param {?} option\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._getOptionLabel = /**\n     * 获取Option的值，例如，可以指定labelProperty=\"name\"来取Name\n     * @param {?} option\n     * @return {?}\n     */\n        function (option) {\n            return option[this.nzLabelProperty || 'label'];\n        };\n    /** 获取Option的值，例如，可以指定valueProperty=\"id\"来取ID */\n    /**\n     * 获取Option的值，例如，可以指定valueProperty=\"id\"来取ID\n     * @param {?} option\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._getOptionValue = /**\n     * 获取Option的值，例如，可以指定valueProperty=\"id\"来取ID\n     * @param {?} option\n     * @return {?}\n     */\n        function (option) {\n            return option[this.nzValueProperty || 'value'];\n        };\n    /**\n     * @param {?} option\n     * @param {?} index\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._isActiveOption = /**\n     * @param {?} option\n     * @param {?} index\n     * @return {?}\n     */\n        function (option, index) {\n            var /** @type {?} */ activeOpt = this._activatedOptions[index];\n            if (activeOpt === option) {\n                return true;\n            }\n            if (activeOpt && this._getOptionValue(activeOpt) === this._getOptionValue(option)) {\n                return true;\n            }\n            return false;\n        };\n    /**\n     * 设置某列的激活的菜单选项\n     *\n     * @param option 菜单选项\n     * @param index  选项所在的列组的索引\n     */\n    /**\n     * 设置某列的激活的菜单选项\n     *\n     * @param {?} option 菜单选项\n     * @param {?} index  选项所在的列组的索引\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._setActiveOption = /**\n     * 设置某列的激活的菜单选项\n     *\n     * @param {?} option 菜单选项\n     * @param {?} index  选项所在的列组的索引\n     * @return {?}\n     */\n        function (option, index) {\n            if (!option || option.disabled) {\n                return;\n            }\n            this._activatedOptions[index] = option;\n            // 当直接选择最后一级时，前面的选项要补全。例如，选择“城市”，则自动补全“国家”、“省份”\n            for (var /** @type {?} */ i = index - 1; i >= 0; i--) {\n                if (!this._activatedOptions[i]) {\n                    this._activatedOptions[i] = this._activatedOptions[i + 1].parent;\n                }\n            }\n            // 截断多余的选项，如选择“省份”，则只会有“国家”、“省份”，去掉“城市”、“区县”\n            if (index < this._activatedOptions.length - 1) {\n                this._activatedOptions = this._activatedOptions.slice(0, index + 1);\n            }\n            // trigger select event, and display label\n            this._onSelectOption(option, index);\n        };\n    /**\n     * @param {?} option\n     * @param {?} index\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._onSelectOption = /**\n     * @param {?} option\n     * @param {?} index\n     * @return {?}\n     */\n        function (option, index) {\n            var _this = this;\n            // trigger `nzSelect` event\n            this.nzSelect.emit({\n                option: option,\n                index: index\n            });\n            // load children directly\n            if (option.children && option.children.length) {\n                option.isLeaf = false;\n                option.children.forEach(function (child) { return child.parent = option; });\n                this._setColumnData(option.children, index + 1);\n            }\n            else if (!option.isLeaf) {\n                // load children async\n                new Promise(function (resolve, reject) {\n                    _this.nzLoad.emit({\n                        option: option,\n                        index: index,\n                        resolve: resolve,\n                        reject: reject\n                    });\n                }).then(function (children) {\n                    children.forEach(function (child) { return child.parent = option; });\n                    _this._setColumnData(children, index + 1);\n                    if (_this.nzEnableCache) {\n                        option.children = children; // next time we load children directly\n                    }\n                }, function (reason) {\n                    option.isLeaf = true;\n                });\n            }\n            else {\n                // clicking leaf node will remove any children columns\n                if (index < this._nzColumns.length - 1) {\n                    this._nzColumns = this._nzColumns.slice(0, index + 1);\n                }\n            }\n            // 生成显示\n            if (option.isLeaf || this.nzChangeOnSelect || this._isChangeOn(option, index)) {\n                this._selectedOptions = this._activatedOptions;\n                // 设置当前控件的显示值\n                this._buildDisplayLabel();\n                // 触发变更事件\n                this._onValueChange();\n            }\n            // close menu if click on leaf\n            if (option.isLeaf) {\n                this._delaySetPopupVisible(false, this.nzMouseLeaveDelay);\n            }\n        };\n    /**\n     * @param {?} options\n     * @param {?} index\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._setColumnData = /**\n     * @param {?} options\n     * @param {?} index\n     * @return {?}\n     */\n        function (options, index) {\n            if (!arrayEquals(this._nzColumns[index], options)) {\n                this._nzColumns[index] = options;\n                if (index < this._nzColumns.length - 1) {\n                    this._nzColumns = this._nzColumns.slice(0, index + 1);\n                }\n            }\n        };\n    /**\n     * 鼠标点击选项\n     *\n     * @param option 菜单选项\n     * @param index 选项所在的列组的索引\n     * @param event 鼠标事件\n     */\n    /**\n     * 鼠标点击选项\n     *\n     * @param {?} option 菜单选项\n     * @param {?} index 选项所在的列组的索引\n     * @param {?} event 鼠标事件\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._onOptionClick = /**\n     * 鼠标点击选项\n     *\n     * @param {?} option 菜单选项\n     * @param {?} index 选项所在的列组的索引\n     * @param {?} event 鼠标事件\n     * @return {?}\n     */\n        function (option, index, event) {\n            event.preventDefault();\n            // Keep focused state for keyboard support\n            this._el.focus();\n            if (option && option.disabled) {\n                return;\n            }\n            this._setActiveOption(option, index);\n        };\n    /**\n     * press `up` or `down` arrow to select the sibling option.\n     */\n    /**\n     * press `up` or `down` arrow to select the sibling option.\n     * @param {?} isUp\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._moveUpOrDown = /**\n     * press `up` or `down` arrow to select the sibling option.\n     * @param {?} isUp\n     * @return {?}\n     */\n        function (isUp) {\n            var /** @type {?} */ columnIndex = Math.max(this._activatedOptions.length - 1, 0);\n            // 该组中已经被激活的选项\n            var /** @type {?} */ activeOption = this._activatedOptions[columnIndex];\n            // 该组所有的选项，用于遍历获取下一个被激活的选项\n            var /** @type {?} */ options = this._nzColumns[columnIndex];\n            if (!options || !options.length) {\n                return;\n            }\n            var /** @type {?} */ length = options.length;\n            var /** @type {?} */ nextOptIndex = -1;\n            if (!activeOption) {\n                // 该列还没有选中的选项\n                nextOptIndex = isUp ? length : -1;\n            }\n            else {\n                nextOptIndex = options.indexOf(activeOption);\n            }\n            while (true) {\n                nextOptIndex = isUp ? nextOptIndex - 1 : nextOptIndex + 1;\n                if (nextOptIndex < 0 || nextOptIndex >= length) {\n                    break;\n                }\n                var /** @type {?} */ nextOption = options[nextOptIndex];\n                if (!nextOption || nextOption.disabled) {\n                    continue;\n                }\n                this._setActiveOption(nextOption, columnIndex);\n                break;\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._moveUp = /**\n     * @return {?}\n     */\n        function () {\n            this._moveUpOrDown(true);\n        };\n    /**\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._moveDown = /**\n     * @return {?}\n     */\n        function () {\n            this._moveUpOrDown(false);\n        };\n    /**\n     * press `left` arrow to remove the last selected option.\n     * If there is no option selected, emit `nzClear` event.\n     */\n    /**\n     * press `left` arrow to remove the last selected option.\n     * If there is no option selected, emit `nzClear` event.\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._moveLeft = /**\n     * press `left` arrow to remove the last selected option.\n     * If there is no option selected, emit `nzClear` event.\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ options = this._selectedOptions;\n            if (options.length) {\n                options.pop(); // Remove the last one\n                var /** @type {?} */ len = options.length;\n                if (len) {\n                    this._setActiveOption(options[len - 1], len - 1);\n                }\n                else {\n                    this.nzClear.emit();\n                }\n            }\n        };\n    /**\n     * press `right` arrow to select the next column option.\n     */\n    /**\n     * press `right` arrow to select the next column option.\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._moveRight = /**\n     * press `right` arrow to select the next column option.\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ columns = this._nzColumns;\n            var /** @type {?} */ length = this._selectedOptions.length;\n            if (length === 0) {\n                return;\n            }\n            var /** @type {?} */ nextColIndex = length;\n            var /** @type {?} */ options = columns.length > nextColIndex ? columns[nextColIndex] : null;\n            if (options) {\n                // 存在`下级选项`\n                var /** @type {?} */ len = options.length;\n                for (var /** @type {?} */ i = 0; i < len; i++) {\n                    var /** @type {?} */ activeOpt = options[i];\n                    if (activeOpt && !activeOpt.disabled) {\n                        this._setActiveOption(activeOpt, nextColIndex);\n                        return;\n                    }\n                }\n            }\n        };\n    /**\n     * 鼠标划入选项\n     *\n     * @param option 菜单选项\n     * @param index 选项所在的列组的索引\n     * @param event 鼠标事件\n     */\n    /**\n     * 鼠标划入选项\n     *\n     * @param {?} option 菜单选项\n     * @param {?} index 选项所在的列组的索引\n     * @param {?} event 鼠标事件\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._onOptionMouseEnter = /**\n     * 鼠标划入选项\n     *\n     * @param {?} option 菜单选项\n     * @param {?} index 选项所在的列组的索引\n     * @param {?} event 鼠标事件\n     * @return {?}\n     */\n        function (option, index, event) {\n            event.preventDefault();\n            if (this.nzExpandTrigger === 'hover' && !option.isLeaf) {\n                this._delaySelect(option, index, true);\n            }\n        };\n    /**\n     * 鼠标划出选项\n     *\n     * @param option 菜单选项\n     * @param index 选项所在的列组的索引\n     * @param event 鼠标事件\n     */\n    /**\n     * 鼠标划出选项\n     *\n     * @param {?} option 菜单选项\n     * @param {?} index 选项所在的列组的索引\n     * @param {?} event 鼠标事件\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._onOptionMouseLeave = /**\n     * 鼠标划出选项\n     *\n     * @param {?} option 菜单选项\n     * @param {?} index 选项所在的列组的索引\n     * @param {?} event 鼠标事件\n     * @return {?}\n     */\n        function (option, index, event) {\n            event.preventDefault();\n            if (this.nzExpandTrigger === 'hover' && !option.isLeaf) {\n                this._delaySelect(option, index, false);\n            }\n        };\n    /**\n     * @param {?} option\n     * @param {?} index\n     * @param {?} doSelect\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._delaySelect = /**\n     * @param {?} option\n     * @param {?} index\n     * @param {?} doSelect\n     * @return {?}\n     */\n        function (option, index, doSelect) {\n            var _this = this;\n            if (this._delayTimer) {\n                clearTimeout(this._delayTimer);\n                this._delayTimer = null;\n            }\n            if (doSelect) {\n                this._delayTimer = setTimeout(function () {\n                    _this._setActiveOption(option, index);\n                    _this._delayTimer = null;\n                }, 150);\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._getSubmitValue = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            var /** @type {?} */ values = [];\n            this._selectedOptions.forEach(function (option) {\n                values.push(_this._getOptionValue(option));\n            });\n            return values;\n        };\n    /**\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._onValueChange = /**\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ value = this._getSubmitValue();\n            if (!arrayEquals(this._lastValue, value)) {\n                this._lastValue = value;\n                this.onChange(value); // Angular need this\n                if (value.length === 0) {\n                    this.nzClear.emit(); // first trigger `clear` and then `change`\n                }\n                this.nzSelectionChange.emit(this._selectedOptions);\n                this.nzChange.emit(value);\n            }\n        };\n    /**\n     * @param {?} classname\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._addHostClass = /**\n     * @param {?} classname\n     * @return {?}\n     */\n        function (classname) {\n            this._render.addClass(this._el, classname);\n        };\n    /**\n     * @param {?} classname\n     * @return {?}\n     */\n    NzCascaderComponent.prototype._removeHostClass = /**\n     * @param {?} classname\n     * @return {?}\n     */\n        function (classname) {\n            this._render.removeClass(this._el, classname);\n        };\n    /**\n     * Write a new value to the element.\n     *\n     * @Override (From ControlValueAccessor interface)\n     */\n    /**\n     * Write a new value to the element.\n     *\n     * \\@Override (From ControlValueAccessor interface)\n     * @param {?} value\n     * @return {?}\n     */\n    NzCascaderComponent.prototype.writeValue = /**\n     * Write a new value to the element.\n     *\n     * \\@Override (From ControlValueAccessor interface)\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            var _this = this;\n            var /** @type {?} */ array = [];\n            toArray(value).forEach(function (v, index) {\n                if (typeof v !== 'object') {\n                    var /** @type {?} */ obj = /*@__PURE__*/ (function () {\n                        var obj = {};\n                        obj[_this.nzValueProperty] = v;\n                        obj[_this.nzLabelProperty] = v;\n                        return obj;\n                    }());\n                    array[index] = obj;\n                }\n                else {\n                    array[index] = v;\n                }\n            });\n            this._activatedOptions = array;\n            this._selectedOptions = array;\n            this._buildDisplayLabel();\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NzCascaderComponent.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onChange = fn;\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NzCascaderComponent.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onTouched = fn;\n        };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NzCascaderComponent.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n        function (isDisabled) {\n            if (isDisabled) {\n                this._closeMenu();\n                this._addHostClass(this._prefixCls + \"-picker-disabled\");\n            }\n            else {\n                this._removeHostClass(this._prefixCls + \"-picker-disabled\");\n            }\n            this.nzDisabled = isDisabled;\n        };\n    /**\n     * @return {?}\n     */\n    NzCascaderComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            // 设置第一列\n            if (this.nzOptions && this.nzOptions.length) {\n                this._nzColumns.push(this.nzOptions);\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzCascaderComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            if (this._delayTimer) {\n                clearTimeout(this._delayTimer);\n                this._delayTimer = null;\n            }\n        };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NzCascaderComponent.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n        function (changes) {\n            var /** @type {?} */ nzDisabled = changes[\"nzDisabled\"];\n            if (nzDisabled) {\n                if (nzDisabled.currentValue) {\n                    this._addHostClass(this._prefixCls + \"-picker-disabled\");\n                }\n                else {\n                    this._removeHostClass(this._prefixCls + \"-picker-disabled\");\n                }\n            }\n            var /** @type {?} */ nzOptions = changes[\"nzOptions\"];\n            if (nzOptions && !nzOptions.isFirstChange()) {\n                this._nzColumns.splice(0);\n                var /** @type {?} */ newOptions = nzOptions.currentValue;\n                if (newOptions && newOptions.length) {\n                    this._nzColumns.push(newOptions);\n                    this._clearSelection(null);\n                }\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzCascaderComponent.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n        function () {\n            this._addHostClass(this._prefixCls);\n            this._addHostClass(this._prefixCls + \"-picker\");\n        };\n    return NzCascaderComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzCascaderModule = /*@__PURE__*/ (function () {\n    function NzCascaderModule() {\n    }\n    return NzCascaderModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzCheckboxGroupComponent = /*@__PURE__*/ (function () {\n    function NzCheckboxGroupComponent(_elementRef, _render) {\n        this._elementRef = _elementRef;\n        this._render = _render;\n        this._disabled = false;\n        this._prefixCls = 'ant-checkbox-group';\n        // ngModel Access\n        this.onChange = Function.prototype;\n        this.onTouched = Function.prototype;\n        this._el = this._elementRef.nativeElement;\n        this._render.setElementClass(this._el, \"\" + this._prefixCls, true);\n    }\n    Object.defineProperty(NzCheckboxGroupComponent.prototype, \"nzDisabled\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._disabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._disabled = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzCheckboxGroupComponent.prototype._optionChange = /**\n     * @return {?}\n     */\n        function () {\n            this.onChange(this._options);\n        };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzCheckboxGroupComponent.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            this._options = value;\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NzCheckboxGroupComponent.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onChange = fn;\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NzCheckboxGroupComponent.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onTouched = fn;\n        };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NzCheckboxGroupComponent.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n        function (isDisabled) {\n            this.nzDisabled = isDisabled;\n        };\n    return NzCheckboxGroupComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzCheckboxComponent = /*@__PURE__*/ (function () {\n    function NzCheckboxComponent(_elementRef, _render) {\n        this._elementRef = _elementRef;\n        this._render = _render;\n        this._disabled = false;\n        this._indeterminate = false;\n        this._prefixCls = 'ant-checkbox';\n        this._innerPrefixCls = this._prefixCls + \"-inner\";\n        this._inputPrefixCls = this._prefixCls + \"-input\";\n        this._checked = false;\n        this._focused = false;\n        // ngModel Access\n        this.onChange = Function.prototype;\n        this.onTouched = Function.prototype;\n        this._classMap = (_a = {},\n            _a[this._prefixCls] = true,\n            _a[this._prefixCls + \"-checked\"] = this._checked && (!this.nzIndeterminate),\n            _a[this._prefixCls + \"-focused\"] = this._focused,\n            _a[this._prefixCls + \"-disabled\"] = this.nzDisabled,\n            _a[this._prefixCls + \"-indeterminate\"] = this.nzIndeterminate,\n            _a);\n        this._el = this._elementRef.nativeElement;\n        var _a;\n    }\n    Object.defineProperty(NzCheckboxComponent.prototype, \"nzDisabled\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._disabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._disabled = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCheckboxComponent.prototype, \"nzIndeterminate\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._indeterminate;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._indeterminate = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCheckboxComponent.prototype, \"nzChecked\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._checked;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NzCheckboxComponent.prototype.onClick = /**\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            e.preventDefault();\n            if (!this.nzDisabled) {\n                this.updateValue(!this._checked);\n            }\n        };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzCheckboxComponent.prototype.updateValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            if (value === this._checked) {\n                return;\n            }\n            this.onChange(value);\n            this._checked = value;\n            this.updateClassMap();\n        };\n    /**\n     * @return {?}\n     */\n    NzCheckboxComponent.prototype.nzFocus = /**\n     * @return {?}\n     */\n        function () {\n            this._focused = true;\n        };\n    /**\n     * @return {?}\n     */\n    NzCheckboxComponent.prototype.nzBlur = /**\n     * @return {?}\n     */\n        function () {\n            this._focused = false;\n        };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzCheckboxComponent.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            this._checked = value;\n            this.updateClassMap();\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NzCheckboxComponent.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onChange = fn;\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NzCheckboxComponent.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onTouched = fn;\n        };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NzCheckboxComponent.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n        function (isDisabled) {\n            this.nzDisabled = isDisabled;\n        };\n    /**\n     * @return {?}\n     */\n    NzCheckboxComponent.prototype.updateClassMap = /**\n     * @return {?}\n     */\n        function () {\n            this._classMap = (_a = {},\n                _a[this._prefixCls] = true,\n                _a[this._prefixCls + \"-checked\"] = this._checked && (!this.nzIndeterminate),\n                _a[this._prefixCls + \"-focused\"] = this._focused,\n                _a[this._prefixCls + \"-disabled\"] = this.nzDisabled,\n                _a[this._prefixCls + \"-indeterminate\"] = this.nzIndeterminate,\n                _a);\n            var _a;\n        };\n    /**\n     * @return {?}\n     */\n    NzCheckboxComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            this._render.addClass(this._el, this._prefixCls + \"-wrapper\");\n            this.updateClassMap();\n        };\n    /**\n     * @return {?}\n     */\n    NzCheckboxComponent.prototype.ngOnChanges = /**\n     * @return {?}\n     */\n        function () {\n            this.updateClassMap();\n        };\n    return NzCheckboxComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzCheckboxModule = /*@__PURE__*/ (function () {\n    function NzCheckboxModule() {\n    }\n    return NzCheckboxModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzCollapsesetComponent = /*@__PURE__*/ (function () {\n    function NzCollapsesetComponent() {\n        this._accordion = false;\n        this._bordered = true;\n        // all child collapse\n        this.panels = [];\n    }\n    Object.defineProperty(NzCollapsesetComponent.prototype, \"nzAccordion\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._accordion;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._accordion = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCollapsesetComponent.prototype, \"nzBordered\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._bordered;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._bordered = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} collapse\n     * @return {?}\n     */\n    NzCollapsesetComponent.prototype.nzClick = /**\n     * @param {?} collapse\n     * @return {?}\n     */\n        function (collapse) {\n            var _this = this;\n            if (this.nzAccordion) {\n                this.panels.map(function (item, index) {\n                    var /** @type {?} */ curIndex = _this.panels.indexOf(collapse);\n                    if (index !== curIndex) {\n                        item.nzActive = false;\n                    }\n                });\n            }\n        };\n    /**\n     * @param {?} collapse\n     * @return {?}\n     */\n    NzCollapsesetComponent.prototype.addTab = /**\n     * @param {?} collapse\n     * @return {?}\n     */\n        function (collapse) {\n            this.panels.push(collapse);\n        };\n    return NzCollapsesetComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzCollapseComponent = /*@__PURE__*/ (function () {\n    function NzCollapseComponent(_collapseSet, _elementRef) {\n        this._collapseSet = _collapseSet;\n        this._elementRef = _elementRef;\n        this._disabled = false;\n        this._active = false;\n        this._el = this._elementRef.nativeElement;\n        this._collapseSet.addTab(this);\n    }\n    Object.defineProperty(NzCollapseComponent.prototype, \"nzDisabled\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._disabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._disabled = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCollapseComponent.prototype, \"nzActive\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._active;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            var /** @type {?} */ active = toBoolean(value);\n            if (this._active === active) {\n                return;\n            }\n            if (!this.nzDisabled) {\n                this._active = active;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NzCollapseComponent.prototype.clickHeader = /**\n     * @param {?} $event\n     * @return {?}\n     */\n        function ($event) {\n            this.nzActive = !this.nzActive;\n            /** trigger host collapseSet click event */\n            this._collapseSet.nzClick(this);\n        };\n    return NzCollapseComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NZ_COLLAPSE_DIRECTIVES = [NzCollapsesetComponent, NzCollapseComponent];\nvar NzCollapseModule = /*@__PURE__*/ (function () {\n    function NzCollapseModule() {\n    }\n    return NzCollapseModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzDatePipe = /*@__PURE__*/ (function () {\n    function NzDatePipe() {\n    }\n    /**\n     * @param {?} value\n     * @param {?} formatString\n     * @return {?}\n     */\n    NzDatePipe.prototype.transform = /**\n     * @param {?} value\n     * @param {?} formatString\n     * @return {?}\n     */\n        function (value, formatString) {\n            if (moment(value).isValid()) {\n                return moment(value).format(formatString);\n            }\n            else {\n                return '';\n            }\n        };\n    return NzDatePipe;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzUtilModule = /*@__PURE__*/ (function () {\n    function NzUtilModule() {\n    }\n    return NzUtilModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\nvar NzTimePickerInnerComponent = /*@__PURE__*/ (function () {\n    function NzTimePickerInnerComponent(_cdr, _locale) {\n        this._cdr = _cdr;\n        this._locale = _locale;\n        this._disabled = false;\n        this._hideDisabledOptions = false;\n        this._now = new Date();\n        this._open = false;\n        this._hourList = [];\n        this._minuteList = [];\n        this._secondList = [];\n        this._value = null;\n        this._selectedHour = moment(this._now).hours();\n        this._selectedMinute = moment(this._now).minutes();\n        this._selectedSecond = moment(this._now).seconds();\n        this._format = 'HH:mm:ss';\n        this._showHour = this._format.indexOf('HH') > -1;\n        this._showMinute = this._format.indexOf('mm') > -1;\n        this._showSecond = this._format.indexOf('ss') > -1;\n        this._width = (+this._showHour + +this._showMinute + +this._showSecond) * 56 + 1 + \"px\";\n        // ngModel Access\n        this.onChange = function () { return null; };\n        this.onTouched = function () { return null; };\n        this.nzPlaceHolder = this._locale.translate('DateTime.chooseTimePlease');\n        this.nzSize = 'default';\n    }\n    Object.defineProperty(NzTimePickerInnerComponent.prototype, \"nzHideDisabledOptions\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._hideDisabledOptions;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._hideDisabledOptions = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTimePickerInnerComponent.prototype, \"nzDisabledHours\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._nzDisabledHours;\n        },\n        set: /**\n         * @param {?} fun\n         * @return {?}\n         */ function (fun) {\n            this._nzDisabledHours = fun;\n            this._buildHours();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTimePickerInnerComponent.prototype, \"nzDisabled\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._disabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._disabled = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTimePickerInnerComponent.prototype, \"nzFormat\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._format;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._format = value;\n            this._showHour = this._format.indexOf('HH') > -1;\n            this._showMinute = this._format.indexOf('mm') > -1;\n            this._showSecond = this._format.indexOf('ss') > -1;\n            this._width = (+this._showHour + +this._showMinute + +this._showSecond) * 56 + 1 + \"px\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTimePickerInnerComponent.prototype, \"nzValue\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._value || this._now;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (this._value === value) {\n                return;\n            }\n            this._value = value;\n            this._selectedHour = moment(this.nzValue).hours();\n            this._selectedMinute = moment(this.nzValue).minutes();\n            this._selectedSecond = moment(this.nzValue).seconds();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} instance\n     * @param {?} index\n     * @param {?=} duration\n     * @param {?=} unit\n     * @return {?}\n     */\n    NzTimePickerInnerComponent.prototype._scrollToSelected = /**\n     * @param {?} instance\n     * @param {?} index\n     * @param {?=} duration\n     * @param {?=} unit\n     * @return {?}\n     */\n        function (instance, index, duration, unit) {\n            if (duration === void 0) {\n                duration = 0;\n            }\n            var /** @type {?} */ _transIndex = this._translateIndex(index, unit);\n            var /** @type {?} */ currentOption = ((instance.children[0].children[_transIndex] || instance.children[0].children[0]));\n            this.scrollTo(instance, currentOption.offsetTop, duration);\n        };\n    // got from rc-timepicker\n    /**\n     * @param {?} element\n     * @param {?} to\n     * @param {?} duration\n     * @return {?}\n     */\n    NzTimePickerInnerComponent.prototype.scrollTo = /**\n     * @param {?} element\n     * @param {?} to\n     * @param {?} duration\n     * @return {?}\n     */\n        function (element, to, duration) {\n            var _this = this;\n            if (duration <= 0) {\n                element.scrollTop = to;\n                return;\n            }\n            var /** @type {?} */ difference = to - element.scrollTop;\n            var /** @type {?} */ perTick = difference / duration * 10;\n            reqAnimFrame(function () {\n                element.scrollTop = element.scrollTop + perTick;\n                if (element.scrollTop === to) {\n                    return;\n                }\n                _this.scrollTo(element, to, duration - 10);\n            });\n        };\n    /**\n     * @param {?} instance\n     * @param {?} index\n     * @param {?} disabled\n     * @return {?}\n     */\n    NzTimePickerInnerComponent.prototype._selectHour = /**\n     * @param {?} instance\n     * @param {?} index\n     * @param {?} disabled\n     * @return {?}\n     */\n        function (instance, index, disabled) {\n            if (disabled) {\n                return;\n            }\n            this._scrollToSelected(instance, index, 120, 'hour');\n            this._selectedHour = index;\n            this.nzValue = moment(this.nzValue).hour(index).toDate();\n            this.onChange(this._value);\n            this._buildMinutes();\n            this._buildSeconds();\n        };\n    /**\n     * @param {?} instance\n     * @param {?} index\n     * @param {?} disabled\n     * @return {?}\n     */\n    NzTimePickerInnerComponent.prototype._selectMinute = /**\n     * @param {?} instance\n     * @param {?} index\n     * @param {?} disabled\n     * @return {?}\n     */\n        function (instance, index, disabled) {\n            if (disabled) {\n                return;\n            }\n            this._scrollToSelected(instance, index, 120, 'minute');\n            this._selectedMinute = index;\n            this.nzValue = moment(this.nzValue).minute(index).toDate();\n            this.onChange(this._value);\n            this._buildSeconds();\n        };\n    /**\n     * @param {?} instance\n     * @param {?} index\n     * @param {?} disabled\n     * @return {?}\n     */\n    NzTimePickerInnerComponent.prototype._selectSecond = /**\n     * @param {?} instance\n     * @param {?} index\n     * @param {?} disabled\n     * @return {?}\n     */\n        function (instance, index, disabled) {\n            if (disabled) {\n                return;\n            }\n            this._scrollToSelected(instance, index, 120, 'second');\n            this._selectedSecond = index;\n            this.nzValue = moment(this.nzValue).second(index).toDate();\n            this.onChange(this._value);\n        };\n    /**\n     * @param {?} index\n     * @param {?} unit\n     * @return {?}\n     */\n    NzTimePickerInnerComponent.prototype._translateIndex = /**\n     * @param {?} index\n     * @param {?} unit\n     * @return {?}\n     */\n        function (index, unit) {\n            if (!this.nzHideDisabledOptions) {\n                return index;\n            }\n            if (unit === 'hour') {\n                var /** @type {?} */ disabledHours = this.nzDisabledHours && this.nzDisabledHours();\n                return this._calcIndex(disabledHours, index);\n            }\n            else if (unit === 'minute') {\n                var /** @type {?} */ disabledMinutes = this.nzDisabledMinutes && this.nzDisabledMinutes(this._selectedHour);\n                return this._calcIndex(disabledMinutes, index);\n            }\n            else if (unit === 'second') {\n                var /** @type {?} */ disabledSeconds = this.nzDisabledSeconds && this.nzDisabledSeconds(this._selectedHour, this._selectedMinute);\n                return this._calcIndex(disabledSeconds, index);\n            }\n        };\n    /**\n     * @param {?} array\n     * @param {?} index\n     * @return {?}\n     */\n    NzTimePickerInnerComponent.prototype._calcIndex = /**\n     * @param {?} array\n     * @param {?} index\n     * @return {?}\n     */\n        function (array, index) {\n            if (array && array.length) {\n                return index - array.reduce(function (pre, value) {\n                    return pre + (value < index ? 1 : 0);\n                }, 0);\n            }\n            else {\n                return index;\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzTimePickerInnerComponent.prototype._initPosition = /**\n     * @return {?}\n     */\n        function () {\n            this._selectedHour = moment(this.nzValue).hours();\n            this._selectedMinute = moment(this.nzValue).minutes();\n            this._selectedSecond = moment(this.nzValue).seconds();\n            if (this._showHour) {\n                this._scrollToSelected(this._hourListInstance.nativeElement, this._selectedHour, 0, 'hour');\n            }\n            if (this._showMinute) {\n                this._scrollToSelected(this._minuteListInstance.nativeElement, this._selectedMinute, 0, 'minute');\n            }\n            if (this._showSecond) {\n                this._scrollToSelected(this._secondListInstance.nativeElement, this._selectedSecond, 0, 'second');\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzTimePickerInnerComponent.prototype._buildTime = /**\n     * @return {?}\n     */\n        function () {\n            this._buildHours();\n            this._buildMinutes();\n            this._buildSeconds();\n        };\n    /**\n     * @return {?}\n     */\n    NzTimePickerInnerComponent.prototype._buildHours = /**\n     * @return {?}\n     */\n        function () {\n            this._hourList = [];\n            for (var /** @type {?} */ i = 0; i <= 23; i++) {\n                this._hourList.push({\n                    disabled: this.nzDisabledHours && (this.nzDisabledHours().indexOf(i) !== -1),\n                    name: i.toString().length === 1 ? ('0' + i) : ('' + i),\n                    index: i\n                });\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzTimePickerInnerComponent.prototype._buildMinutes = /**\n     * @return {?}\n     */\n        function () {\n            this._minuteList = [];\n            for (var /** @type {?} */ i = 0; i <= 59; i++) {\n                this._minuteList.push({\n                    disabled: this.nzDisabledMinutes && (this.nzDisabledMinutes(this._selectedHour).indexOf(i) !== -1),\n                    name: i.toString().length === 1 ? ('0' + i) : ('' + i),\n                    index: i\n                });\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzTimePickerInnerComponent.prototype._buildSeconds = /**\n     * @return {?}\n     */\n        function () {\n            this._secondList = [];\n            for (var /** @type {?} */ i = 0; i <= 59; i++) {\n                this._secondList.push({\n                    disabled: this.nzDisabledSeconds && (this.nzDisabledSeconds(this._selectedHour, this._selectedMinute).indexOf(i) !== -1),\n                    name: i.toString().length === 1 ? ('0' + i) : ('' + i),\n                    index: i\n                });\n            }\n        };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzTimePickerInnerComponent.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            this.nzValue = value;\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NzTimePickerInnerComponent.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onChange = fn;\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NzTimePickerInnerComponent.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onTouched = fn;\n        };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NzTimePickerInnerComponent.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n        function (isDisabled) {\n            this.nzDisabled = isDisabled;\n        };\n    /**\n     * @return {?}\n     */\n    NzTimePickerInnerComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            this._buildTime();\n        };\n    return NzTimePickerInnerComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar POSITION_MAP = (({\n    'top': {\n        originX: 'center',\n        originY: 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    'topCenter': {\n        originX: 'center',\n        originY: 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    'topLeft': {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    'topRight': {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    },\n    'right': {\n        originX: 'end',\n        originY: 'center',\n        overlayX: 'start',\n        overlayY: 'center',\n    },\n    'rightTop': {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'top',\n    },\n    'rightBottom': {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom',\n    },\n    'bottom': {\n        originX: 'center',\n        originY: 'bottom',\n        overlayX: 'center',\n        overlayY: 'top',\n    },\n    'bottomCenter': {\n        originX: 'center',\n        originY: 'bottom',\n        overlayX: 'center',\n        overlayY: 'top',\n    },\n    'bottomLeft': {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top',\n    },\n    'bottomRight': {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top',\n    },\n    'left': {\n        originX: 'start',\n        originY: 'center',\n        overlayX: 'end',\n        overlayY: 'center',\n    },\n    'leftTop': {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'top',\n    },\n    'leftBottom': {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom',\n    },\n}));\n// TODO: The whole logic does not make sense here, _objectValues just returns a copy of original array\nvar DEFAULT_4_POSITIONS = _objectValues([POSITION_MAP[\"top\"], POSITION_MAP[\"right\"], POSITION_MAP[\"bottom\"], POSITION_MAP[\"left\"]]);\nvar DEFAULT_DROPDOWN_POSITIONS = _objectValues([POSITION_MAP[\"bottomLeft\"], POSITION_MAP[\"topLeft\"]]);\nvar DEFAULT_DATEPICKER_POSITIONS = ([\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'top',\n    },\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom',\n    }\n]);\n/**\n * @template T, S\n * @param {?} array\n * @param {?} iteratee\n * @return {?}\n */\nfunction arrayMap(array, iteratee) {\n    var /** @type {?} */ index = -1;\n    var /** @type {?} */ length = array == null ? 0 : array.length;\n    var /** @type {?} */ result = Array(length);\n    while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n}\n/**\n * @template T\n * @param {?} object\n * @param {?} props\n * @return {?}\n */\nfunction baseValues(object, props) {\n    return arrayMap(props, function (key) {\n        return object[key];\n    });\n}\n/**\n * @template T\n * @param {?} object\n * @return {?}\n */\nfunction _objectValues(object) {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzTimePickerComponent = /*@__PURE__*/ (function (_super) {\n    __extends(NzTimePickerComponent, _super);\n    function NzTimePickerComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._timePickerDisabled = false;\n        _this._dropDownPosition = 'bottom';\n        _this._positions = DEFAULT_DATEPICKER_POSITIONS.slice();\n        return _this;\n    }\n    Object.defineProperty(NzTimePickerComponent.prototype, \"nzDisabled\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._timePickerDisabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._timePickerDisabled = toBoolean(value);\n            this._closeCalendar();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    NzTimePickerComponent.prototype.onPositionChange = /**\n     * @param {?} position\n     * @return {?}\n     */\n        function (position) {\n            var /** @type {?} */ _position = position.connectionPair.originY === 'bottom' ? 'top' : 'bottom';\n            if (this._dropDownPosition !== _position) {\n                this._dropDownPosition = _position;\n                this._cdr.detectChanges();\n            }\n        };\n    /**\n     * @param {?} box\n     * @return {?}\n     */\n    NzTimePickerComponent.prototype._manualChangeInput = /**\n     * @param {?} box\n     * @return {?}\n     */\n        function (box) {\n            var /** @type {?} */ _tempMoment = moment(box.value, this._format);\n            if (Date.parse(_tempMoment.toDate().toString())) {\n                this.nzValue = new Date((moment(this._value).hour(_tempMoment.hour()).minute(_tempMoment.minute()).second(_tempMoment.second())).toDate().getTime());\n                this.onChange(this._value);\n            }\n            // this._closeCalendar();\n        };\n    /**\n     * @return {?}\n     */\n    NzTimePickerComponent.prototype._overHour = /**\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ _start = this._format.indexOf('HH');\n            var /** @type {?} */ _end = _start + 2;\n            this._inputTimeInstance.nativeElement.setSelectionRange(_start, _end);\n        };\n    /**\n     * @return {?}\n     */\n    NzTimePickerComponent.prototype._overMinute = /**\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ _start = this._format.indexOf('mm');\n            var /** @type {?} */ _end = _start + 2;\n            this._inputTimeInstance.nativeElement.setSelectionRange(_start, _end);\n        };\n    /**\n     * @return {?}\n     */\n    NzTimePickerComponent.prototype._overSecond = /**\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ _start = this._format.indexOf('ss');\n            var /** @type {?} */ _end = _start + 2;\n            this._inputTimeInstance.nativeElement.setSelectionRange(_start, _end);\n        };\n    /**\n     * @return {?}\n     */\n    NzTimePickerComponent.prototype._clearValue = /**\n     * @return {?}\n     */\n        function () {\n            this.nzValue = null;\n            this._selectedHour = null;\n            this._selectedMinute = null;\n            this.onChange(this._value);\n            this._selectedSecond = null;\n        };\n    /**\n     * @return {?}\n     */\n    NzTimePickerComponent.prototype._openCalendar = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            this._open = true;\n            setTimeout(function (_) {\n                _this._initPosition();\n                _this._inputTimeInstance.nativeElement.setSelectionRange(0, 8);\n            });\n        };\n    /**\n     * @return {?}\n     */\n    NzTimePickerComponent.prototype._closeCalendar = /**\n     * @return {?}\n     */\n        function () {\n            if (!this._open) {\n                return;\n            }\n            this._open = false;\n        };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NzTimePickerComponent.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n        function (isDisabled) {\n            this.nzDisabled = isDisabled;\n        };\n    return NzTimePickerComponent;\n}(NzTimePickerInnerComponent));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzTimePickerModule = /*@__PURE__*/ (function () {\n    function NzTimePickerModule() {\n    }\n    return NzTimePickerModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzDatePickerComponent = /*@__PURE__*/ (function () {\n    function NzDatePickerComponent(_elementRef, _cdr, _locale) {\n        this._elementRef = _elementRef;\n        this._cdr = _cdr;\n        this._locale = _locale;\n        this._allowClear = true;\n        this._disabled = false;\n        this._showTime = null;\n        this._open = false;\n        this._mode = 'year';\n        this._dropDownPosition = 'bottom';\n        this._value = null;\n        this._today = new Date();\n        this._selectedMonth = moment(this.nzValue).month();\n        this._selectedYear = moment(this.nzValue).year();\n        this._selectedDate = moment(this.nzValue).date();\n        this._showMonth = moment(new Date()).month();\n        this._showYear = moment(new Date()).year();\n        this._startDecade = Math.floor(this._showYear / 10) * 10;\n        this._yearPanel = [];\n        this._positions = DEFAULT_DATEPICKER_POSITIONS.slice();\n        // ngModel Access\n        this.onChange = function () { return null; };\n        this.onTouched = function () { return null; };\n        this.nzPlaceHolder = this._locale.translate('DateTime.chooseDatePlease');\n        this.nzFormat = 'YYYY-MM-DD';\n        this.nzSize = '';\n        this.nzMode = 'day';\n        this._el = this._elementRef.nativeElement;\n    }\n    Object.defineProperty(NzDatePickerComponent.prototype, \"nzShowTime\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._showTime;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (typeof value === 'string' || typeof value === 'boolean') {\n                this._showTime = toBoolean(value) ? {} : null;\n            }\n            else {\n                this._showTime = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzDatePickerComponent.prototype, \"nzAllowClear\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._allowClear;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._allowClear = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzDatePickerComponent.prototype, \"nzDisabled\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._disabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._disabled = toBoolean(value);\n            this._closeCalendar();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzDatePickerComponent.prototype, \"nzDisabledDate\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            if (this._mode === 'month' && this.nzMode === 'day') {\n                return;\n            }\n            return this._disabledDate;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._disabledDate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzDatePickerComponent.prototype, \"_disabledToday\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            if (this._disabledDate) {\n                return this._disabledDate(new Date());\n            }\n            else {\n                return false;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    NzDatePickerComponent.prototype.onPositionChange = /**\n     * @param {?} position\n     * @return {?}\n     */\n        function (position) {\n            var /** @type {?} */ _position = position.connectionPair.originY === 'bottom' ? 'top' : 'bottom';\n            if (this._dropDownPosition !== _position) {\n                this._dropDownPosition = _position;\n                this._cdr.detectChanges();\n            }\n        };\n    Object.defineProperty(NzDatePickerComponent.prototype, \"nzValue\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._value || new Date();\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._updateValue(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NzDatePickerComponent.prototype._changeTime = /**\n     * @param {?} $event\n     * @return {?}\n     */\n        function ($event) {\n            this._value = $event;\n        };\n    /**\n     * @param {?} box\n     * @return {?}\n     */\n    NzDatePickerComponent.prototype._blurInput = /**\n     * @param {?} box\n     * @return {?}\n     */\n        function (box) {\n            if (Date.parse(box.value)) {\n                this.nzValue = new Date(box.value);\n                this.onChange(this._value);\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzDatePickerComponent.prototype._preYear = /**\n     * @return {?}\n     */\n        function () {\n            this._showYear = this._showYear - 1;\n        };\n    /**\n     * @return {?}\n     */\n    NzDatePickerComponent.prototype._nextYear = /**\n     * @return {?}\n     */\n        function () {\n            this._showYear = this._showYear + 1;\n        };\n    /**\n     * @return {?}\n     */\n    NzDatePickerComponent.prototype._preMonth = /**\n     * @return {?}\n     */\n        function () {\n            if (this._showMonth - 1 < 0) {\n                this._showMonth = 11;\n                this._preYear();\n            }\n            else {\n                this._showMonth = this._showMonth - 1;\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzDatePickerComponent.prototype._nextMonth = /**\n     * @return {?}\n     */\n        function () {\n            if (this._showMonth + 1 > 11) {\n                this._showMonth = 0;\n                this._nextYear();\n            }\n            else {\n                this._showMonth = this._showMonth + 1;\n            }\n        };\n    /**\n     * @param {?} year\n     * @param {?} $event\n     * @return {?}\n     */\n    NzDatePickerComponent.prototype._setShowYear = /**\n     * @param {?} year\n     * @param {?} $event\n     * @return {?}\n     */\n        function (year, $event) {\n            $event.stopPropagation();\n            this._showYear = year;\n            this._mode = this.nzMode === 'day' ? 'year' : 'month';\n        };\n    /**\n     * @return {?}\n     */\n    NzDatePickerComponent.prototype._preDecade = /**\n     * @return {?}\n     */\n        function () {\n            this._startDecade = this._startDecade - 10;\n        };\n    /**\n     * @return {?}\n     */\n    NzDatePickerComponent.prototype._nextDecade = /**\n     * @return {?}\n     */\n        function () {\n            this._startDecade = this._startDecade + 10;\n        };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NzDatePickerComponent.prototype._clearValue = /**\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            this.nzValue = null;\n            this.onChange(this._value);\n        };\n    /**\n     * @return {?}\n     */\n    NzDatePickerComponent.prototype._changeToToday = /**\n     * @return {?}\n     */\n        function () {\n            if (!this._disabledToday) {\n                this.nzValue = new Date();\n                this.onChange(this._value);\n                this._closeCalendar();\n            }\n        };\n    /**\n     * @param {?} day\n     * @return {?}\n     */\n    NzDatePickerComponent.prototype._clickDay = /**\n     * @param {?} day\n     * @return {?}\n     */\n        function (day) {\n            if (!this.nzShowTime) {\n                this._closeCalendar();\n                this.nzValue = day.date.toDate();\n                this.onChange(this._value);\n            }\n            else {\n                this.nzValue = moment(this.nzValue).year(day.date.year()).month(day.date.month()).date(day.date.date()).toDate();\n                this.onChange(this._value);\n            }\n        };\n    /**\n     * @param {?} month\n     * @return {?}\n     */\n    NzDatePickerComponent.prototype._clickMonth = /**\n     * @param {?} month\n     * @return {?}\n     */\n        function (month) {\n            if (this.nzMode === 'month') {\n                this._closeCalendar();\n                this.nzValue = moment(this.nzValue).year(this._showYear).month(month.index).toDate();\n                this.onChange(this._value);\n            }\n            else {\n                this._showMonth = month.index;\n                this._mode = 'year';\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzDatePickerComponent.prototype._openCalendar = /**\n     * @return {?}\n     */\n        function () {\n            if (this.nzDisabled) {\n                return;\n            }\n            this._mode = this.nzMode === 'day' ? 'year' : 'month';\n            this._open = true;\n        };\n    /**\n     * @return {?}\n     */\n    NzDatePickerComponent.prototype._closeCalendar = /**\n     * @return {?}\n     */\n        function () {\n            if (!this._open) {\n                return;\n            }\n            if (this.nzShowTime) {\n                this._updateValue(this._value);\n                this.onChange(this._value);\n            }\n            this._open = false;\n        };\n    /**\n     * @return {?}\n     */\n    NzDatePickerComponent.prototype._changeMonthView = /**\n     * @return {?}\n     */\n        function () {\n            this._mode = 'month';\n        };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NzDatePickerComponent.prototype._changeDecadeView = /**\n     * @param {?} $event\n     * @return {?}\n     */\n        function ($event) {\n            $event.stopPropagation();\n            this._mode = 'decade';\n        };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NzDatePickerComponent.prototype._changeTimeView = /**\n     * @param {?} $event\n     * @return {?}\n     */\n        function ($event) {\n            var _this = this;\n            $event.stopPropagation();\n            this._mode = 'time';\n            setTimeout(function (_) {\n                _this.timePickerInner._initPosition();\n            });\n        };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NzDatePickerComponent.prototype._changeYearView = /**\n     * @param {?} $event\n     * @return {?}\n     */\n        function ($event) {\n            $event.stopPropagation();\n            this._mode = 'year';\n        };\n    Object.defineProperty(NzDatePickerComponent.prototype, \"_showClearIcon\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._value && !this.nzDisabled && this.nzAllowClear;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzDatePickerComponent.prototype._generateYearPanel = /**\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ _t = [];\n            for (var /** @type {?} */ i = 0; i < 10; i++) {\n                if (i === 1 || i === 4 || i === 7 || i === 9) {\n                    _t.push(i);\n                    this._yearPanel.push(_t);\n                    _t = [];\n                }\n                else {\n                    _t.push(i);\n                }\n            }\n            this._yearPanel[0].unshift('start');\n            this._yearPanel[3].push('end');\n        };\n    /**\n     * @return {?}\n     */\n    NzDatePickerComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            this._generateYearPanel();\n        };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzDatePickerComponent.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            // this.nzValue = value;\n            this._updateValue(value);\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NzDatePickerComponent.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onChange = fn;\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NzDatePickerComponent.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onTouched = fn;\n        };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NzDatePickerComponent.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n        function (isDisabled) {\n            this.nzDisabled = isDisabled;\n        };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzDatePickerComponent.prototype._updateValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            if (this._value === value) {\n                return;\n            }\n            if (this._disabledDate && this._disabledDate(value)) {\n                return;\n            }\n            this._value = value;\n            this._selectedMonth = moment(this.nzValue).month();\n            this._selectedYear = moment(this.nzValue).year();\n            this._selectedDate = moment(this.nzValue).date();\n            this._showYear = moment(this.nzValue).year();\n            this._showMonth = moment(this.nzValue).month();\n            this._startDecade = Math.floor(this._showYear / 10) * 10;\n        };\n    return NzDatePickerComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar scrollbarWidth;\n// Measure scrollbar width for padding body during modal show/hide\nvar scrollbarMeasure = {\n    position: 'absolute',\n    top: '-9999px',\n    width: '50px',\n    height: '50px',\n    overflow: 'scroll',\n};\n/**\n * @return {?}\n */\nfunction measureScrollbar() {\n    if (typeof document === 'undefined' || typeof window === 'undefined') {\n        return 0;\n    }\n    if (scrollbarWidth) {\n        return scrollbarWidth;\n    }\n    var /** @type {?} */ scrollDiv = document.createElement('div');\n    for (var /** @type {?} */ scrollProp in scrollbarMeasure) {\n        if (scrollbarMeasure.hasOwnProperty(scrollProp)) {\n            scrollDiv.style[scrollProp] = scrollbarMeasure[scrollProp];\n        }\n    }\n    document.body.appendChild(scrollDiv);\n    var /** @type {?} */ width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n    document.body.removeChild(scrollDiv);\n    scrollbarWidth = width;\n    return scrollbarWidth;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzRangePickerComponent = /*@__PURE__*/ (function () {\n    function NzRangePickerComponent(_elementRef, _cdr, _locale) {\n        this._elementRef = _elementRef;\n        this._cdr = _cdr;\n        this._locale = _locale;\n        this._disabled = false;\n        this._showTime = null;\n        this._now = moment();\n        this._oldValue = this._defaultRangeValue;\n        this._value = this._defaultRangeValue;\n        this._part = RangePart;\n        this._disabledDatePart = [null, null];\n        this._mode = ['month', 'month'];\n        this._selectedMonth = [];\n        this._selectedYear = [];\n        this._selectedDate = [];\n        this._showMonth = [this._now.month(), this._now.clone().add(1, 'month').month()];\n        this._showYear = [this._now.year(), this._now.year()];\n        this._yearPanel = [];\n        this._startDecade = new Array(2).fill(Math.floor(this._showYear[RangePart.Start] / 10) * 10);\n        this._triggerWidth = 0;\n        this._dropDownPosition = 'bottom';\n        this._positions = DEFAULT_DATEPICKER_POSITIONS.slice();\n        this._offsetX = 0;\n        this.onTouched = function () { return null; };\n        this.onChange = function () { return null; };\n        this.nzSize = '';\n        this.nzFormat = 'YYYY-MM-DD';\n        this.nzAllowClear = true;\n        this.nzPlaceholder = [this._locale.translate('DateTime.chooseStartDatePlease'), this._locale.translate('DateTime.chooseEndDatePlease')];\n        this._el = this._elementRef.nativeElement;\n    }\n    Object.defineProperty(NzRangePickerComponent.prototype, \"_defaultRangeValue\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return [null, null];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzRangePickerComponent.prototype, \"start\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return moment(this._value[RangePart.Start]);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzRangePickerComponent.prototype, \"end\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return moment(this._value[RangePart.End]);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzRangePickerComponent.prototype, \"showClearIcon\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._isComplete() && !this.nzDisabled && this.nzAllowClear;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzRangePickerComponent.prototype, \"nzShowTime\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._showTime;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (typeof value === 'string' || typeof value === 'boolean') {\n                this._showTime = toBoolean(value) ? {} : null;\n            }\n            else {\n                this._showTime = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzRangePickerComponent.prototype, \"nzDisabled\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._disabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._disabled = toBoolean(value);\n            this._closeCalendar();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzRangePickerComponent.prototype, \"nzValue\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._value || this._defaultRangeValue;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._updateValue(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzRangePickerComponent.prototype, \"nzDisabledDate\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._disabledDate;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._disabledDate = value;\n            this._bindDisabledDateToPart();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            this._generateYearPanel();\n        };\n    /**\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype._bindDisabledDateToPart = /**\n     * @return {?}\n     */\n        function () {\n            // when the mode is month, not needed disable it\n            this._disabledDatePart[RangePart.Start] = this._mode[RangePart.Start] === 'month' ? null : this._disabledDate;\n            this._disabledDatePart[RangePart.End] = this._mode[RangePart.End] === 'month' ? null : this._disabledDate;\n        };\n    /**\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype._generateYearPanel = /**\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ _t = [];\n            for (var /** @type {?} */ i = 0; i < 10; i++) {\n                if (i === 1 || i === 4 || i === 7 || i === 9) {\n                    _t.push(i);\n                    this._yearPanel.push(_t);\n                    _t = [];\n                }\n                else {\n                    _t.push(i);\n                }\n            }\n            this._yearPanel[0].unshift('start');\n            this._yearPanel[3].push('end');\n        };\n    /**\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype._openCalendar = /**\n     * @return {?}\n     */\n        function () {\n            if (this.nzDisabled) {\n                return;\n            }\n            this._mode = ['month', 'month'];\n            this._open = true;\n            this._setTriggerWidth();\n            this._initShow();\n        };\n    /**\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype._closeCalendar = /**\n     * @return {?}\n     */\n        function () {\n            if (!this._open) {\n                return;\n            }\n            if (this._isComplete()) {\n                this._onChange();\n            }\n            else {\n                this._value = this._oldValue.slice();\n            }\n            this._open = false;\n        };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype._clearValue = /**\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            this.nzValue = this._defaultRangeValue;\n            this.onChange(this._value);\n        };\n    /**\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype._setTriggerWidth = /**\n     * @return {?}\n     */\n        function () {\n            this._triggerWidth = this.trigger.nativeElement.getBoundingClientRect().width;\n        };\n    /**\n     * @param {?} year\n     * @param {?} part\n     * @param {?} $event\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype._setShowYear = /**\n     * @param {?} year\n     * @param {?} part\n     * @param {?} $event\n     * @return {?}\n     */\n        function (year, part, $event) {\n            $event.stopPropagation();\n            this._showYear[part] = year;\n            this._mode[part] = 'month';\n        };\n    /**\n     * @param {?} part\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype._isValid = /**\n     * @param {?} part\n     * @return {?}\n     */\n        function (part) {\n            return moment(this._value[part]).isValid();\n        };\n    /**\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype._isComplete = /**\n     * @return {?}\n     */\n        function () {\n            return this.start.isValid() && this.end.isValid();\n        };\n    /**\n     * @param {?} $event\n     * @param {?} part\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype._changeTime = /**\n     * @param {?} $event\n     * @param {?} part\n     * @return {?}\n     */\n        function ($event, part) {\n            this._value[part] = $event;\n        };\n    /**\n     * @param {?} box\n     * @param {?} part\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype._blurInput = /**\n     * @param {?} box\n     * @param {?} part\n     * @return {?}\n     */\n        function (box, part) {\n            if (Date.parse(box.value)) {\n                this._value[part] = new Date(box.value);\n                this._onChange();\n            }\n        };\n    /**\n     * @param {?} day\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype._hoverDay = /**\n     * @param {?} day\n     * @return {?}\n     */\n        function (day) {\n            if (!this._isComplete() && this._value.some(function (e) { return moment(e).isValid(); })) {\n                this.hoveringSelectValue = day.date.toDate();\n            }\n            else {\n                this.hoveringSelectValue = null;\n            }\n        };\n    /**\n     * @param {?} day\n     * @param {?} part\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype._clickDay = /**\n     * @param {?} day\n     * @param {?} part\n     * @return {?}\n     */\n        function (day, part) {\n            var /** @type {?} */ newDate = day.date.toDate();\n            // if have completed, then reset\n            if (this._isComplete()) {\n                this._value = this._defaultRangeValue;\n                this._value[part] = newDate;\n                this.rangeValueSort();\n                return;\n            }\n            if (moment(this._value[part]).isValid()) {\n                if (part === RangePart.Start) {\n                    this._value[RangePart.End] = newDate;\n                }\n                else {\n                    this._value[RangePart.Start] = newDate;\n                }\n            }\n            else {\n                this._value[part] = newDate;\n            }\n            // the result depends the before step\n            if (this._isComplete()) {\n                this.rangeValueSort();\n                if (!this.nzShowTime) {\n                    this._closeCalendar();\n                    return;\n                }\n                this._initShow();\n            }\n            this.rangeValueSort();\n        };\n    /**\n     * @param {?} month\n     * @param {?} part\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype._clickMonth = /**\n     * @param {?} month\n     * @param {?} part\n     * @return {?}\n     */\n        function (month, part) {\n            this._showMonth[part] = month.index;\n            this._mode[part] = 'year';\n            this._bindDisabledDateToPart();\n            this.adjustShowMonth();\n        };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype._changeTimeView = /**\n     * @param {?} $event\n     * @return {?}\n     */\n        function ($event) {\n            var _this = this;\n            $event.stopPropagation();\n            this._mode = ['time', 'time'];\n            this.setSelectedValue();\n            setTimeout(function (_) {\n                _this.timePickerInner.forEach(function (e) { return e._initPosition(); });\n            });\n        };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype._changeYearView = /**\n     * @param {?} $event\n     * @return {?}\n     */\n        function ($event) {\n            $event.stopPropagation();\n            this._mode = ['year', 'year'];\n        };\n    /**\n     * @param {?} part\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype._showBtn = /**\n     * @param {?} part\n     * @return {?}\n     */\n        function (part) {\n            if (this._mode[part] === 'month') {\n                return true;\n            }\n            var /** @type {?} */ showStart = moment().month(this._showMonth[RangePart.Start]).year(this._showYear[RangePart.Start]);\n            var /** @type {?} */ showEnd = moment().month(this._showMonth[RangePart.End]).year(this._showYear[RangePart.End]);\n            return !showStart.add(1, 'month').isSame(showEnd, 'month');\n        };\n    /**\n     * @param {?} part\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype._preYear = /**\n     * @param {?} part\n     * @return {?}\n     */\n        function (part) {\n            this._showYear[part] = this._showYear[part] - 1;\n            this.adjustShowMonth();\n        };\n    /**\n     * @param {?} part\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype._nextYear = /**\n     * @param {?} part\n     * @return {?}\n     */\n        function (part) {\n            this._showYear[part] = this._showYear[part] + 1;\n            this.adjustShowMonth();\n        };\n    /**\n     * @param {?} part\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype._preMonth = /**\n     * @param {?} part\n     * @return {?}\n     */\n        function (part) {\n            if (this._showMonth[part] - 1 < 0) {\n                this._showMonth[part] = 11;\n                this._preYear(part);\n            }\n            else {\n                this._showMonth[part] = this._showMonth[part] - 1;\n            }\n        };\n    /**\n     * @param {?} part\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype._nextMonth = /**\n     * @param {?} part\n     * @return {?}\n     */\n        function (part) {\n            if (this._showMonth[part] + 1 > 11) {\n                this._showMonth[part] = 0;\n                this._nextYear(part);\n            }\n            else {\n                this._showMonth[part] = this._showMonth[part] + 1;\n            }\n        };\n    /**\n     * @param {?} part\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype._preDecade = /**\n     * @param {?} part\n     * @return {?}\n     */\n        function (part) {\n            this._startDecade[part] = this._startDecade[part] - 10;\n        };\n    /**\n     * @param {?} part\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype._nextDecade = /**\n     * @param {?} part\n     * @return {?}\n     */\n        function (part) {\n            this._startDecade[part] = this._startDecade[part] + 10;\n        };\n    /**\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype.rangeValueSort = /**\n     * @return {?}\n     */\n        function () {\n            if (this.start.isValid() && this.end.isValid() && this.start.isAfter(this.end)) {\n                this._value = this._value.reverse();\n            }\n            else {\n                this._value = this._value.concat();\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype._initShow = /**\n     * @return {?}\n     */\n        function () {\n            if (this.start.isValid()) {\n                this._showMonth[RangePart.Start] = this.start.month();\n                this._showYear[RangePart.Start] = this.start.year();\n            }\n            else {\n                this._showMonth[RangePart.Start] = this._now.month();\n                this._showYear[RangePart.Start] = this._now.year();\n            }\n            if (this.end.isValid() && !this.start.isSameOrAfter(this.end, 'month')) {\n                this._showMonth[RangePart.End] = this.end.month();\n                this._showYear[RangePart.End] = this.end.year();\n            }\n            else {\n                var /** @type {?} */ nextMonthOfStart = this.start.clone().add(1, 'month');\n                var /** @type {?} */ nextMonthOfNow = this._now.clone().add(1, 'month');\n                this._showMonth[RangePart.End] = this.start.isValid() ? nextMonthOfStart.month() : nextMonthOfNow.month();\n                this._showYear[RangePart.End] = this.start.isValid() ? nextMonthOfStart.year() : nextMonthOfNow.year();\n            }\n            this._showMonth = this._showMonth.concat();\n            this._showYear = this._showYear.concat();\n        };\n    /**\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype.adjustShowMonth = /**\n     * @return {?}\n     */\n        function () {\n            if (this._showYear[RangePart.Start] === this._showYear[RangePart.End] && this._showMonth[RangePart.Start] === this._showMonth[RangePart.End]) {\n                this._nextMonth(RangePart.End);\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype.reposition = /**\n     * @return {?}\n     */\n        function () {\n            if (typeof window !== 'undefined' && this._open && this._cdkOverlay && this._cdkOverlay.overlayRef) {\n                var /** @type {?} */ originElement = this._cdkOverlay.origin.elementRef.nativeElement;\n                var /** @type {?} */ overlayElement = this._cdkOverlay.overlayRef.overlayElement;\n                var /** @type {?} */ originX = originElement.getBoundingClientRect().left;\n                var /** @type {?} */ overlayWidth = overlayElement.getBoundingClientRect().width;\n                var /** @type {?} */ margin = window.innerWidth - originX - overlayWidth;\n                var /** @type {?} */ offsetX = margin > 0 ? 0 : margin - (measureScrollbar() || 15);\n                this._offsetX = Number.isFinite(offsetX) ? offsetX : 0;\n                this._cdr.detectChanges();\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype.onAttach = /**\n     * @return {?}\n     */\n        function () {\n            this.reposition();\n        };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype.onPositionChange = /**\n     * @param {?} position\n     * @return {?}\n     */\n        function (position) {\n            this.reposition();\n            var /** @type {?} */ _position = position.connectionPair.originY === 'bottom' ? 'top' : 'bottom';\n            if (this._dropDownPosition !== _position) {\n                this._dropDownPosition = _position;\n                this._cdr.detectChanges();\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype.setSelectedValue = /**\n     * @return {?}\n     */\n        function () {\n            this._selectedYear = [this.start.year(), this.end.year()];\n            this._selectedMonth = [this.start.month(), this.end.month()];\n            this._selectedDate = [this.start.date(), this.end.date()];\n        };\n    /**\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype.isValueChange = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            return this._value.some(function (value, index) {\n                return _this._oldValue[index] === null\n                    || (moment.isDate(_this._oldValue[index])\n                        && moment.isDate(value)\n                        && _this._oldValue[index].getTime() !== value.getTime());\n            });\n        };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            this._updateValue(value);\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onChange = fn;\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onTouched = fn;\n        };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n        function (isDisabled) {\n            this.nzDisabled = isDisabled;\n        };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype._updateValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            if (Array.isArray(value) && value.length === 2) {\n                this._value = [value[RangePart.Start], value[RangePart.End]];\n            }\n            else {\n                this._value = this._defaultRangeValue;\n            }\n            this._oldValue = this._value.slice();\n        };\n    /**\n     * @return {?}\n     */\n    NzRangePickerComponent.prototype._onChange = /**\n     * @return {?}\n     */\n        function () {\n            if (this._isValid(RangePart.Start) && this._isValid(RangePart.End) && this.isValueChange()) {\n                this.onChange(this._value);\n                this._oldValue = this._value.slice();\n            }\n        };\n    return NzRangePickerComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzDatePickerModule = /*@__PURE__*/ (function () {\n    function NzDatePickerModule() {\n    }\n    return NzDatePickerModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzMenuDividerComponent = /*@__PURE__*/ (function () {\n    function NzMenuDividerComponent() {\n    }\n    return NzMenuDividerComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzMenuGroupComponent = /*@__PURE__*/ (function () {\n    function NzMenuGroupComponent() {\n    }\n    return NzMenuGroupComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzMenuComponent = /*@__PURE__*/ (function () {\n    function NzMenuComponent() {\n        this._clickActive = true;\n        this._inlineCollapsed = false;\n        /**\n         * set when has submenu component\n         */\n        this.hasSubMenu = false;\n        /**\n         * set when in dropdown component\n         */\n        this.isInDropDown = false;\n        /**\n         * collection of menu item\n         */\n        this.menuItems = [];\n        /**\n         * collection of sub menu\n         */\n        this.subMenus = [];\n        /**\n         * view init flat\n         */\n        this.isInit = false;\n        /**\n         * opened index of array\n         */\n        this._subMenusOpenIndex = [];\n        this.nzMode = 'vertical';\n        this.nzTheme = 'light';\n    }\n    Object.defineProperty(NzMenuComponent.prototype, \"nzClickActive\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._clickActive;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._clickActive = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzMenuComponent.prototype, \"nzInlineCollapsed\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._inlineCollapsed;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._inlineCollapsed = toBoolean(value);\n            if (this.isInit) {\n                this.updateInlineCollapse();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzMenuComponent.prototype.updateInlineCollapse = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            if (this._inlineCollapsed) {\n                this.hideSubMenus();\n                // after the animation is over\n                setTimeout(function () { return _this.nzMode = 'vertical'; }, 150);\n            }\n            else {\n                this.reductionSubMenus();\n                this.nzMode = this._tempMode;\n            }\n        };\n    Object.defineProperty(NzMenuComponent.prototype, \"_isInDropDownClass\", {\n        get: /**\n         * define host class\n         * @return {?}\n         */ function () {\n            return this.isInDropDown;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzMenuComponent.prototype, \"_isNotInDropDownClass\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return !this.isInDropDown;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzMenuComponent.prototype, \"setDropDownThemeLightClass\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.isInDropDown && (this.nzTheme === 'light');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzMenuComponent.prototype, \"setDropDownThemeDarkClass\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.isInDropDown && (this.nzTheme === 'dark');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzMenuComponent.prototype, \"setMenuThemeLightClass\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return (!this.isInDropDown) && (this.nzTheme === 'light');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzMenuComponent.prototype, \"setMenuThemeDarkClass\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return (!this.isInDropDown) && (this.nzTheme === 'dark');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzMenuComponent.prototype, \"setMenuVerticalClass\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return (!this.isInDropDown) && (this.nzMode === 'vertical');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzMenuComponent.prototype, \"setMenuHorizontalClass\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return (!this.isInDropDown) && (this.nzMode === 'horizontal');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzMenuComponent.prototype, \"setMenuInlineClass\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return (!this.isInDropDown) && (this.nzMode === 'inline');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzMenuComponent.prototype, \"setMenuInlineCollapsedClass\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return (!this.isInDropDown) && (this.nzMode !== 'horizontal') && this.nzInlineCollapsed;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NzMenuComponent.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n        function (changes) {\n            for (var /** @type {?} */ propName in changes) {\n                if (propName === 'nzMode') {\n                    if (this.isInit) {\n                        this.subMenus.forEach(function (submenu) {\n                            submenu.nzOpen = false;\n                            submenu.nzOpenChange.emit(false);\n                        });\n                    }\n                }\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzMenuComponent.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n        function () {\n            this.isInit = true;\n            this._tempMode = this.nzMode;\n            this.updateInlineCollapse();\n        };\n    /** trigger when menu item clicked */\n    /**\n     * trigger when menu item clicked\n     * @return {?}\n     */\n    NzMenuComponent.prototype.clearAllSelected = /**\n     * trigger when menu item clicked\n     * @return {?}\n     */\n        function () {\n            this.menuItems.forEach(function (menu) { return menu.nzSelected = false; });\n        };\n    /**\n     * @return {?}\n     */\n    NzMenuComponent.prototype.hideSubMenus = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            this._subMenusOpenIndex = [];\n            this.subMenus.forEach(function (submenu, index) {\n                if (submenu.nzOpen) {\n                    _this._subMenusOpenIndex.push(index);\n                }\n                submenu.nzOpen = false;\n            });\n        };\n    /**\n     * @return {?}\n     */\n    NzMenuComponent.prototype.reductionSubMenus = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            this._subMenusOpenIndex.forEach(function (i) { return _this.subMenus[i].nzOpen = true; });\n            this._subMenusOpenIndex = [];\n        };\n    /** api for dropdown or navigation to set isInDropDown status */\n    /**\n     * api for dropdown or navigation to set isInDropDown status\n     * @param {?} value\n     * @return {?}\n     */\n    NzMenuComponent.prototype.setDropDown = /**\n     * api for dropdown or navigation to set isInDropDown status\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            var _this = this;\n            setTimeout(function (_) {\n                _this.isInDropDown = value;\n                _this.menuItems.forEach(function (menu) { return menu.isInDropDown = value; });\n                _this.subMenus.forEach(function (subMenu) { return subMenu.isInDropDown = value; });\n            });\n        };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzMenuComponent.prototype.setHasSubMenu = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            var _this = this;\n            setTimeout(function (_) {\n                _this.hasSubMenu = value;\n            });\n        };\n    return NzMenuComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzSubMenuComponent = /*@__PURE__*/ (function () {\n    function NzSubMenuComponent(nzMenuComponent, cd) {\n        this.nzMenuComponent = nzMenuComponent;\n        this.cd = cd;\n        this._open = false;\n        this.isInDropDown = false;\n        this.level = 1;\n        this._$mouseSubject = new Subject$1();\n        this.nzOpenChange = new EventEmitter();\n        this.nzMenuComponent.setHasSubMenu(true);\n        this.nzMenuComponent.subMenus.push(this);\n    }\n    Object.defineProperty(NzSubMenuComponent.prototype, \"nzOpen\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._open;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._open = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSubMenuComponent.prototype, \"subItemSelected\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            var _this = this;\n            return !!this.nzMenuComponent.menuItems.find(function (e) { return e.nzSelected && e.nzSubMenuComponent === _this; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSubMenuComponent.prototype, \"submenuSelected\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            var _this = this;\n            return !!this.subMenus._results.find(function (e) { return e !== _this && e.subItemSelected; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSubMenuComponent.prototype, \"expandState\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            if (this.nzOpen && this.nzMenuComponent.nzMode === 'inline') {\n                return 'expand';\n            }\n            else if (this.nzOpen && this.nzMenuComponent.nzMode !== 'inline') {\n                return 'fade';\n            }\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzSubMenuComponent.prototype.clickSubMenuTitle = /**\n     * @return {?}\n     */\n        function () {\n            if ((this.nzMenuComponent.nzMode === 'inline') && (!this.isInDropDown)) {\n                this.nzOpen = !this.nzOpen;\n                this.nzOpenChange.emit(this.nzOpen);\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzSubMenuComponent.prototype.clickSubMenuDropDown = /**\n     * @return {?}\n     */\n        function () {\n            if (this.isInDropDown || (this.nzMenuComponent.nzMode === 'vertical') || (this.nzMenuComponent.nzMode === 'horizontal')) {\n                this._$mouseSubject.next(false);\n                this.nzOpen = false;\n                this.nzOpenChange.emit(this.nzOpen);\n            }\n        };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NzSubMenuComponent.prototype.onMouseEnterEvent = /**\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            if ((this.nzMenuComponent.nzMode === 'horizontal') || (this.nzMenuComponent.nzMode === 'vertical') || this.isInDropDown) {\n                this._$mouseSubject.next(true);\n            }\n        };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NzSubMenuComponent.prototype.onMouseLeaveEvent = /**\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            if ((this.nzMenuComponent.nzMode === 'horizontal') || (this.nzMenuComponent.nzMode === 'vertical') || this.isInDropDown) {\n                this._$mouseSubject.next(false);\n            }\n        };\n    Object.defineProperty(NzSubMenuComponent.prototype, \"setDropDownSubmenuClass\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.isInDropDown;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSubMenuComponent.prototype, \"setMenuSubmenuOpenClass\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return (!this.isInDropDown) && (this.nzOpen);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSubMenuComponent.prototype, \"setDropDownVerticalClass\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.isInDropDown && (this.nzMenuComponent.nzMode === 'vertical');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSubMenuComponent.prototype, \"setDropDownHorizontalClass\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.isInDropDown && (this.nzMenuComponent.nzMode === 'horizontal');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSubMenuComponent.prototype, \"setMenuSubmenuClass\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return !this.isInDropDown;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSubMenuComponent.prototype, \"setMenuSubmenuSelectedClass\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.submenuSelected || this.subItemSelected;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSubMenuComponent.prototype, \"setMenuVerticalClass\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return (!this.isInDropDown) && (this.nzMenuComponent.nzMode === 'vertical');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSubMenuComponent.prototype, \"setMenuHorizontalClass\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return (!this.isInDropDown) && (this.nzMenuComponent.nzMode === 'horizontal');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSubMenuComponent.prototype, \"setMenuInlineClass\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return (!this.isInDropDown) && (this.nzMenuComponent.nzMode === 'inline');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzSubMenuComponent.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            this.isInDropDown = this.nzMenuComponent.isInDropDown;\n            if (this.subMenus.length && (this.nzMenuComponent.nzMode === 'inline')) {\n                this.subMenus.filter(function (x) { return x !== _this; }).forEach(function (menu) {\n                    setTimeout(function (_) {\n                        menu.level = _this.level + 1;\n                    });\n                });\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzSubMenuComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            this._$mouseSubject.pipe(debounceTime$1(300)).subscribe(function (data) {\n                if (_this.nzOpen !== data) {\n                    _this.nzOpen = data;\n                    _this.nzOpenChange.emit(_this.nzOpen);\n                }\n            });\n        };\n    /**\n     * @return {?}\n     */\n    NzSubMenuComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            this._$mouseSubject.unsubscribe();\n        };\n    return NzSubMenuComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar PADDING_BASE = 24;\nvar NzMenuItemComponent = /*@__PURE__*/ (function () {\n    function NzMenuItemComponent(_renderer, cd, nzMenuComponent, nzSubMenuComponent, hostElement) {\n        this._renderer = _renderer;\n        this.cd = cd;\n        this.nzMenuComponent = nzMenuComponent;\n        this.nzSubMenuComponent = nzSubMenuComponent;\n        this.hostElement = hostElement;\n        this._disabled = false;\n        this._selected = false;\n        this.level = 0;\n        this.padding = null;\n        this.isInDropDown = false;\n        this.nzMenuComponent.menuItems.push(this);\n        /** store origin padding in padding */\n        if (this.hostElement.nativeElement.style['padding-left']) {\n            this.padding = parseInt(this.hostElement.nativeElement.style['padding-left'], 10);\n        }\n    }\n    Object.defineProperty(NzMenuItemComponent.prototype, \"nzDisable\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._disabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._disabled = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzMenuItemComponent.prototype, \"nzSelected\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._selected;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._selected = toBoolean(value);\n            if (this._selected) {\n                this._renderer.addClass(this.hostElement.nativeElement, this.isInDropDown ? 'ant-dropdown-menu-item-selected' : 'ant-menu-item-selected');\n            }\n            else {\n                this._renderer.removeClass(this.hostElement.nativeElement, this.isInDropDown ? 'ant-dropdown-menu-item-selected' : 'ant-menu-item-selected');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * clear all item selected status except this\n     * @return {?}\n     */\n    NzMenuItemComponent.prototype._onClickItem = /**\n     * clear all item selected status except this\n     * @return {?}\n     */\n        function () {\n            if (this.nzMenuComponent.nzClickActive && (!this.nzDisable)) {\n                this.nzMenuComponent.clearAllSelected();\n                this.nzSelected = true;\n            }\n        };\n    Object.defineProperty(NzMenuItemComponent.prototype, \"_isInDropDownClass\", {\n        get: /**\n         * define host class\n         * @return {?}\n         */ function () {\n            return this.isInDropDown;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzMenuItemComponent.prototype, \"_isNotInDropDownClass\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return !this.isInDropDown;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzMenuItemComponent.prototype, \"setDropDownDisableClass\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.isInDropDown && this.nzDisable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzMenuItemComponent.prototype, \"setMenuDisableClass\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return (!this.isInDropDown) && this.nzDisable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzMenuItemComponent.prototype, \"setPaddingLeft\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            if (this.nzSubMenuComponent) {\n                /** if in sub menu component */\n                if (this.nzSubMenuComponent.nzMenuComponent.nzMode === 'inline') {\n                    /** if host menu's mode is inline add PADDING_BASE * level padding */\n                    return (this.nzSubMenuComponent.level + 1) * PADDING_BASE;\n                }\n                else {\n                    /** return origin padding */\n                    return this.padding;\n                }\n            }\n            else if (this.nzMenuComponent.hasSubMenu && (this.nzMenuComponent.nzMode === 'inline')) {\n                /** not in sub menu component but root menu's mode is inline and contains submenu return default padding*/\n                return PADDING_BASE;\n            }\n            else {\n                return this.padding;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzMenuItemComponent.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            setTimeout(function (_) {\n                _this.isInDropDown = _this.nzMenuComponent.isInDropDown;\n            });\n        };\n    return NzMenuItemComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzMenuModule = /*@__PURE__*/ (function () {\n    function NzMenuModule() {\n    }\n    return NzMenuModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzDropDownDirective = /*@__PURE__*/ (function () {\n    function NzDropDownDirective(elementRef) {\n        this.elementRef = elementRef;\n    }\n    return NzDropDownDirective;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzDropDownComponent = /*@__PURE__*/ (function () {\n    function NzDropDownComponent(_renderer, _changeDetector) {\n        var _this = this;\n        this._renderer = _renderer;\n        this._changeDetector = _changeDetector;\n        this._clickHide = true;\n        this._visible = false;\n        this.hasFilterButton = false;\n        this._triggerWidth = 0;\n        this._placement = 'bottomLeft';\n        this._dropDownPosition = 'bottom';\n        this._positions = DEFAULT_DROPDOWN_POSITIONS.slice();\n        this.nzTrigger = 'hover';\n        this._visibleChange = new Subject$1();\n        this.nzVisibleChange = new EventEmitter();\n        this._onVisibleChange = function (visible) {\n            if (visible) {\n                _this._setTriggerWidth();\n            }\n            if (_this.nzVisible !== visible) {\n                _this.nzVisible = visible;\n                _this.nzVisibleChange.emit(_this.nzVisible);\n            }\n            _this._changeDetector.markForCheck();\n        };\n    }\n    Object.defineProperty(NzDropDownComponent.prototype, \"nzClickHide\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._clickHide;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._clickHide = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzDropDownComponent.prototype, \"nzVisible\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._visible;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._visible = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzDropDownComponent.prototype, \"nzPlacement\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._placement;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._placement = value;\n            this._dropDownPosition = (this.nzPlacement.indexOf('top') !== -1) ? 'top' : 'bottom';\n            this._positions.unshift(/** @type {?} */ (POSITION_MAP[this._placement]));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzDropDownComponent.prototype._onClickEvent = /**\n     * @return {?}\n     */\n        function () {\n            if (this.nzTrigger === 'click') {\n                this._show();\n            }\n        };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NzDropDownComponent.prototype._onMouseEnterEvent = /**\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            if (this.nzTrigger === 'hover') {\n                this._show();\n            }\n        };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NzDropDownComponent.prototype._onMouseLeaveEvent = /**\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            if (this.nzTrigger === 'hover') {\n                this._hide();\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzDropDownComponent.prototype._hide = /**\n     * @return {?}\n     */\n        function () {\n            this._visibleChange.next(false);\n        };\n    /**\n     * @return {?}\n     */\n    NzDropDownComponent.prototype._show = /**\n     * @return {?}\n     */\n        function () {\n            this._visibleChange.next(true);\n        };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    NzDropDownComponent.prototype._onPositionChange = /**\n     * @param {?} position\n     * @return {?}\n     */\n        function (position) {\n            this._dropDownPosition = position.connectionPair.originY;\n        };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NzDropDownComponent.prototype._clickDropDown = /**\n     * @param {?} $event\n     * @return {?}\n     */\n        function ($event) {\n            $event.stopPropagation();\n            if (this.nzClickHide) {\n                this._hide();\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzDropDownComponent.prototype._setTriggerWidth = /**\n     * @return {?}\n     */\n        function () {\n            this._triggerWidth = this._nzOrigin.elementRef.nativeElement.getBoundingClientRect().width;\n            /** should remove after https://github.com/angular/material2/pull/8765 merged **/\n            if (this._cdkOverlay && this._cdkOverlay.overlayRef) {\n                this._cdkOverlay.overlayRef.updateSize({\n                    minWidth: this._triggerWidth\n                });\n            }\n        };\n    /**\n     * @param {?} observable$\n     * @return {?}\n     */\n    NzDropDownComponent.prototype._startSubscribe = /**\n     * @param {?} observable$\n     * @return {?}\n     */\n        function (observable$) {\n            this._subscription = observable$.pipe(debounceTime$1(50))\n                .subscribe(this._onVisibleChange);\n        };\n    /**\n     * @return {?}\n     */\n    NzDropDownComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            if (this._nzMenu) {\n                this._nzMenu.setDropDown(true);\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzDropDownComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            if (this._subscription) {\n                this._subscription.unsubscribe();\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzDropDownComponent.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ mouse$;\n            if (this.nzTrigger === 'hover') {\n                var /** @type {?} */ mouseEnterOrigin$ = fromEvent$1(this._nzOrigin.elementRef.nativeElement, 'mouseenter').pipe(mapTo$1(true));\n                var /** @type {?} */ mouseLeaveOrigin$ = fromEvent$1(this._nzOrigin.elementRef.nativeElement, 'mouseleave').pipe(mapTo$1(false));\n                mouse$ = mouseEnterOrigin$.pipe(merge$1(mouseLeaveOrigin$));\n            }\n            if (this.nzTrigger === 'click') {\n                mouse$ = fromEvent$1(this._nzOrigin.elementRef.nativeElement, 'click').pipe(mapTo$1(true));\n                this._renderer.listen(this._nzOrigin.elementRef.nativeElement, 'click', function (e) {\n                    e.preventDefault();\n                });\n            }\n            var /** @type {?} */ observable$ = mouse$.pipe(merge$1(this._visibleChange));\n            this._startSubscribe(observable$);\n        };\n    Object.defineProperty(NzDropDownComponent.prototype, \"_hasBackdrop\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.nzTrigger === 'click';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return NzDropDownComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzDropDownButtonComponent = /*@__PURE__*/ (function (_super) {\n    __extends(NzDropDownButtonComponent, _super);\n    function NzDropDownButtonComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._disabled = false;\n        _this.nzSize = 'default';\n        _this.nzType = 'default';\n        _this.nzClick = new EventEmitter();\n        _this._onVisibleChange = function (visible) {\n            if (_this.nzDisabled) {\n                return;\n            }\n            if (visible) {\n                _this._setTriggerWidth();\n            }\n            if (_this.nzVisible !== visible) {\n                _this.nzVisible = visible;\n                _this.nzVisibleChange.emit(_this.nzVisible);\n            }\n            _this._changeDetector.markForCheck();\n        };\n        return _this;\n    }\n    Object.defineProperty(NzDropDownButtonComponent.prototype, \"nzDisabled\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._disabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._disabled = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** rewrite afterViewInit hook */\n    /**\n     * rewrite afterViewInit hook\n     * @return {?}\n     */\n    NzDropDownButtonComponent.prototype.ngAfterViewInit = /**\n     * rewrite afterViewInit hook\n     * @return {?}\n     */\n        function () {\n            this._startSubscribe(this._visibleChange);\n        };\n    return NzDropDownButtonComponent;\n}(NzDropDownComponent));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzDropDownModule = /*@__PURE__*/ (function () {\n    function NzDropDownModule() {\n    }\n    return NzDropDownModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzFormControlComponent = /*@__PURE__*/ (function () {\n    function NzFormControlComponent() {\n        this._hasFeedback = false;\n    }\n    Object.defineProperty(NzFormControlComponent.prototype, \"nzHasFeedback\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._hasFeedback;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._hasFeedback = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzFormControlComponent.prototype, \"nzValidateStatus\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._validateStatus || this.ngControl;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._validateStatus = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzFormControlComponent.prototype, \"isWarning\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.nzValidateStatus === 'warning' || this.nzValidateStatus && ((this.nzValidateStatus)).dirty && ((this.nzValidateStatus)).hasError && ((this.nzValidateStatus)).hasError('warning');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzFormControlComponent.prototype, \"isValidate\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.nzValidateStatus === 'validating' || this.nzValidateStatus === 'pending' || this.nzValidateStatus && ((this.nzValidateStatus)).dirty && ((this.nzValidateStatus)).pending;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzFormControlComponent.prototype, \"isError\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.nzValidateStatus === 'error' || this.nzValidateStatus && ((this.nzValidateStatus)).dirty && ((this.nzValidateStatus)).errors && ((this.nzValidateStatus)).hasError && !((this.nzValidateStatus)).hasError('warning');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzFormControlComponent.prototype, \"isSuccess\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.nzValidateStatus === 'success' || this.nzValidateStatus && ((this.nzValidateStatus)).dirty && ((this.nzValidateStatus)).valid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzFormControlComponent.prototype, \"hasFeedBack\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.nzHasFeedback;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return NzFormControlComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzFormItemDirective = /*@__PURE__*/ (function () {\n    function NzFormItemDirective() {\n        this._withHelp = 0;\n    }\n    /**\n     * @return {?}\n     */\n    NzFormItemDirective.prototype.enableHelp = /**\n     * @return {?}\n     */\n        function () {\n            this._withHelp++;\n        };\n    /**\n     * @return {?}\n     */\n    NzFormItemDirective.prototype.disableHelp = /**\n     * @return {?}\n     */\n        function () {\n            this._withHelp--;\n        };\n    Object.defineProperty(NzFormItemDirective.prototype, \"withHelp\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._withHelp > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return NzFormItemDirective;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzFormExplainComponent = /*@__PURE__*/ (function () {\n    function NzFormExplainComponent(_nzFormItem) {\n        this._nzFormItem = _nzFormItem;\n    }\n    /**\n     * @return {?}\n     */\n    NzFormExplainComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            this._nzFormItem.disableHelp();\n        };\n    /**\n     * @return {?}\n     */\n    NzFormExplainComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            this._nzFormItem.enableHelp();\n        };\n    return NzFormExplainComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzFormExtraDirective = /*@__PURE__*/ (function () {\n    function NzFormExtraDirective() {\n    }\n    return NzFormExtraDirective;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzFormItemRequiredDirective = /*@__PURE__*/ (function () {\n    function NzFormItemRequiredDirective() {\n        this._required = true;\n    }\n    Object.defineProperty(NzFormItemRequiredDirective.prototype, \"nzRequired\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._required;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._required = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return NzFormItemRequiredDirective;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzFormLabelDirective = /*@__PURE__*/ (function () {\n    function NzFormLabelDirective() {\n    }\n    return NzFormLabelDirective;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzFormSplitDirective = /*@__PURE__*/ (function () {\n    function NzFormSplitDirective() {\n    }\n    return NzFormSplitDirective;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzFormTextDirective = /*@__PURE__*/ (function () {\n    function NzFormTextDirective() {\n    }\n    return NzFormTextDirective;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzFormComponent = /*@__PURE__*/ (function () {\n    function NzFormComponent(_elementRef, _renderer) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._classList = [];\n        this._prefixCls = 'ant-form';\n        /**\n         * @deprecated Use `nzLayout` instead.\n         */\n        this.nzType = 'horizontal';\n        this._el = this._elementRef.nativeElement;\n    }\n    Object.defineProperty(NzFormComponent.prototype, \"nzLayout\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this.nzType = value;\n            this.setClassMap();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzFormComponent.prototype.setClassMap = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            this._classList.forEach(function (_className) {\n                _this._renderer.removeClass(_this._el, _className);\n            });\n            this._classList = [\n                this.nzType && this._prefixCls + \"-\" + this.nzType\n            ].filter(function (item) {\n                return !!item;\n            });\n            this._classList.forEach(function (_className) {\n                _this._renderer.addClass(_this._el, _className);\n            });\n        };\n    /**\n     * @return {?}\n     */\n    NzFormComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            this.setClassMap();\n        };\n    return NzFormComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzFormModule = /*@__PURE__*/ (function () {\n    function NzFormModule() {\n    }\n    return NzFormModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isNotNil(value) {\n    return (typeof (value) !== 'undefined') && value !== null;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzRowComponent = /*@__PURE__*/ (function () {\n    function NzRowComponent(_elementRef, _renderer) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._classList = [];\n        this._prefixCls = 'ant-row';\n        this._align = 'top';\n        this._justify = 'start';\n        this._el = this._elementRef.nativeElement;\n    }\n    Object.defineProperty(NzRowComponent.prototype, \"nzType\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._type;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._type = value;\n            this.setClassMap();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzRowComponent.prototype, \"nzAlign\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._align;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._align = value;\n            this.setClassMap();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzRowComponent.prototype, \"nzJustify\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._justify;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._justify = value;\n            this.setClassMap();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzRowComponent.prototype, \"nzGutter\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._gutter;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._gutter = value;\n            this.setStyle();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzRowComponent.prototype.setStyle = /**\n     * @return {?}\n     */\n        function () {\n            this._renderer.setStyle(this._el, 'margin-left', \"-\" + this._gutter / 2 + \"px\");\n            this._renderer.setStyle(this._el, 'margin-right', \"-\" + this._gutter / 2 + \"px\");\n        };\n    /** temp solution since no method add classMap to host https://github.com/angular/angular/issues/7289*/\n    /**\n     * temp solution since no method add classMap to host https://github.com/angular/angular/issues/7289\n     * @return {?}\n     */\n    NzRowComponent.prototype.setClassMap = /**\n     * temp solution since no method add classMap to host https://github.com/angular/angular/issues/7289\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            this._classList.forEach(function (_className) {\n                _this._renderer.removeClass(_this._el, _className);\n            });\n            this._classList = [\n                (!this.nzType) && this._prefixCls,\n                this.nzType && this._prefixCls + \"-\" + this.nzType,\n                this.nzType && this.nzAlign && this._prefixCls + \"-\" + this.nzType + \"-\" + this.nzAlign,\n                this.nzType && this.nzJustify && this._prefixCls + \"-\" + this.nzType + \"-\" + this.nzJustify\n            ].filter(function (item) {\n                return !!item;\n            });\n            this._classList.forEach(function (_className) {\n                _this._renderer.addClass(_this._el, _className);\n            });\n        };\n    /**\n     * @return {?}\n     */\n    NzRowComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            this.setClassMap();\n        };\n    return NzRowComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzColComponent = /*@__PURE__*/ (function () {\n    function NzColComponent(_elementRef, _nzRow, _renderer) {\n        this._elementRef = _elementRef;\n        this._nzRow = _nzRow;\n        this._renderer = _renderer;\n        this._classList = [];\n        this._prefixCls = 'ant-col';\n        this._el = this._elementRef.nativeElement;\n    }\n    Object.defineProperty(NzColComponent.prototype, \"paddingLeft\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._nzRow && this._nzRow._gutter / 2;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzColComponent.prototype, \"paddingRight\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._nzRow && this._nzRow._gutter / 2;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** temp solution since no method add classMap to host https://github.com/angular/angular/issues/7289*/\n    /**\n     * temp solution since no method add classMap to host https://github.com/angular/angular/issues/7289\n     * @return {?}\n     */\n    NzColComponent.prototype.setClassMap = /**\n     * temp solution since no method add classMap to host https://github.com/angular/angular/issues/7289\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            this._classList.forEach(function (_className) {\n                _this._renderer.removeClass(_this._el, _className);\n            });\n            this._classList = [\n                isNotNil(this.nzSpan) && this._prefixCls + \"-\" + this.nzSpan,\n                isNotNil(this.nzOrder) && this._prefixCls + \"-order-\" + this.nzOrder,\n                isNotNil(this.nzOffset) && this._prefixCls + \"-offset-\" + this.nzOffset,\n                isNotNil(this.nzPull) && this._prefixCls + \"-pull-\" + this.nzPull,\n                isNotNil(this.nzPush) && this._prefixCls + \"-push-\" + this.nzPush\n            ].concat(this.generateClass());\n            this._classList = this._classList.filter(function (item) {\n                return !!item;\n            });\n            this._classList.forEach(function (_className) {\n                _this._renderer.addClass(_this._el, _className);\n            });\n        };\n    /**\n     * @return {?}\n     */\n    NzColComponent.prototype.generateClass = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            var /** @type {?} */ listOfSizeInputName = ['nzXs', 'nzSm', 'nzMd', 'nzLg', 'nzXl'];\n            var /** @type {?} */ listOfClassName = [];\n            listOfSizeInputName.forEach(function (name) {\n                var /** @type {?} */ sizeName = name.replace('nz', '').toLowerCase();\n                if (isNotNil(_this[name])) {\n                    if ((typeof (_this[name]) === 'number') || (typeof (_this[name]) === 'string')) {\n                        listOfClassName.push(_this._prefixCls + \"-\" + sizeName + \"-\" + _this[name]);\n                    }\n                    else {\n                        listOfClassName.push(_this[name] && isNotNil(_this[name].span) && _this._prefixCls + \"-\" + sizeName + \"-\" + _this[name].span);\n                        listOfClassName.push(_this[name] && isNotNil(_this[name].pull) && _this._prefixCls + \"-\" + sizeName + \"-pull-\" + _this[name].pull);\n                        listOfClassName.push(_this[name] && isNotNil(_this[name].push) && _this._prefixCls + \"-\" + sizeName + \"-push-\" + _this[name].push);\n                        listOfClassName.push(_this[name] && isNotNil(_this[name].offset) && _this._prefixCls + \"-\" + sizeName + \"-offset-\" + _this[name].offset);\n                        listOfClassName.push(_this[name] && isNotNil(_this[name].order) && _this._prefixCls + \"-\" + sizeName + \"-order-\" + _this[name].order);\n                    }\n                }\n            });\n            return listOfClassName;\n        };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NzColComponent.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n        function (changes) {\n            this.setClassMap();\n        };\n    /**\n     * @return {?}\n     */\n    NzColComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            this.setClassMap();\n        };\n    return NzColComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzColDirective = /*@__PURE__*/ (function (_super) {\n    __extends(NzColDirective, _super);\n    function NzColDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return NzColDirective;\n}(NzColComponent));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzGridModule = /*@__PURE__*/ (function () {\n    function NzGridModule() {\n    }\n    return NzGridModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzInputNumberComponent = /*@__PURE__*/ (function () {\n    function NzInputNumberComponent(_elementRef, _renderer) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._disabled = false;\n        this._size = 'default';\n        this._prefixCls = 'ant-input-number';\n        this._step = 1;\n        this._precisionStep = 0;\n        this._precisionFactor = 1;\n        this._disabledUp = false;\n        this._disabledDown = false;\n        this._focused = false;\n        this._mouseInside = false;\n        this._allowClear = false;\n        // ngModel Access\n        this.onChange = function () { return null; };\n        this.onTouched = function () { return null; };\n        this.nzPlaceHolder = '';\n        this.nzMin = -Infinity;\n        this.nzMax = Infinity;\n        this.nzFormatter = function (value) { return value; };\n        this.nzParser = function (value) { return value; };\n        // TODO: should reconsider the payload\n        this.nzBlur = new EventEmitter();\n        this.nzFocus = new EventEmitter();\n        this._el = this._elementRef.nativeElement;\n        this._renderer.addClass(this._el, \"\" + this._prefixCls);\n    }\n    Object.defineProperty(NzInputNumberComponent.prototype, \"nzDisabled\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._disabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._disabled = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzInputNumberComponent.prototype, \"nzAllowClear\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._allowClear;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._allowClear = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzInputNumberComponent.prototype, \"nzSize\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._size;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._renderer.removeClass(this._el, this._prefixCls + \"-\" + this._size);\n            this._size = { large: 'lg', small: 'sm' }[value];\n            this._renderer.addClass(this._el, this._prefixCls + \"-\" + this._size);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzInputNumberComponent.prototype, \"nzStep\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._step;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._step = value;\n            var /** @type {?} */ stepString = value.toString();\n            if (stepString.indexOf('e-') >= 0) {\n                this._precisionStep = parseInt(stepString.slice(stepString.indexOf('e-')), 10);\n            }\n            if (stepString.indexOf('.') >= 0) {\n                this._precisionStep = stepString.length - stepString.indexOf('.') - 1;\n            }\n            this._precisionFactor = Math.pow(10, this._precisionStep);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NzInputNumberComponent.prototype._numberUp = /**\n     * @param {?} $event\n     * @return {?}\n     */\n        function ($event) {\n            $event.preventDefault();\n            $event.stopPropagation();\n            this._inputNumber.nativeElement.focus();\n            if (this.nzValue === undefined) {\n                this.nzValue = this.nzMin || 0;\n            }\n            if (!this._disabledUp) {\n                this.nzValue = this.toPrecisionAsStep((this._precisionFactor * this.nzValue + this._precisionFactor * this.nzStep) / this._precisionFactor);\n            }\n        };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NzInputNumberComponent.prototype._numberDown = /**\n     * @param {?} $event\n     * @return {?}\n     */\n        function ($event) {\n            $event.preventDefault();\n            $event.stopPropagation();\n            this._inputNumber.nativeElement.focus();\n            if (this.nzValue === undefined) {\n                this.nzValue = this.nzMin || 0;\n            }\n            if (!this._disabledDown) {\n                this.nzValue = this.toPrecisionAsStep((this._precisionFactor * this.nzValue - this._precisionFactor * this.nzStep) / this._precisionFactor);\n            }\n        };\n    Object.defineProperty(NzInputNumberComponent.prototype, \"nzValue\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._value;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._updateValue(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NzInputNumberComponent.prototype._emitBlur = /**\n     * @param {?} $event\n     * @return {?}\n     */\n        function ($event) {\n            // avoid unnecessary events\n            if (this._focused && !this._mouseInside) {\n                this._checkValue();\n                this._focused = false;\n                this.nzBlur.emit($event);\n            }\n            this.onTouched();\n        };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NzInputNumberComponent.prototype._emitFocus = /**\n     * @param {?} $event\n     * @return {?}\n     */\n        function ($event) {\n            // avoid unnecessary events\n            if (!this._focused) {\n                this._focused = true;\n                this.nzFocus.emit($event);\n            }\n        };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NzInputNumberComponent.prototype._emitKeyDown = /**\n     * @param {?} $event\n     * @return {?}\n     */\n        function ($event) {\n            if ($event.keyCode === TAB && this._focused) {\n                this._checkValue();\n                this._focused = false;\n                this.nzBlur.emit($event);\n            }\n        };\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    NzInputNumberComponent.prototype._isEmpty = /**\n     * @param {?=} value\n     * @return {?}\n     */\n        function (value) {\n            return value === undefined\n                || value === null\n                || (typeof value === 'string' && this._displayValue.trim() === '')\n                || (typeof value === 'string' && this.nzFormatter('') === value);\n        };\n    /**\n     * @return {?}\n     */\n    NzInputNumberComponent.prototype._checkValue = /**\n     * @return {?}\n     */\n        function () {\n            if (this.nzAllowClear && this._isEmpty(this._displayValue)) {\n                this.nzValue = undefined;\n                return;\n            }\n            var /** @type {?} */ numberValue = +this.nzParser(this._displayValue);\n            if (this._isNumber(numberValue)) {\n                this.nzValue = numberValue;\n            }\n            else {\n                this._displayValue = this.nzFormatter(this._value);\n                this._inputNumber.nativeElement.value = this.nzFormatter(this._value);\n            }\n        };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzInputNumberComponent.prototype._getBoundValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            if (this.nzAllowClear && (value === undefined)) {\n                return value;\n            }\n            else if (value > this.nzMax) {\n                return this.nzMax;\n            }\n            else if (value < this.nzMin) {\n                return this.nzMin;\n            }\n            else {\n                return value;\n            }\n        };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzInputNumberComponent.prototype._isNumber = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            return !isNaN(value) && isFinite(value);\n        };\n    // TODO: normalize value type on @Input\n    /**\n     * @param {?} num\n     * @return {?}\n     */\n    NzInputNumberComponent.prototype.toPrecisionAsStep = /**\n     * @param {?} num\n     * @return {?}\n     */\n        function (num) {\n            var /** @type {?} */ input = (num);\n            if (isNaN(num) || input === '') {\n                return num;\n            }\n            return Number(Number(num).toFixed(this._precisionStep));\n        };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzInputNumberComponent.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            this._updateValue(value, false);\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NzInputNumberComponent.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onChange = fn;\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NzInputNumberComponent.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onTouched = fn;\n        };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NzInputNumberComponent.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n        function (isDisabled) {\n            this.nzDisabled = isDisabled;\n        };\n    /**\n     * @param {?} value\n     * @param {?=} emitChange\n     * @return {?}\n     */\n    NzInputNumberComponent.prototype._updateValue = /**\n     * @param {?} value\n     * @param {?=} emitChange\n     * @return {?}\n     */\n        function (value, emitChange) {\n            if (emitChange === void 0) {\n                emitChange = true;\n            }\n            var /** @type {?} */ cacheValue = this._value;\n            this._value = this._getBoundValue(value);\n            this._displayValue = this.nzFormatter(this._isNumber(this._value) ? this._value : '');\n            this._inputNumber.nativeElement.value = this._displayValue;\n            if (emitChange && (value !== cacheValue)) {\n                this.onChange(this._value);\n            }\n            this._disabledUp = (this.nzValue !== undefined) && !((this.nzValue + this.nzStep) <= this.nzMax);\n            this._disabledDown = (this.nzValue !== undefined) && !((this.nzValue - this.nzStep) >= this.nzMin);\n        };\n    return NzInputNumberComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzInputNumberModule = /*@__PURE__*/ (function () {\n    function NzInputNumberModule() {\n    }\n    return NzInputNumberModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzContentComponent = /*@__PURE__*/ (function () {\n    function NzContentComponent() {\n    }\n    return NzContentComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzFooterComponent = /*@__PURE__*/ (function () {\n    function NzFooterComponent() {\n    }\n    return NzFooterComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzHeaderComponent = /*@__PURE__*/ (function () {\n    function NzHeaderComponent() {\n    }\n    return NzHeaderComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzLayoutComponent = /*@__PURE__*/ (function () {\n    function NzLayoutComponent() {\n        this.hasSider = false;\n    }\n    return NzLayoutComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzSiderComponent = /*@__PURE__*/ (function () {\n    function NzSiderComponent(nzLayoutComponent) {\n        this.nzLayoutComponent = nzLayoutComponent;\n        this._collapsed = false;\n        this._collapsible = false;\n        this._trigger = true;\n        this._dimensionMap = {\n            xl: '1600px',\n            lg: '1200px',\n            md: '992px',\n            sm: '768px',\n            xs: '480px',\n        };\n        this._below = false;\n        this.nzWidth = '200';\n        this.nzCollapsedWidth = 64;\n        this.nzCollapsedChange = new EventEmitter();\n        if (this.nzLayoutComponent) {\n            this.nzLayoutComponent.hasSider = true;\n        }\n        if (typeof window !== 'undefined') {\n            var /** @type {?} */ matchMediaPolyfill = function (mediaQuery) {\n                return {\n                    media: mediaQuery,\n                    matches: false,\n                    addListener: /**\n                     * @return {?}\n                     */ function () { },\n                    removeListener: /**\n                     * @return {?}\n                     */ function () { },\n                };\n            };\n            window.matchMedia = window.matchMedia || matchMediaPolyfill;\n        }\n    }\n    Object.defineProperty(NzSiderComponent.prototype, \"nzTrigger\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._trigger;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._trigger = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSiderComponent.prototype, \"nzCollapsible\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._collapsible;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._collapsible = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSiderComponent.prototype, \"nzCollapsed\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._collapsed;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._collapsed = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSiderComponent.prototype, \"setZeroClass\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.nzCollapsed && (this.nzCollapsedWidth === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSiderComponent.prototype, \"setFlex\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            if (this.nzCollapsed) {\n                return \"0 0 \" + this.nzCollapsedWidth + \"px\";\n            }\n            else {\n                return \"0 0 \" + this.nzWidth + \"px\";\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSiderComponent.prototype, \"setWidth\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            if (this.nzCollapsed) {\n                return this.nzCollapsedWidth;\n            }\n            else {\n                return this.nzWidth;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NzSiderComponent.prototype.onWindowResize = /**\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            if (this.nzBreakpoint) {\n                var /** @type {?} */ matchBelow = window.matchMedia(\"(max-width: \" + this._dimensionMap[this.nzBreakpoint] + \")\").matches;\n                this._below = matchBelow;\n                this.nzCollapsed = matchBelow;\n                this.nzCollapsedChange.emit(matchBelow);\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzSiderComponent.prototype.toggleCollapse = /**\n     * @return {?}\n     */\n        function () {\n            this.nzCollapsed = !this.nzCollapsed;\n            this.nzCollapsedChange.emit(this.nzCollapsed);\n        };\n    Object.defineProperty(NzSiderComponent.prototype, \"_isZeroTrigger\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.nzCollapsible && this.nzTrigger && (this.nzCollapsedWidth === 0) && ((this.nzBreakpoint && this._below) || (!this.nzBreakpoint));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSiderComponent.prototype, \"_isSiderTrgger\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.nzCollapsible && this.nzTrigger && (this.nzCollapsedWidth !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return NzSiderComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzLayoutModule = /*@__PURE__*/ (function () {\n    function NzLayoutModule() {\n    }\n    return NzLayoutModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\nvar NZ_MESSAGE_DEFAULT_CONFIG = new InjectionToken('NZ_MESSAGE_DEFAULT_CONFIG');\nvar NZ_MESSAGE_CONFIG = new InjectionToken('NZ_MESSAGE_CONFIG');\nvar NZ_MESSAGE_DEFAULT_CONFIG_PROVIDER = {\n    provide: NZ_MESSAGE_DEFAULT_CONFIG,\n    useValue: {\n        nzDuration: 1500,\n        nzAnimate: true,\n        nzPauseOnHover: true,\n        nzMaxStack: 7,\n    }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzMessageContainerComponent = /*@__PURE__*/ (function () {\n    function NzMessageContainerComponent(defaultConfig, config) {\n        this.messages = [];\n        this.config = __assign({}, defaultConfig, config);\n    }\n    // Create a new message\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    NzMessageContainerComponent.prototype.createMessage = /**\n     * @param {?} message\n     * @return {?}\n     */\n        function (message) {\n            if (this.messages.length >= this.config.nzMaxStack) {\n                this.messages.splice(0, 1);\n            }\n            message.options = this._mergeMessageOptions(message.options);\n            this.messages.push(message);\n        };\n    // Remove a message by messageId\n    /**\n     * @param {?} messageId\n     * @return {?}\n     */\n    NzMessageContainerComponent.prototype.removeMessage = /**\n     * @param {?} messageId\n     * @return {?}\n     */\n        function (messageId) {\n            var _this = this;\n            this.messages.some(function (message, index) {\n                if (message.messageId === messageId) {\n                    _this.messages.splice(index, 1);\n                    return true;\n                }\n            });\n        };\n    // Remove all messages\n    /**\n     * @return {?}\n     */\n    NzMessageContainerComponent.prototype.removeMessageAll = /**\n     * @return {?}\n     */\n        function () {\n            this.messages = [];\n        };\n    // Merge default options and cutom message options\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    NzMessageContainerComponent.prototype._mergeMessageOptions = /**\n     * @param {?} options\n     * @return {?}\n     */\n        function (options) {\n            var /** @type {?} */ defaultOptions = {\n                nzDuration: this.config.nzDuration,\n                nzAnimate: this.config.nzAnimate,\n                nzPauseOnHover: this.config.nzPauseOnHover\n            };\n            return __assign({}, defaultOptions, options);\n        };\n    return NzMessageContainerComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzMessageComponent = /*@__PURE__*/ (function () {\n    function NzMessageComponent(_messageContainer) {\n        this._messageContainer = _messageContainer;\n        this._eraseTimer = null;\n    }\n    /**\n     * @return {?}\n     */\n    NzMessageComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            this._options = this.nzMessage.options;\n            if (this._options.nzAnimate) {\n                this.nzMessage.state = 'enter';\n            }\n            this._autoErase = this._options.nzDuration > 0;\n            if (this._autoErase) {\n                this._initErase();\n                this._startEraseTimeout();\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzMessageComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            if (this._autoErase) {\n                this._clearEraseTimeout();\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzMessageComponent.prototype.onEnter = /**\n     * @return {?}\n     */\n        function () {\n            if (this._autoErase && this._options.nzPauseOnHover) {\n                this._clearEraseTimeout();\n                this._updateTTL();\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzMessageComponent.prototype.onLeave = /**\n     * @return {?}\n     */\n        function () {\n            if (this._autoErase && this._options.nzPauseOnHover) {\n                this._startEraseTimeout();\n            }\n        };\n    // Remove self\n    /**\n     * @return {?}\n     */\n    NzMessageComponent.prototype._destroy = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            if (this._options.nzAnimate) {\n                this.nzMessage.state = 'leave';\n                setTimeout(function () { return _this._messageContainer.removeMessage(_this.nzMessage.messageId); }, 200);\n            }\n            else {\n                this._messageContainer.removeMessage(this.nzMessage.messageId);\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzMessageComponent.prototype._initErase = /**\n     * @return {?}\n     */\n        function () {\n            this._eraseTTL = this._options.nzDuration;\n            this._eraseTimingStart = Date.now();\n        };\n    /**\n     * @return {?}\n     */\n    NzMessageComponent.prototype._updateTTL = /**\n     * @return {?}\n     */\n        function () {\n            if (this._autoErase) {\n                this._eraseTTL -= Date.now() - this._eraseTimingStart;\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzMessageComponent.prototype._startEraseTimeout = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            if (this._eraseTTL > 0) {\n                this._clearEraseTimeout(); // To prevent calling _startEraseTimeout() more times to create more timer\n                this._eraseTimer = window.setTimeout(function () { return _this._destroy(); }, this._eraseTTL);\n                this._eraseTimingStart = Date.now();\n            }\n            else {\n                this._destroy();\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzMessageComponent.prototype._clearEraseTimeout = /**\n     * @return {?}\n     */\n        function () {\n            if (this._eraseTimer !== null) {\n                window.clearTimeout(this._eraseTimer);\n                this._eraseTimer = null;\n            }\n        };\n    return NzMessageComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar providers = [\n    NZ_MESSAGE_DEFAULT_CONFIG_PROVIDER\n];\nvar NzMessageModule = /*@__PURE__*/ (function () {\n    function NzMessageModule() {\n    }\n    return NzMessageModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\nvar NzGlobalMonitorService = /*@__PURE__*/ (function () {\n    function NzGlobalMonitorService() {\n        this.counter = 0;\n        this.lastClickPos = {\n            x: 0,\n            y: 0\n        };\n        this._navItemSource = new EventEmitter();\n        this._observeGlobalEvents();\n    }\n    /**\n     * @return {?}\n     */\n    NzGlobalMonitorService.prototype.getGlobalCount = /**\n     * @return {?}\n     */\n        function () {\n            return ++this.counter;\n        };\n    /**\n     * @param {?} status\n     * @return {?}\n     */\n    NzGlobalMonitorService.prototype.setDocumentOverflowHidden = /**\n     * @param {?} status\n     * @return {?}\n     */\n        function (status) {\n            document.body.style.overflow = status ? 'hidden' : '';\n        };\n    /**\n     * @return {?}\n     */\n    NzGlobalMonitorService.prototype._observeGlobalEvents = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            // 监听document的点击事件，记录点击坐标，并抛出 documentClick 事件\n            document.addEventListener('click', function (e) {\n                _this.lastClickPos = {\n                    x: e.clientX,\n                    y: e.clientY\n                };\n                _this._navItemSource.emit('documentClick');\n            });\n        };\n    return NzGlobalMonitorService;\n}());\nvar nzGlobalMonitor = new NzGlobalMonitorService();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzModalSubject = /*@__PURE__*/ (function (_super) {\n    __extends(NzModalSubject, _super);\n    function NzModalSubject() {\n        var _this = _super.call(this) || this;\n        _this.eventsQueue = {};\n        _this.subscribe(function (value) {\n            var /** @type {?} */ eventQueue = _this.eventsQueue[value] || [];\n            eventQueue.forEach(function (cb) {\n                if (cb) {\n                    cb();\n                }\n            });\n        });\n        return _this;\n    }\n    /* tslint:disable-next-line:no-any */\n    /**\n     * @param {?=} type\n     * @return {?}\n     */\n    NzModalSubject.prototype.destroy = /**\n     * @param {?=} type\n     * @return {?}\n     */\n        function (type) {\n            if (type === void 0) {\n                type = 'onCancel';\n            }\n            if (!this.isStopped && !this.closed) {\n                this.next(type);\n            }\n        };\n    /**\n     * @param {?} eventType\n     * @param {?} cb\n     * @return {?}\n     */\n    NzModalSubject.prototype.on = /**\n     * @param {?} eventType\n     * @param {?} cb\n     * @return {?}\n     */\n        function (eventType, cb) {\n            if (this.eventsQueue[eventType]) {\n                this.eventsQueue[eventType].push(cb);\n            }\n            else {\n                this.eventsQueue[eventType] = [cb];\n            }\n        };\n    return NzModalSubject;\n}(Subject$1));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzConfirmComponent = /*@__PURE__*/ (function () {\n    function NzConfirmComponent(subject, _locale) {\n        this.subject = subject;\n        this._locale = _locale;\n        this._maskClosable = true;\n        this._confirmLoading = false;\n        this._visible = false;\n        this._prefixCls = 'ant-modal';\n        this._prefixConfirmCls = 'ant-confirm';\n        this._width = '416px';\n        this._zIndex = 1000;\n        this._iconTypeCls = 'anticon anticon-question-circle';\n        this._title = '';\n        this._content = '';\n        this._okText = this._locale.translate('Modal.understood');\n        this._cancelText = '';\n        this._animationStatus = '';\n        this._customClass = '';\n        this._typeCls = this._prefixConfirmCls + \"-confirm\";\n    }\n    Object.defineProperty(NzConfirmComponent.prototype, \"nzVisible\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._visible;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            var _this = this;\n            var /** @type {?} */ visible = toBoolean(value);\n            if (this._visible === visible) {\n                return;\n            }\n            if (visible) {\n                this.anmiateFade('enter');\n                this.subject.next('onShow');\n                // 每次触发点击事件的时候，通过全局监听的类，记录下点击的位置，计算动画的origin\n                setTimeout(function () {\n                    _this.setStyles({\n                        x: nzGlobalMonitor.lastClickPos.x || 0,\n                        y: nzGlobalMonitor.lastClickPos.y || 0\n                    });\n                }, 10);\n            }\n            else {\n                this.anmiateFade('leave');\n                this.subject.next('onHide');\n            }\n            this._visible = visible;\n            // 设置全局的overflow样式\n            nzGlobalMonitor.setDocumentOverflowHidden(visible);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzConfirmComponent.prototype, \"nzWidth\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._width = typeof value === 'number' ? value + 'px' : value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzConfirmComponent.prototype, \"nzClass\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._customClass = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzConfirmComponent.prototype, \"nzZIndex\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._zIndex = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzConfirmComponent.prototype, \"nzTitle\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            // TODO: should guard for string instead, all types are theoretically structural\n            if (value instanceof TemplateRef) {\n                this._titleTpl = value;\n            }\n            else {\n                this._title = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzConfirmComponent.prototype, \"nzContent\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (value instanceof TemplateRef) {\n                this._contentTpl = value;\n            }\n            else {\n                this._content = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzConfirmComponent.prototype, \"nzMaskClosable\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._maskClosable = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzConfirmComponent.prototype, \"nzOkText\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._okText = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzConfirmComponent.prototype, \"nzCancelText\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._cancelText = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzConfirmComponent.prototype, \"nzIconType\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (value) {\n                this._iconTypeCls = \"anticon anticon-\" + value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzConfirmComponent.prototype, \"nzConfirmType\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (value) {\n                this._typeCls = this._prefixConfirmCls + \"-\" + value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzConfirmComponent.prototype, \"nzConfirmLoading\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._confirmLoading = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NzConfirmComponent.prototype.onEsc = /**\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            if (this._maskClosable) {\n                this.subject.next('onCancel');\n            }\n        };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NzConfirmComponent.prototype.onEnter = /**\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            this.subject.next('onOk');\n        };\n    /**\n     * @param {?=} origin\n     * @return {?}\n     */\n    NzConfirmComponent.prototype.setStyles = /**\n     * @param {?=} origin\n     * @return {?}\n     */\n        function (origin) {\n            var /** @type {?} */ el = this.contentEl.nativeElement;\n            var /** @type {?} */ transformOrigin = origin ? origin.x - el.offsetLeft + \"px \" + (origin.y - el.offsetTop) + \"px 0px\" : '';\n            this._bodyStyleMap = {\n                'width': this._width,\n                'transform-origin': transformOrigin\n            };\n        };\n    /**\n     * @return {?}\n     */\n    NzConfirmComponent.prototype.setClassMap = /**\n     * @return {?}\n     */\n        function () {\n            this._maskClassMap = (_a = {},\n                _a[this._prefixCls + \"-mask\"] = true,\n                _a[this._prefixCls + \"-mask-hidden\"] = !this._visible && !this._animationStatus,\n                _a['fade-enter'] = this._animationStatus === 'enter',\n                _a['fade-enter-active'] = this._animationStatus === 'enter',\n                _a['fade-leave'] = this._animationStatus === 'leave',\n                _a['fade-leave-active'] = this._animationStatus === 'leave',\n                _a);\n            this._bodyClassMap = (_b = {},\n                _b[this._prefixCls] = true,\n                _b[this._prefixConfirmCls] = true,\n                _b[this._typeCls] = true,\n                _b['zoom-enter'] = this._animationStatus === 'enter',\n                _b['zoom-enter-active'] = this._animationStatus === 'enter',\n                _b['zoom-leave'] = this._animationStatus === 'leave',\n                _b['zoom-leave-active'] = this._animationStatus === 'leave',\n                _b);\n            var _a, _b;\n        };\n    /**\n     * @param {?} status\n     * @return {?}\n     */\n    NzConfirmComponent.prototype.anmiateFade = /**\n     * @param {?} status\n     * @return {?}\n     */\n        function (status) {\n            var _this = this;\n            this._animationStatus = status;\n            this.setClassMap();\n            setTimeout(function (_) {\n                _this._animationStatus = '';\n                _this.setClassMap();\n                _this.subject.next(status === 'enter' ? 'onShown' : 'onHidden');\n                // modal打开后，默认焦点设置到modal上\n                if (status === 'enter') {\n                    _this.contentEl.nativeElement.parentNode.focus();\n                }\n            }, 200);\n        };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NzConfirmComponent.prototype.closeFromMask = /**\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            if (this._maskClosable && ((e.target)).getAttribute('role') === 'dialog') {\n                this.subject.next('onCancel');\n            }\n        };\n    // 通过createComponent方法创建component时，ngOnInit不会被触发\n    /**\n     * @return {?}\n     */\n    NzConfirmComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            this.setClassMap();\n            this.setStyles();\n        };\n    /**\n     * @return {?}\n     */\n    NzConfirmComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            if (this._visible) {\n                nzGlobalMonitor.setDocumentOverflowHidden(false);\n            }\n            this.subject.next('onDestroy');\n            this.subject.unsubscribe();\n            this.subject = null;\n        };\n    return NzConfirmComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzModalComponent = /*@__PURE__*/ (function () {\n    function NzModalComponent(subject, _vcr, _locale) {\n        this.subject = subject;\n        this._vcr = _vcr;\n        this._locale = _locale;\n        this._confirmLoading = false;\n        this._maskClosable = true;\n        this._footerHide = false;\n        this._closable = true;\n        this._visible = false;\n        this._prefixCls = 'ant-modal';\n        this._width = '520px';\n        this._zIndex = 1000;\n        this._title = '';\n        this._content = '';\n        this._okText = this._locale.translate('Modal.okText');\n        this._cancelText = this._locale.translate('Modal.cancelText');\n        this._style = {};\n        this._wrapClass = this._prefixCls + \"-wrap\";\n        this._customClass = '';\n        this._animationStatus = '';\n        this._componentParams = {};\n        this.modalId = \"nzModal\" + nzGlobalMonitor.getGlobalCount();\n        this.nzVisibleChange = new EventEmitter();\n        this.nzOnOk = new EventEmitter();\n        // TODO: reconsider the payload type\n        this.nzOnCancel = new EventEmitter();\n        this.subject.modalId = this.modalId;\n    }\n    Object.defineProperty(NzModalComponent.prototype, \"nzVisible\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._visible;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            var _this = this;\n            var /** @type {?} */ visible = toBoolean(value);\n            if (this._visible === visible) {\n                return;\n            }\n            if (visible) {\n                this.anmiateFade('enter');\n                this.subject.next('onShow');\n                // 每次触发点击事件的时候，通过全局监听的类，记录下点击的位置，计算动画的origin\n                setTimeout(function () {\n                    _this.setStyles({\n                        x: nzGlobalMonitor.lastClickPos.x || 0,\n                        y: nzGlobalMonitor.lastClickPos.y || 0\n                    });\n                });\n            }\n            else {\n                this.anmiateFade('leave');\n                this.subject.next('onHide');\n            }\n            this._visible = visible;\n            this.nzVisibleChange.emit(this._visible);\n            // 设置全局的overflow样式\n            nzGlobalMonitor.setDocumentOverflowHidden(visible);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzModalComponent.prototype, \"nzConfirmLoading\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._confirmLoading = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzModalComponent.prototype, \"nzClosable\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._closable = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzModalComponent.prototype, \"nzClass\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._customClass = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzModalComponent.prototype, \"nzWidth\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._width = typeof value === 'number' ? value + 'px' : value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzModalComponent.prototype, \"nzZIndex\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._zIndex = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzModalComponent.prototype, \"nzTitle\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            // TODO: should guard for string instead, all types are theoretically structural\n            if (value instanceof TemplateRef) {\n                this._titleTpl = value;\n            }\n            else {\n                this._title = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzModalComponent.prototype, \"nzContent\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (value instanceof ComponentFactory) {\n                // 如果容器对象已存在，则直接渲染，如果不存在，则设置到_bodyComponent，在ngAfterViewInit中执行\n                if (this.bodyEl) {\n                    var /** @type {?} */ compRef = this.bodyEl.createComponent(value, null, this._vcr.injector);\n                    Object.assign(compRef.instance, this._componentParams);\n                }\n                else {\n                    this._bodyComponent = value;\n                }\n            }\n            else if (value instanceof TemplateRef) {\n                this._contentTpl = value;\n            }\n            else {\n                this._content = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzModalComponent.prototype, \"nzFooter\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (value instanceof TemplateRef) {\n                this._footerTpl = value;\n            }\n            else {\n                this._footerHide = !toBoolean(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzModalComponent.prototype, \"nzOkText\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._okText = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzModalComponent.prototype, \"nzCancelText\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._cancelText = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzModalComponent.prototype, \"nzMaskClosable\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._maskClosable = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzModalComponent.prototype, \"nzStyle\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._style = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzModalComponent.prototype, \"nzWrapClassName\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (value) {\n                this._wrapClass = this._prefixCls + \"-wrap \" + value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzModalComponent.prototype, \"nzComponentParams\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._componentParams = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NzModalComponent.prototype.onEsc = /**\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            if (this._maskClosable) {\n                this.clickCancel(e);\n            }\n        };\n    /**\n     * @param {?=} origin\n     * @return {?}\n     */\n    NzModalComponent.prototype.setStyles = /**\n     * @param {?=} origin\n     * @return {?}\n     */\n        function (origin) {\n            var /** @type {?} */ el = this.contentEl.nativeElement;\n            var /** @type {?} */ transformOrigin = origin ? origin.x - el.offsetLeft + \"px \" + (origin.y - el.offsetTop) + \"px 0px\" : '';\n            // TODO: spread on literal has been disallow on latest proposal\n            this._bodyStyleMap = __assign({\n                'width': this._width,\n                'transform-origin': transformOrigin\n            }, this._style);\n        };\n    /**\n     * @return {?}\n     */\n    NzModalComponent.prototype.setClassMap = /**\n     * @return {?}\n     */\n        function () {\n            this._maskClassMap = (_a = {},\n                _a[this._prefixCls + \"-mask\"] = true,\n                _a[this._prefixCls + \"-mask-hidden\"] = !this._visible && !this._animationStatus,\n                _a['fade-enter'] = this._animationStatus === 'enter',\n                _a['fade-enter-active'] = this._animationStatus === 'enter',\n                _a['fade-leave'] = this._animationStatus === 'leave',\n                _a['fade-leave-active'] = this._animationStatus === 'leave',\n                _a);\n            this._bodyClassMap = (_b = {},\n                _b[this._prefixCls] = true,\n                _b['zoom-enter'] = this._animationStatus === 'enter',\n                _b['zoom-enter-active'] = this._animationStatus === 'enter',\n                _b['zoom-leave'] = this._animationStatus === 'leave',\n                _b['zoom-leave-active'] = this._animationStatus === 'leave',\n                _b);\n            var _a, _b;\n        };\n    /**\n     * @param {?} status\n     * @return {?}\n     */\n    NzModalComponent.prototype.anmiateFade = /**\n     * @param {?} status\n     * @return {?}\n     */\n        function (status) {\n            var _this = this;\n            this._animationStatus = status;\n            this.setClassMap();\n            setTimeout(function (_) {\n                _this._animationStatus = '';\n                _this.setClassMap();\n                _this.subject.next(status === 'enter' ? 'onShown' : 'onHidden');\n                // modal打开后，默认焦点设置到modal上\n                if (status === 'enter') {\n                    _this.contentEl.nativeElement.parentNode.focus();\n                }\n            }, 200);\n        };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NzModalComponent.prototype.closeFromMask = /**\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            if (this._maskClosable && ((e.target)).getAttribute('role') === 'dialog') {\n                this.clickCancel(e);\n            }\n        };\n    /**\n     * @param {?} loading\n     * @return {?}\n     */\n    NzModalComponent.prototype.setConfirmLoading = /**\n     * @param {?} loading\n     * @return {?}\n     */\n        function (loading) {\n            this.nzConfirmLoading = loading;\n        };\n    /**\n     * @return {?}\n     */\n    NzModalComponent.prototype.open = /**\n     * @return {?}\n     */\n        function () {\n            this.nzVisible = true;\n        };\n    /**\n     * @return {?}\n     */\n    NzModalComponent.prototype.close = /**\n     * @return {?}\n     */\n        function () {\n            this.nzVisible = false;\n        };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NzModalComponent.prototype.clickOk = /**\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            if (this.nzOnOk) {\n                this.nzOnOk.emit(e);\n            }\n            else {\n                this.nzVisible = false;\n            }\n            this.subject.next('onOk');\n        };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NzModalComponent.prototype.clickCancel = /**\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            this.nzOnCancel.emit(e);\n            this.subject.next('onCancel');\n        };\n    /**\n     * @return {?}\n     */\n    NzModalComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            this.setClassMap();\n            this.setStyles();\n        };\n    /**\n     * @return {?}\n     */\n    NzModalComponent.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n        function () {\n            if (this._bodyComponent) {\n                var /** @type {?} */ compRef = this.bodyEl.createComponent(this._bodyComponent, null, this._vcr.injector);\n                Object.assign(compRef.instance, this._componentParams);\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzModalComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            if (this._visible) {\n                nzGlobalMonitor.setDocumentOverflowHidden(false);\n            }\n            this.subject.next('onDestroy');\n            this.subject.unsubscribe();\n            this.subject = null;\n        };\n    return NzModalComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar BaseOptions = /*@__PURE__*/ (function () {\n    function BaseOptions() {\n        /**\n         * The modal display status\n         */\n        this.visible = false;\n    }\n    return BaseOptions;\n}());\nvar ModalOptions = /*@__PURE__*/ (function (_super) {\n    __extends(ModalOptions, _super);\n    function ModalOptions() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.closable = true;\n        _this.maskClosable = true;\n        return _this;\n    }\n    return ModalOptions;\n}(BaseOptions));\nvar ConfirmOptions = /*@__PURE__*/ (function (_super) {\n    __extends(ConfirmOptions, _super);\n    function ConfirmOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ConfirmOptions;\n}(BaseOptions));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\nvar NzModalService = /*@__PURE__*/ (function () {\n    function NzModalService(_appRef, _cfr, _locale) {\n        this._appRef = _appRef;\n        this._cfr = _cfr;\n        this._locale = _locale;\n        this._modalCompFactory = this._cfr.resolveComponentFactory(NzModalComponent);\n        this._confirmCompFactory = this._cfr.resolveComponentFactory(NzConfirmComponent);\n    }\n    // TODO: add type checking for this method\n    /* tslint:disable-next-line:no-any */\n    /**\n     * @param {?} initialConfig\n     * @param {?=} options\n     * @return {?}\n     */\n    NzModalService.prototype._initConfig = /**\n     * @param {?} initialConfig\n     * @param {?=} options\n     * @return {?}\n     */\n        function (initialConfig, options) {\n            if (options === void 0) {\n                options = /** @type {?} */ ({});\n            }\n            var /** @type {?} */ props = {};\n            var /** @type {?} */ optionalParams = [\n                'componentParams',\n                'visible',\n                'title',\n                'content',\n                'footer',\n                'width',\n                'zIndex',\n                'okText',\n                'cancelText',\n                'style',\n                'class',\n                'onOk',\n                'onCancel',\n                'closable',\n                'maskClosable',\n                'wrapClassName',\n                'iconType',\n                'confirmType',\n                'moduleWithComponentFactories'\n            ];\n            var /** @type {?} */ config = __assign({}, options, initialConfig);\n            optionalParams.forEach(function (key) {\n                if (config[key] !== undefined) {\n                    var /** @type {?} */ modalKey = 'nz' + key.replace(/^\\w{1}/, function (a) {\n                        return a.toLocaleUpperCase();\n                    });\n                    props[modalKey] = config[key];\n                }\n            });\n            var /** @type {?} */ isShowConfirmLoading = !!config['showConfirmLoading'];\n            props['onOk'] = this._getConfirmCb(props['nzOnOk'], isShowConfirmLoading);\n            props['onCancel'] = this._getConfirmCb(props['nzOnCancel']);\n            // 在service模式下，不需要nzOnOk，防止触发this.nzOnOk.emit(e);\n            delete props['nzOnOk'];\n            delete props['nzOnCancel'];\n            return props;\n        };\n    // TODO: add type checking for this method\n    /* tslint:disable-next-line:no-any */\n    /**\n     * @param {?=} fn\n     * @param {?=} isShowConfirmLoading\n     * @return {?}\n     */\n    NzModalService.prototype._getConfirmCb = /**\n     * @param {?=} fn\n     * @param {?=} isShowConfirmLoading\n     * @return {?}\n     */\n        function (fn, isShowConfirmLoading) {\n            if (isShowConfirmLoading === void 0) {\n                isShowConfirmLoading = false;\n            }\n            return function (_close, _instance) {\n                if (isShowConfirmLoading) {\n                    _instance.nzConfirmLoading = true;\n                }\n                if (fn) {\n                    var /** @type {?} */ ret = fn();\n                    if (!ret) {\n                        _close();\n                    }\n                    else if (ret.then) {\n                        ret.then(_close);\n                    }\n                }\n                else {\n                    _close();\n                }\n            };\n        };\n    // TODO: add base class or shared interface for those two component\n    /**\n     * @param {?} props\n     * @param {?} factory\n     * @return {?}\n     */\n    NzModalService.prototype._open = /**\n     * @param {?} props\n     * @param {?} factory\n     * @return {?}\n     */\n        function (props, factory) {\n            // 在body的内部最前插入一个<nz-modal></nz-modal>方便进行ApplicationRef.bootstrap\n            document.body.insertBefore(document.createElement(factory.selector), document.body.firstChild);\n            // document.body.appendChild(document.createElement(factory.selector));\n            var /** @type {?} */ customComponentFactory;\n            var /** @type {?} */ compRef;\n            var /** @type {?} */ instance;\n            var /** @type {?} */ subject;\n            if (props['nzContent'] instanceof Type) {\n                customComponentFactory = this._cfr.resolveComponentFactory(props['nzContent']);\n                // 将编译出来的ngmodule中的用户component的factory作为modal内容存入\n                props['nzContent'] = customComponentFactory;\n            }\n            compRef = this._appRef.bootstrap(factory);\n            instance = compRef.instance;\n            subject = instance.subject;\n            ['onOk', 'onCancel'].forEach(function (eventType) {\n                subject.on(eventType, function () {\n                    var /** @type {?} */ eventHandler = props[eventType];\n                    if (eventHandler) {\n                        eventHandler(function () {\n                            instance.nzVisible = false;\n                            setTimeout(function () {\n                                compRef.destroy();\n                            }, 200);\n                        }, instance);\n                    }\n                });\n            });\n            Object.assign(instance, props, {\n                nzVisible: true\n            });\n            return subject;\n        };\n    // protected createComponentModule (componentType: any) {\n    //   @NgModule({\n    //     declarations: [ componentType ]\n    //   })\n    //   class CustomComponentModule {}\n    //   return CustomComponentModule;\n    // }\n    /**\n     * Open modal dialog\n     */\n    /**\n     * Open modal dialog\n     * @param {?} config\n     * @return {?}\n     */\n    NzModalService.prototype.open = /**\n     * Open modal dialog\n     * @param {?} config\n     * @return {?}\n     */\n        function (config) {\n            var /** @type {?} */ options = new ModalOptions();\n            var /** @type {?} */ props = this._initConfig(config, options);\n            return this._open(props, this._modalCompFactory);\n        };\n    /**\n     * Open confirm dialog\n     */\n    /**\n     * Open confirm dialog\n     * @param {?} config\n     * @return {?}\n     */\n    NzModalService.prototype._openConfirm = /**\n     * Open confirm dialog\n     * @param {?} config\n     * @return {?}\n     */\n        function (config) {\n            var /** @type {?} */ options = new ConfirmOptions();\n            var /** @type {?} */ props = this._initConfig(config, options);\n            return this._open(props, this._confirmCompFactory);\n        };\n    /**\n     * Open info dialog\n     */\n    /**\n     * Open info dialog\n     * @param {?} props\n     * @return {?}\n     */\n    NzModalService.prototype.info = /**\n     * Open info dialog\n     * @param {?} props\n     * @return {?}\n     */\n        function (props) {\n            /* tslint:disable-next-line:no-any */\n            var /** @type {?} */ config = __assign({\n                confirmType: 'info',\n                iconType: 'info-circle'\n            }, props);\n            return this._openConfirm(config);\n        };\n    /**\n     * Open success dialog\n     */\n    /**\n     * Open success dialog\n     * @param {?} props\n     * @return {?}\n     */\n    NzModalService.prototype.success = /**\n     * Open success dialog\n     * @param {?} props\n     * @return {?}\n     */\n        function (props) {\n            /* tslint:disable-next-line:no-any */\n            var /** @type {?} */ config = __assign({\n                confirmType: 'success',\n                iconType: 'check-circle'\n            }, props);\n            return this._openConfirm(config);\n        };\n    /**\n     * Open error dialog\n     */\n    /**\n     * Open error dialog\n     * @param {?} props\n     * @return {?}\n     */\n    NzModalService.prototype.error = /**\n     * Open error dialog\n     * @param {?} props\n     * @return {?}\n     */\n        function (props) {\n            /* tslint:disable-next-line:no-any */\n            var /** @type {?} */ config = __assign({\n                confirmType: 'error',\n                iconType: 'cross-circle'\n            }, props);\n            return this._openConfirm(config);\n        };\n    /**\n     * Open warning dialog\n     */\n    /**\n     * Open warning dialog\n     * @param {?} props\n     * @return {?}\n     */\n    NzModalService.prototype.warning = /**\n     * Open warning dialog\n     * @param {?} props\n     * @return {?}\n     */\n        function (props) {\n            /* tslint:disable-next-line:no-any */\n            var /** @type {?} */ config = __assign({\n                confirmType: 'warning',\n                iconType: 'exclamation-circle'\n            }, props);\n            return this._openConfirm(config);\n        };\n    /**\n     * Open confirm dialog\n     */\n    /**\n     * Open confirm dialog\n     * @param {?} props\n     * @return {?}\n     */\n    NzModalService.prototype.confirm = /**\n     * Open confirm dialog\n     * @param {?} props\n     * @return {?}\n     */\n        function (props) {\n            /* tslint:disable-next-line:no-any */\n            var /** @type {?} */ config = __assign({\n                confirmType: 'confirm',\n                okText: this._locale.translate('Modal.okText'),\n                cancelText: this._locale.translate('Modal.cancelText')\n            }, props);\n            return this._openConfirm(config);\n        };\n    return NzModalService;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzModalModule = /*@__PURE__*/ (function () {\n    function NzModalModule() {\n    }\n    return NzModalModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\nvar NZ_NOTIFICATION_DEFAULT_CONFIG = new InjectionToken('NZ_NOTIFICATION_DEFAULT_CONFIG');\nvar NZ_NOTIFICATION_CONFIG = new InjectionToken('NZ_NOTIFICATION_CONFIG');\nvar NZ_NOTIFICATION_DEFAULT_CONFIG_PROVIDER = {\n    provide: NZ_NOTIFICATION_DEFAULT_CONFIG,\n    useValue: {\n        nzTop: '24px',\n        nzRight: '0px',\n        nzDuration: 4500,\n        nzMaxStack: 7,\n        nzPauseOnHover: true,\n        nzAnimate: true\n    }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzNotificationContainerComponent = /*@__PURE__*/ (function (_super) {\n    __extends(NzNotificationContainerComponent, _super);\n    function NzNotificationContainerComponent(defaultConfig, config) {\n        return _super.call(this, defaultConfig, config) || this;\n    }\n    return NzNotificationContainerComponent;\n}(NzMessageContainerComponent));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzNotificationComponent = /*@__PURE__*/ (function (_super) {\n    __extends(NzNotificationComponent, _super);\n    function NzNotificationComponent(container) {\n        return _super.call(this, container) || this;\n    }\n    /**\n     * @return {?}\n     */\n    NzNotificationComponent.prototype.onClickClose = /**\n     * @return {?}\n     */\n        function () {\n            this._destroy();\n        };\n    return NzNotificationComponent;\n}(NzMessageComponent));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzNotificationModule = /*@__PURE__*/ (function () {\n    function NzNotificationModule() {\n    }\n    return NzNotificationModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzPaginationComponent = /*@__PURE__*/ (function () {\n    function NzPaginationComponent(_elementRef) {\n        this._elementRef = _elementRef;\n        this._showSizeChanger = false;\n        this._showTotal = false;\n        this._showQuickJumper = false;\n        this._simple = false;\n        this._current = 1;\n        this._pageSize = 10;\n        this._firstIndex = 1;\n        this._lastIndex = Infinity;\n        this._pages = [];\n        this._options = [10, 20, 30, 40, 50];\n        this.nzInTable = false;\n        this.nzPageSizeChange = new EventEmitter();\n        this.nzPageIndexChange = new EventEmitter();\n        this.nzPageIndexClickChange = new EventEmitter();\n        this._el = this._elementRef.nativeElement;\n    }\n    Object.defineProperty(NzPaginationComponent.prototype, \"nzShowSizeChanger\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._showSizeChanger;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._showSizeChanger = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzPaginationComponent.prototype, \"nzShowQuickJumper\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._showQuickJumper;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._showQuickJumper = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzPaginationComponent.prototype, \"nzShowTotal\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._showTotal;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._showTotal = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzPaginationComponent.prototype, \"nzSimple\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._simple;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._simple = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} pageSize\n     * @return {?}\n     */\n    NzPaginationComponent.prototype._jumpBefore = /**\n     * @param {?} pageSize\n     * @return {?}\n     */\n        function (pageSize) {\n            this._jumpPage(this._current - Math.round(pageSize / 2));\n        };\n    /**\n     * @param {?} pageSize\n     * @return {?}\n     */\n    NzPaginationComponent.prototype._jumpAfter = /**\n     * @param {?} pageSize\n     * @return {?}\n     */\n        function (pageSize) {\n            this._jumpPage(this._current + Math.round(pageSize / 2));\n        };\n    Object.defineProperty(NzPaginationComponent.prototype, \"nzPageSizeSelectorValues\", {\n        set: /**\n         * page size changer select values\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (value) {\n                this._options = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzPaginationComponent.prototype, \"nzPageIndex\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._current;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (this._current === value) {\n                return;\n            }\n            if (value > this._lastIndex || value < this._firstIndex) {\n                return;\n            }\n            this._current = Number(value);\n            this._buildIndexes();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzPaginationComponent.prototype, \"nzPageSize\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._pageSize;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (value === this._pageSize) {\n                return;\n            }\n            this._pageSize = value;\n            this.nzPageIndexChange.emit(this.nzPageIndex);\n            this._buildIndexes();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzPaginationComponent.prototype, \"nzTotal\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._total;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (value === this._total) {\n                return;\n            }\n            this._total = value;\n            this._buildIndexes();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NzPaginationComponent.prototype._pageSizeChange = /**\n     * @param {?} $event\n     * @return {?}\n     */\n        function ($event) {\n            this.nzPageSize = $event;\n            this.nzPageSizeChange.emit($event);\n        };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NzPaginationComponent.prototype._nzPageIndexChange = /**\n     * @param {?} $event\n     * @return {?}\n     */\n        function ($event) {\n            this.nzPageIndex = $event;\n            this.nzPageIndexChange.emit(this.nzPageIndex);\n        };\n    /** generate indexes list */\n    /**\n     * generate indexes list\n     * @return {?}\n     */\n    NzPaginationComponent.prototype._buildIndexes = /**\n     * generate indexes list\n     * @return {?}\n     */\n        function () {\n            this._lastIndex = Math.ceil(this._total / this._pageSize);\n            if (this._current > this._lastIndex) {\n                this.nzPageIndex = this._lastIndex;\n                this.nzPageIndexChange.emit(this.nzPageIndex);\n            }\n            var /** @type {?} */ tmpPages = [];\n            if (this._lastIndex <= 9) {\n                for (var /** @type {?} */ i = 2; i <= this._lastIndex - 1; i++) {\n                    tmpPages.push({ index: i });\n                }\n            }\n            else {\n                var /** @type {?} */ current = +this._current;\n                var /** @type {?} */ left = Math.max(2, current - 2);\n                var /** @type {?} */ right = Math.min(current + 2, this._lastIndex - 1);\n                if (current - 1 <= 2) {\n                    right = 5;\n                }\n                if (this._lastIndex - current <= 2) {\n                    left = this._lastIndex - 4;\n                }\n                for (var /** @type {?} */ i = left; i <= right; i++) {\n                    tmpPages.push({ index: i });\n                }\n            }\n            this._pages = tmpPages;\n        };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    NzPaginationComponent.prototype._jumpPage = /**\n     * @param {?} index\n     * @return {?}\n     */\n        function (index) {\n            if (index === this._firstIndex - 1 || index === this._lastIndex + 1 || index === this.nzPageIndex) {\n                return;\n            }\n            if (index < this._firstIndex) {\n                this.nzPageIndex = this._firstIndex;\n            }\n            else if (index > this._lastIndex) {\n                this.nzPageIndex = this._lastIndex;\n            }\n            else {\n                this.nzPageIndex = index;\n            }\n            this.nzPageIndexClickChange.emit(this.nzPageIndex);\n            this.nzPageIndexChange.emit(this.nzPageIndex);\n        };\n    Object.defineProperty(NzPaginationComponent.prototype, \"_isLastIndex\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._current === this._lastIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzPaginationComponent.prototype, \"_isFirstIndex\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._current === this._firstIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzPaginationComponent.prototype, \"_roundPageSize\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return Math.round(this._pageSize / 2);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return NzPaginationComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzPaginationModule = /*@__PURE__*/ (function () {\n    function NzPaginationModule() {\n    }\n    return NzPaginationModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzToolTipComponent = /*@__PURE__*/ (function () {\n    function NzToolTipComponent(_cdr) {\n        this._cdr = _cdr;\n        this._hasBackdrop = false;\n        this.nzOverlayClassName = '';\n        this.nzOverlayStyle = {};\n        this.nzMouseEnterDelay = 0;\n        this.nzMouseLeaveDelay = 0.1;\n        this.nzVisibleChange = new EventEmitter();\n        this.visibleSource = new BehaviorSubject$1(false);\n        this.visible$ = this.visibleSource.asObservable();\n        this._prefix = 'ant-tooltip-placement';\n        this._positions = DEFAULT_4_POSITIONS.slice();\n        this._classMap = {};\n        this._placement = 'top';\n        this._trigger = 'hover';\n    }\n    Object.defineProperty(NzToolTipComponent.prototype, \"nzVisible\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.visibleSource.value;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            var /** @type {?} */ visible = toBoolean(value);\n            if (this.visibleSource.value !== visible) {\n                this.visibleSource.next(visible);\n                this.nzVisibleChange.emit(visible);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzToolTipComponent.prototype, \"nzTrigger\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._trigger;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._trigger = value;\n            this._hasBackdrop = this._trigger === 'click';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzToolTipComponent.prototype, \"nzPlacement\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._placement;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (value !== this._placement) {\n                this._placement = value;\n                this._positions.unshift(/** @type {?} */ (POSITION_MAP[this.nzPlacement]));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Manually force updating current overlay's position\n    /**\n     * @return {?}\n     */\n    NzToolTipComponent.prototype.updatePosition = /**\n     * @return {?}\n     */\n        function () {\n            if (this.overlay && this.overlay.overlayRef) {\n                this.overlay.overlayRef.updatePosition();\n            }\n        };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NzToolTipComponent.prototype.onPositionChange = /**\n     * @param {?} $event\n     * @return {?}\n     */\n        function ($event) {\n            for (var /** @type {?} */ key in POSITION_MAP) {\n                if (JSON.stringify($event.connectionPair) === JSON.stringify(POSITION_MAP[key])) {\n                    this.nzPlacement = key;\n                    break;\n                }\n            }\n            this.setClassMap();\n            /** TODO may cause performance problem */\n            this._cdr.detectChanges();\n        };\n    /**\n     * @return {?}\n     */\n    NzToolTipComponent.prototype.show = /**\n     * @return {?}\n     */\n        function () {\n            if (!this.isContentEmpty()) {\n                this.nzVisible = true;\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzToolTipComponent.prototype.hide = /**\n     * @return {?}\n     */\n        function () {\n            this.nzVisible = false;\n        };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NzToolTipComponent.prototype._afterVisibilityAnimation = /**\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            if (e.toState === 'false' && !this.nzVisible) {\n                this.nzVisibleChange.emit(false);\n            }\n            if (e.toState === 'true' && this.nzVisible) {\n                this.nzVisibleChange.emit(true);\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzToolTipComponent.prototype.setClassMap = /**\n     * @return {?}\n     */\n        function () {\n            this._classMap = (_a = {},\n                _a[this.nzOverlayClassName] = true,\n                _a[this._prefix + \"-\" + this._placement] = true,\n                _a);\n            var _a;\n        };\n    /**\n     * @param {?} origin\n     * @return {?}\n     */\n    NzToolTipComponent.prototype.setOverlayOrigin = /**\n     * @param {?} origin\n     * @return {?}\n     */\n        function (origin) {\n            this.overlayOrigin = origin;\n        };\n    /**\n     * @return {?}\n     */\n    NzToolTipComponent.prototype.isContentEmpty = /**\n     * @return {?}\n     */\n        function () {\n            // return this.nzTemplate ? !(this.nzTemplate.elementRef.nativeElement as HTMLElement).hasChildNodes() : this.nzTitle === '';\n            return this.nzTemplate ? false : (this.nzTitle === '' || this.nzTitle == null); // Pity, can't detect whether nzTemplate is empty due to can't get it's content before shown up\n        };\n    return NzToolTipComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzPopconfirmComponent = /*@__PURE__*/ (function (_super) {\n    __extends(NzPopconfirmComponent, _super);\n    function NzPopconfirmComponent(cdr, _locale) {\n        var _this = _super.call(this, cdr) || this;\n        _this._locale = _locale;\n        _this._condition = false;\n        _this._prefix = 'ant-popover-placement';\n        _this._trigger = 'click';\n        _this._hasBackdrop = true;\n        _this.nzOkText = _this._locale.translate('Modal.okText');\n        _this.nzCancelText = _this._locale.translate('Modal.cancelText');\n        _this.nzOnCancel = new EventEmitter();\n        _this.nzOnConfirm = new EventEmitter();\n        return _this;\n    }\n    Object.defineProperty(NzPopconfirmComponent.prototype, \"nzCondition\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._condition;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._condition = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzPopconfirmComponent.prototype.show = /**\n     * @return {?}\n     */\n        function () {\n            if (!this._condition) {\n                this.nzVisible = true;\n            }\n            else {\n                this.onConfirm();\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzPopconfirmComponent.prototype.onCancel = /**\n     * @return {?}\n     */\n        function () {\n            this.nzOnCancel.emit();\n            this.nzVisible = false;\n        };\n    /**\n     * @return {?}\n     */\n    NzPopconfirmComponent.prototype.onConfirm = /**\n     * @return {?}\n     */\n        function () {\n            this.nzOnConfirm.emit();\n            this.nzVisible = false;\n        };\n    return NzPopconfirmComponent;\n}(NzToolTipComponent));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzTooltipDirective = /*@__PURE__*/ (function () {\n    function NzTooltipDirective(elementRef, hostView, resolver, renderer, tooltip) {\n        this.elementRef = elementRef;\n        this.hostView = hostView;\n        this.resolver = resolver;\n        this.renderer = renderer;\n        this.isDynamicTooltip = false;\n        this.tooltip = tooltip;\n        // Support faster tooltip mode: <a nz-tooltip=\"xxx\"></a>. [NOTE] Used only under NzTooltipDirective currently.\n        if (!this.tooltip) {\n            var /** @type {?} */ factory = this.resolver.resolveComponentFactory(NzToolTipComponent);\n            this.tooltip = this.hostView.createComponent(factory).instance;\n            this.isDynamicTooltip = true;\n        }\n        this.tooltip.setOverlayOrigin(this);\n    }\n    Object.defineProperty(NzTooltipDirective.prototype, \"nzTitle\", {\n        get: /**\n         * @return {?}\n         */ function () { return this.tooltip.nzTitle; },\n        set: /**\n         * @param {?} title\n         * @return {?}\n         */ function (title) {\n            if (this.isDynamicTooltip) {\n                this.tooltip.nzTitle = title;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzTooltipDirective.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            if (this.tooltip.nzTrigger === 'hover') {\n                var /** @type {?} */ overlayElement_1;\n                this.renderer.listen(this.elementRef.nativeElement, 'mouseenter', function () { return _this.delayEnterLeave(true, true, _this.tooltip.nzMouseEnterDelay); });\n                this.renderer.listen(this.elementRef.nativeElement, 'mouseleave', function () {\n                    _this.delayEnterLeave(true, false, _this.tooltip.nzMouseLeaveDelay);\n                    if (_this.tooltip.overlay.overlayRef && !overlayElement_1) {\n                        // NOTE: we bind events under \"mouseleave\" due to the overlayRef is only created after the overlay was completely shown up\n                        overlayElement_1 = _this.tooltip.overlay.overlayRef.overlayElement;\n                        _this.renderer.listen(overlayElement_1, 'mouseenter', function () { return _this.delayEnterLeave(false, true); });\n                        _this.renderer.listen(overlayElement_1, 'mouseleave', function () { return _this.delayEnterLeave(false, false); });\n                    }\n                });\n            }\n            else if (this.tooltip.nzTrigger === 'focus') {\n                this.renderer.listen(this.elementRef.nativeElement, 'focus', function () { return _this.show(); });\n                this.renderer.listen(this.elementRef.nativeElement, 'blur', function () { return _this.hide(); });\n            }\n            else if (this.tooltip.nzTrigger === 'click') {\n                this.renderer.listen(this.elementRef.nativeElement, 'click', function (e) {\n                    e.preventDefault();\n                    _this.show();\n                });\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzTooltipDirective.prototype.show = /**\n     * @return {?}\n     */\n        function () {\n            this.tooltip.show();\n            this.isTooltipOpen = true;\n        };\n    /**\n     * @return {?}\n     */\n    NzTooltipDirective.prototype.hide = /**\n     * @return {?}\n     */\n        function () {\n            this.tooltip.hide();\n            this.isTooltipOpen = false;\n        };\n    /**\n     * @param {?} isOrigin\n     * @param {?} isEnter\n     * @param {?=} delay\n     * @return {?}\n     */\n    NzTooltipDirective.prototype.delayEnterLeave = /**\n     * @param {?} isOrigin\n     * @param {?} isEnter\n     * @param {?=} delay\n     * @return {?}\n     */\n        function (isOrigin, isEnter, delay) {\n            var _this = this;\n            if (delay === void 0) {\n                delay = -1;\n            }\n            if (this.delayTimer) {\n                // Clear timer during the delay time\n                window.clearTimeout(this.delayTimer);\n                this.delayTimer = null;\n            }\n            else if (delay > 0) {\n                this.delayTimer = window.setTimeout(function () {\n                    _this.delayTimer = null;\n                    isEnter ? _this.show() : _this.hide();\n                }, delay * 1000);\n            }\n            else {\n                isEnter && isOrigin ? this.show() : this.hide(); // [Compatible] The \"isOrigin\" is used due to the tooltip will not hide immediately (may caused by the fade-out animation)\n            }\n        };\n    return NzTooltipDirective;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzPopconfirmDirective = /*@__PURE__*/ (function (_super) {\n    __extends(NzPopconfirmDirective, _super);\n    function NzPopconfirmDirective(elementRef, hostView, resolver, renderer, tooltip) {\n        return _super.call(this, elementRef, hostView, resolver, renderer, tooltip) || this;\n    }\n    return NzPopconfirmDirective;\n}(NzTooltipDirective));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzPopconfirmModule = /*@__PURE__*/ (function () {\n    function NzPopconfirmModule() {\n    }\n    return NzPopconfirmModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzPopoverComponent = /*@__PURE__*/ (function (_super) {\n    __extends(NzPopoverComponent, _super);\n    function NzPopoverComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._prefix = 'ant-popover-placement';\n        return _this;\n    }\n    return NzPopoverComponent;\n}(NzToolTipComponent));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzPopoverDirective = /*@__PURE__*/ (function (_super) {\n    __extends(NzPopoverDirective, _super);\n    function NzPopoverDirective(elementRef, hostView, resolver, renderer, tooltip) {\n        return _super.call(this, elementRef, hostView, resolver, renderer, tooltip) || this;\n    }\n    return NzPopoverDirective;\n}(NzTooltipDirective));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzPopoverModule = /*@__PURE__*/ (function () {\n    function NzPopoverModule() {\n    }\n    return NzPopoverModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzProgressComponent = /*@__PURE__*/ (function () {\n    function NzProgressComponent() {\n        this._statusColorMap = {\n            normal: '#108ee9',\n            exception: '#ff5500',\n            success: '#87d068',\n        };\n        this._pathString = '';\n        this._pathStyle = {};\n        this._circleStyle = {};\n        this._percent = 0;\n        this._hasFormat = false;\n        this._rawStatus = 'normal';\n        // ngModel Access\n        this.onChange = function () { return null; };\n        this.onTouched = function () { return null; };\n        this.nzType = 'line';\n        this.nzStrokeWidth = this.nzType === 'line' ? 10 : 6;\n        this.nzWidth = 132;\n        this.nzShowInfo = true;\n        this.nzStatus = 'normal';\n        this._format = function (percent) { return percent + '%'; };\n    }\n    Object.defineProperty(NzProgressComponent.prototype, \"_setFormat\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._format = value;\n            this._hasFormat = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzProgressComponent.prototype.updateCircleStatus = /**\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ circleSize = this.nzWidth || 132;\n            this._circleStyle = {\n                'width.px': circleSize,\n                'height.px': circleSize,\n                'font-size.px': circleSize * 0.16 + 6,\n            };\n            var /** @type {?} */ radius = 50 - this.nzStrokeWidth / 2;\n            var /** @type {?} */ len = Math.PI * 2 * radius;\n            this._pathString = \"M 50,50 m 0,-\" + radius + \"\\n     a \" + radius + \",\" + radius + \" 0 1 1 0,\" + radius * 2 + \"\\n     a \" + radius + \",\" + radius + \" 0 1 1 0,-\" + radius * 2;\n            this._pathStyle = {\n                'stroke-dasharray': len + \"px \" + len + \"px\",\n                'stroke-dashoffset': (100 - this._percent) / 100 * len + 'px',\n                'transition': 'stroke-dashoffset 0.3s ease 0s, stroke 0.3s ease'\n            };\n        };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzProgressComponent.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            this._percent = value == null ? 0 : +value;\n            if (this._percent === 100) {\n                this.nzStatus = 'success';\n            }\n            else {\n                this.nzStatus = this._rawStatus;\n            }\n            if (this.nzType === 'circle') {\n                this.updateCircleStatus();\n            }\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NzProgressComponent.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onChange = fn;\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NzProgressComponent.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onTouched = fn;\n        };\n    /**\n     * @return {?}\n     */\n    NzProgressComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            this._rawStatus = this.nzStatus;\n        };\n    return NzProgressComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzProgressModule = /*@__PURE__*/ (function () {\n    function NzProgressModule() {\n    }\n    return NzProgressModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzRateComponent = /*@__PURE__*/ (function () {\n    function NzRateComponent() {\n        this._hasHalf = false;\n        this._allowHalf = false;\n        this._disabled = false;\n        this._prefixCls = 'ant-rate';\n        this._innerPrefixCls = this._prefixCls + \"-star\";\n        this._starArray = [];\n        this._count = 5;\n        this._value = 0;\n        this._hoverValue = 0;\n        // TODO: What's this for? It will match all number values\n        this._floatReg = /^\\d+(\\.\\d+)?$/;\n        // ngModel Access\n        this.onChange = function () { return null; };\n        this.onTouched = function () { return null; };\n    }\n    Object.defineProperty(NzRateComponent.prototype, \"nzCount\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._count = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzRateComponent.prototype, \"nzAllowHalf\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._allowHalf = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzRateComponent.prototype, \"nzDefaultValue\", {\n        set: /**\n         * @param {?} input\n         * @return {?}\n         */ function (input) {\n            var /** @type {?} */ value = input;\n            this._value = value;\n            if (this._floatReg.test(value.toString())) {\n                value += 0.5;\n                this._hasHalf = true;\n            }\n            this._hoverValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzRateComponent.prototype, \"nzValue\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._value;\n        },\n        set: /**\n         * @param {?} input\n         * @return {?}\n         */ function (input) {\n            var /** @type {?} */ value = input;\n            if (this._value === value) {\n                return;\n            }\n            this._value = value;\n            if (this._floatReg.test(value.toString())) {\n                value += 0.5;\n                this._hasHalf = true;\n            }\n            this._hoverValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzRateComponent.prototype, \"nzDisabled\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._disabled = toBoolean(value);\n            this.setClassMap();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzRateComponent.prototype.setClassMap = /**\n     * @return {?}\n     */\n        function () {\n            this._classMap = (_a = {},\n                _a[this._prefixCls] = true,\n                _a[this._prefixCls + \"-disabled\"] = this._disabled,\n                _a);\n            var _a;\n        };\n    /**\n     * @return {?}\n     */\n    NzRateComponent.prototype.setChildrenClassMap = /**\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ index = 0;\n            while (index < this._count) {\n                this._starArray.push(index++);\n            }\n        };\n    /**\n     * @param {?} e\n     * @param {?} index\n     * @param {?} isFull\n     * @return {?}\n     */\n    NzRateComponent.prototype._clickRate = /**\n     * @param {?} e\n     * @param {?} index\n     * @param {?} isFull\n     * @return {?}\n     */\n        function (e, index, isFull) {\n            e.stopPropagation();\n            if (this._disabled) {\n                return;\n            }\n            this._hoverValue = this._value = index + 1;\n            this._hasHalf = !isFull && this._allowHalf;\n            if (this._hasHalf) {\n                this._value -= 0.5;\n            }\n            this.onChange(this._value);\n        };\n    /**\n     * @param {?} e\n     * @param {?} index\n     * @param {?} isFull\n     * @return {?}\n     */\n    NzRateComponent.prototype._hoverRate = /**\n     * @param {?} e\n     * @param {?} index\n     * @param {?} isFull\n     * @return {?}\n     */\n        function (e, index, isFull) {\n            e.stopPropagation();\n            if (this._disabled) {\n                return;\n            }\n            var /** @type {?} */ isHalf = !isFull && this._allowHalf;\n            // 如果星数一致，则不作操作，用于提高性能\n            if (this._hoverValue === index + 1 && isHalf === this._hasHalf) {\n                return;\n            }\n            this._hoverValue = index + 1;\n            this._hasHalf = isHalf;\n        };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NzRateComponent.prototype._leaveRate = /**\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            e.stopPropagation();\n            var /** @type {?} */ oldVal = this._value;\n            if (this._floatReg.test(oldVal.toString())) {\n                oldVal += 0.5;\n                this._hasHalf = true;\n            }\n            this._hoverValue = oldVal;\n        };\n    /**\n     * @param {?} i\n     * @return {?}\n     */\n    NzRateComponent.prototype.setClasses = /**\n     * @param {?} i\n     * @return {?}\n     */\n        function (i) {\n            return _a = {},\n                _a[this._innerPrefixCls] = true,\n                _a[this._innerPrefixCls + \"-full\"] = (i + 1 < this._hoverValue) || (!this._hasHalf) && (i + 1 === this._hoverValue),\n                _a[this._innerPrefixCls + \"-half\"] = (this._hasHalf) && (i + 1 === this._hoverValue),\n                _a[this._innerPrefixCls + \"-active\"] = (this._hasHalf) && (i + 1 === this._hoverValue),\n                _a[this._innerPrefixCls + \"-zero\"] = (i + 1 > this._hoverValue),\n                _a;\n            var _a;\n        };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzRateComponent.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            this.nzValue = value || 0;\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NzRateComponent.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onChange = fn;\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NzRateComponent.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onTouched = fn;\n        };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NzRateComponent.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n        function (isDisabled) {\n            this.nzDisabled = isDisabled;\n        };\n    /**\n     * @return {?}\n     */\n    NzRateComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            this.setClassMap();\n            this.setChildrenClassMap();\n        };\n    return NzRateComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzRateModule = /*@__PURE__*/ (function () {\n    function NzRateModule() {\n    }\n    return NzRateModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\nvar NZ_ROOT_CONFIG = new InjectionToken('NzRootConfig');\n/**\n * @param {?} document\n * @param {?=} options\n * @return {?}\n */\nfunction createNzRootInitializer(document, options) {\n    return function nzRootInitializer() {\n        if (options) {\n            var /** @type {?} */ style$$1 = document.createElement('style');\n            style$$1.innerHTML = \"\\n        @font-face {\\n          font-family: '\" + options.extraFontName + \"';\\n          src: url('\" + options.extraFontUrl + \".eot'); /* IE9*/\\n          src:\\n            /* IE6-IE8 */\\n            url('\" + options.extraFontUrl + \".eot?#iefix') format('embedded-opentype'),\\n            /* chrome\\u3001firefox */\\n            url('\" + options.extraFontUrl + \".woff') format('woff'),\\n            /* chrome\\u3001firefox\\u3001opera\\u3001Safari, Android, iOS 4.2+*/\\n            url('\" + options.extraFontUrl + \".ttf') format('truetype'),\\n            /* iOS 4.1- */\\n            url('\" + options.extraFontUrl + \".svg#iconfont') format('svg');\\n        }\\n      \";\n            document.head.appendChild(style$$1);\n        }\n    };\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzRootStyleComponent = /*@__PURE__*/ (function () {\n    function NzRootStyleComponent() {\n    }\n    return NzRootStyleComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzRootComponent = /*@__PURE__*/ (function () {\n    // Cannot use type annotation here due to https://github.com/angular/angular-cli/issues/2034\n    // Should be revisited after AOT being made the only option\n    function NzRootComponent(_document, options) {\n        this._document = _document;\n        this.options = options;\n    }\n    /**\n     * @return {?}\n     */\n    NzRootComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            if (this.nzExtraFontName && this.nzExtraFontUrl && !this.options) {\n                var /** @type {?} */ options = { extraFontName: this.nzExtraFontName, extraFontUrl: this.nzExtraFontUrl };\n                var /** @type {?} */ initializer = createNzRootInitializer(this._document, options);\n                initializer();\n            }\n        };\n    return NzRootComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ɵ0$2 = createNzRootInitializer;\nvar NzRootModule = /*@__PURE__*/ (function () {\n    /* tslint:disable-next-line:no-any */\n    function NzRootModule(_document, injector, resolver) {\n        this._document = _document;\n        var /** @type {?} */ componentFactory = resolver.resolveComponentFactory(NzRootStyleComponent);\n        var /** @type {?} */ div = this._document.createElement('div');\n        this.styleHostComponent = componentFactory.create(injector, null, div);\n    }\n    /**\n     * @return {?}\n     */\n    NzRootModule.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            this.styleHostComponent.destroy();\n        };\n    return NzRootModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzToolTipModule = /*@__PURE__*/ (function () {\n    function NzToolTipModule() {\n    }\n    return NzToolTipModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzSliderMarksComponent = /*@__PURE__*/ (function () {\n    function NzSliderMarksComponent() {\n        this._vertical = false;\n        this._included = false;\n        // Dynamic properties\n        this.nzLowerBound = null;\n        this.nzUpperBound = null;\n    }\n    Object.defineProperty(NzSliderMarksComponent.prototype, \"nzVertical\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._vertical;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            // Required\n            this._vertical = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSliderMarksComponent.prototype, \"nzIncluded\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._included;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._included = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NzSliderMarksComponent.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n        function (changes) {\n            if (changes[\"nzMarksArray\"]) {\n                this.buildAttrs();\n            }\n            if (changes[\"nzMarksArray\"] || changes[\"nzLowerBound\"] || changes[\"nzUpperBound\"]) {\n                this.togglePointActive();\n            }\n        };\n    /**\n     * @param {?} index\n     * @param {?} attr\n     * @return {?}\n     */\n    NzSliderMarksComponent.prototype.trackById = /**\n     * @param {?} index\n     * @param {?} attr\n     * @return {?}\n     */\n        function (index, attr) {\n            return attr.id;\n        };\n    /**\n     * @return {?}\n     */\n    NzSliderMarksComponent.prototype.buildAttrs = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            var /** @type {?} */ range = this.nzMax - this.nzMin;\n            this.attrs = this.nzMarksArray.map(function (mark) {\n                var value = mark.value, offset = mark.offset, config = mark.config;\n                // calc styles\n                var /** @type {?} */ label = config;\n                var /** @type {?} */ style$$1;\n                if (_this.nzVertical) {\n                    style$$1 = {\n                        marginBottom: '-50%',\n                        bottom: (value - _this.nzMin) / range * 100 + \"%\"\n                    };\n                }\n                else {\n                    var /** @type {?} */ marksCount = _this.nzMarksArray.length;\n                    var /** @type {?} */ unit = 100 / (marksCount - 1);\n                    var /** @type {?} */ markWidth = unit * 0.9;\n                    style$$1 = {\n                        width: markWidth + \"%\",\n                        marginLeft: -markWidth / 2 + \"%\",\n                        left: (value - _this.nzMin) / range * 100 + \"%\"\n                    };\n                }\n                // custom configuration\n                if (typeof config === 'object') {\n                    label = config.label;\n                    if (config.style) {\n                        style$$1 = __assign({}, style$$1, config.style);\n                    }\n                }\n                return {\n                    id: value,\n                    value: value,\n                    offset: offset,\n                    classes: (_a = {},\n                        _a[_this.nzClassName + \"-text\"] = true,\n                        _a),\n                    style: style$$1,\n                    label: label\n                };\n                var _a;\n            }); // END - map\n        };\n    /**\n     * @return {?}\n     */\n    NzSliderMarksComponent.prototype.togglePointActive = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            if (this.attrs && this.nzLowerBound !== null && this.nzUpperBound !== null) {\n                this.attrs.forEach(function (attr) {\n                    var /** @type {?} */ value = attr.value;\n                    var /** @type {?} */ isActive = (!_this.nzIncluded && value === _this.nzUpperBound) ||\n                        (_this.nzIncluded && value <= _this.nzUpperBound && value >= _this.nzLowerBound);\n                    attr.classes[_this.nzClassName + \"-text-active\"] = isActive;\n                });\n            }\n        };\n    return NzSliderMarksComponent;\n}());\nvar MarksArray = /*@__PURE__*/ (function (_super) {\n    __extends(MarksArray, _super);\n    function MarksArray() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return MarksArray;\n}(Array));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzSliderService = /*@__PURE__*/ (function () {\n    function NzSliderService() {\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NzSliderService.prototype.pauseEvent = /**\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            e.stopPropagation();\n            e.preventDefault();\n        };\n    /**\n     * @param {?} num\n     * @return {?}\n     */\n    NzSliderService.prototype.getPrecision = /**\n     * @param {?} num\n     * @return {?}\n     */\n        function (num) {\n            var /** @type {?} */ numStr = num.toString();\n            var /** @type {?} */ dotIndex = numStr.indexOf('.');\n            return dotIndex >= 0 ? numStr.length - dotIndex - 1 : 0;\n        };\n    /**\n     * @template T\n     * @param {?} arr\n     * @return {?}\n     */\n    NzSliderService.prototype.cloneArray = /**\n     * @template T\n     * @param {?} arr\n     * @return {?}\n     */\n        function (arr) {\n            return arr.slice();\n        };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NzSliderService.prototype.isNotTouchEvent = /**\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            return !e.touches || e.touches.length > 1 ||\n                (e.type.toLowerCase() === 'touchend' && e.touches.length > 0);\n        };\n    // convert value to offset in percent\n    /**\n     * @param {?} min\n     * @param {?} max\n     * @param {?} value\n     * @return {?}\n     */\n    NzSliderService.prototype.valueToOffset = /**\n     * @param {?} min\n     * @param {?} max\n     * @param {?} value\n     * @return {?}\n     */\n        function (min, max, value) {\n            return (value - min) / (max - min) * 100;\n        };\n    /**\n     * @param {?} num\n     * @param {?} min\n     * @param {?} max\n     * @return {?}\n     */\n    NzSliderService.prototype.correctNumLimit = /**\n     * @param {?} num\n     * @param {?} min\n     * @param {?} max\n     * @return {?}\n     */\n        function (num, min, max) {\n            var /** @type {?} */ res = +num;\n            if (isNaN(res)) {\n                return min;\n            }\n            if (num < min) {\n                res = min;\n            }\n            else if (num > max) {\n                res = max;\n            }\n            return res;\n        };\n    /**\n     * get the offset of an element relative to the document (Reference from jquery's offset())\n     * @param elem HTMLElement ref\n     */\n    /**\n     * get the offset of an element relative to the document (Reference from jquery's offset())\n     * @param {?} elem HTMLElement ref\n     * @return {?}\n     */\n    NzSliderService.prototype.getElementOffset = /**\n     * get the offset of an element relative to the document (Reference from jquery's offset())\n     * @param {?} elem HTMLElement ref\n     * @return {?}\n     */\n        function (elem) {\n            // Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n            // Support: IE <=11 only\n            // Running getBoundingClientRect on a\n            // disconnected node in IE throws an error\n            if (!elem.getClientRects().length) {\n                return { top: 0, left: 0 };\n            }\n            // Get document-relative position by adding viewport scroll to viewport-relative gBCR\n            var /** @type {?} */ rect = elem.getBoundingClientRect();\n            var /** @type {?} */ win = elem.ownerDocument.defaultView;\n            return {\n                top: rect.top + win.pageYOffset,\n                left: rect.left + win.pageXOffset\n            };\n        };\n    return NzSliderService;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzSliderComponent = /*@__PURE__*/ (function () {\n    // |--------------------------------------------------------------------------------------------\n    // | Lifecycle hooks\n    // |--------------------------------------------------------------------------------------------\n    function NzSliderComponent(utils) {\n        this.utils = utils;\n        // Debugging\n        this.nzDebugId = null;\n        // Static configurations (properties that can only specify once)\n        this.nzStep = 1;\n        this.nzMarks = null;\n        this.nzMin = 0;\n        this.nzMax = 100;\n        this.nzDefaultValue = null;\n        this.nzOnAfterChange = new EventEmitter();\n        this._disabled = false;\n        this._dots = false;\n        this._included = true;\n        this._range = false;\n        this._vertical = false;\n        this.value = null;\n        this.cacheSliderStart = null;\n        this.cacheSliderLength = null;\n        this.prefixCls = 'ant-slider';\n        this.activeValueIndex = null;\n        this.track = { offset: null, length: null };\n        this.bounds = { lower: null, upper: null };\n        this.isDragging = false;\n    }\n    Object.defineProperty(NzSliderComponent.prototype, \"nzDisabled\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._disabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._disabled = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSliderComponent.prototype, \"nzVertical\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._vertical;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._vertical = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSliderComponent.prototype, \"nzRange\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._range;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._range = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSliderComponent.prototype, \"nzDots\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._dots;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._dots = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSliderComponent.prototype, \"nzIncluded\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._included;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._included = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // |--------------------------------------------------------------------------------------------\n    // | value accessors & ngModel accessors\n    // |--------------------------------------------------------------------------------------------\n    /**\n     * @param {?} val\n     * @param {?=} isWriteValue\n     * @return {?}\n     */\n    NzSliderComponent.prototype.setValue = /**\n     * @param {?} val\n     * @param {?=} isWriteValue\n     * @return {?}\n     */\n        function (val, isWriteValue) {\n            if (isWriteValue === void 0) {\n                isWriteValue = false;\n            }\n            if (isWriteValue) {\n                // [ngModel-writeValue]: Formatting before setting value, always update current value, but trigger onValueChange ONLY when the \"formatted value\" not equals \"input value\"\n                this.value = this.formatValue(val);\n                this.log(\"[ngModel:setValue/writeValue]Update track & handles\");\n                this.updateTrackAndHandles();\n                // if (!this.isValueEqual(this.value, val)) {\n                //   this.log(`[ngModel:setValue/writeValue]onValueChange`, val);\n                //   if (this.onValueChange) { // NOTE: onValueChange will be unavailable when writeValue() called at the first time\n                //     this.onValueChange(this.value);\n                //   }\n                // }\n            }\n            else {\n                // [Normal]: setting value, ONLY check changed, then update and trigger onValueChange\n                if (!this.isValueEqual(this.value, val)) {\n                    this.value = val;\n                    this.log(\"[Normal:setValue]Update track & handles\");\n                    this.updateTrackAndHandles();\n                    this.log(\"[Normal:setValue]onValueChange\", val);\n                    if (this.onValueChange) {\n                        // NOTE: onValueChange will be unavailable when writeValue() called at the first time\n                        this.onValueChange(this.value);\n                    }\n                }\n            }\n        };\n    /**\n     * @param {?=} cloneAndSort\n     * @return {?}\n     */\n    NzSliderComponent.prototype.getValue = /**\n     * @param {?=} cloneAndSort\n     * @return {?}\n     */\n        function (cloneAndSort) {\n            if (cloneAndSort === void 0) {\n                cloneAndSort = false;\n            }\n            // TODO: using type guard, remove type cast\n            if (cloneAndSort && this.nzRange) {\n                // clone & sort range values\n                return this.utils.cloneArray(/** @type {?} */ (this.value)).sort(function (a, b) { return a - b; });\n            }\n            return this.value;\n        };\n    // clone & sort current value and convert them to offsets, then return the new one\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    NzSliderComponent.prototype.getValueToOffset = /**\n     * @param {?=} value\n     * @return {?}\n     */\n        function (value) {\n            var _this = this;\n            var /** @type {?} */ normalizedValue = value;\n            if (typeof normalizedValue === 'undefined') {\n                normalizedValue = this.getValue(true);\n            }\n            // TODO: using type guard, remove type cast\n            return this.nzRange ?\n                ((normalizedValue)).map(function (val) { return _this.valueToOffset(val); }) :\n                this.valueToOffset(/** @type {?} */ (normalizedValue));\n        };\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    NzSliderComponent.prototype.writeValue = /**\n     * @param {?} val\n     * @return {?}\n     */\n        function (val) {\n            // NOTE: writeValue will be called twice when initialized (may BUG? see: https://github.com/angular/angular/issues/14988), here we just ignore the first inited(the first the onValueChange will not registered)\n            if (typeof this.onValueChange !== 'function') {\n                return;\n            } // ignore the first initial call\n            this.log(\"[ngModel/writeValue]current writing value = \", val);\n            this.setValue(val, true);\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NzSliderComponent.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onValueChange = fn;\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NzSliderComponent.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) { };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NzSliderComponent.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n        function (isDisabled) {\n            this.nzDisabled = isDisabled;\n            this.toggleDragDisabled(isDisabled);\n            this.setClassMap();\n        };\n    // initialize event binding, class init, etc. (called only once)\n    /**\n     * @return {?}\n     */\n    NzSliderComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            // initial checking\n            this.checkValidValue(this.nzDefaultValue); // check nzDefaultValue\n            // default handles\n            this.handles = this._generateHandles(this.nzRange ? 2 : 1);\n            // initialize\n            this.sliderDOM = this.slider.nativeElement;\n            if (this.getValue() === null) {\n                this.setValue(this.formatValue(null));\n            } // init with default value\n            this.marksArray = this.nzMarks === null ? null : this.toMarksArray(this.nzMarks);\n            // event bindings\n            this.createDrag();\n            // initialize drag's disabled status\n            this.toggleDragDisabled(this.nzDisabled);\n            // the first time to init classes\n            this.setClassMap();\n        };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NzSliderComponent.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n        function (changes) {\n            var nzDisabled = changes.nzDisabled, nzMarks = changes.nzMarks;\n            if (nzDisabled && !nzDisabled.firstChange) {\n                this.toggleDragDisabled(nzDisabled.currentValue);\n                this.setClassMap();\n            }\n            else if (nzMarks && !nzMarks.firstChange) {\n                this.marksArray = this.nzMarks ? this.toMarksArray(this.nzMarks) : null;\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzSliderComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            this.unsubscribeDrag();\n        };\n    // |--------------------------------------------------------------------------------------------\n    // | Basic flow functions\n    // |--------------------------------------------------------------------------------------------\n    /**\n     * @return {?}\n     */\n    NzSliderComponent.prototype.setClassMap = /**\n     * @return {?}\n     */\n        function () {\n            this.classMap = (_a = {},\n                _a[this.prefixCls] = true,\n                _a[this.prefixCls + \"-disabled\"] = this.nzDisabled,\n                _a[this.prefixCls + \"-vertical\"] = this.nzVertical,\n                _a[this.prefixCls + \"-with-marks\"] = this.marksArray ? this.marksArray.length : 0,\n                _a);\n            var _a;\n        };\n    // find the cloest value to be activated (only for range = true)\n    /**\n     * @param {?} pointerValue\n     * @return {?}\n     */\n    NzSliderComponent.prototype.setActiveValueIndex = /**\n     * @param {?} pointerValue\n     * @return {?}\n     */\n        function (pointerValue) {\n            if (this.nzRange) {\n                var /** @type {?} */ minimal_1 = null;\n                var /** @type {?} */ gap_1;\n                var /** @type {?} */ activeIndex_1;\n                // TODO: using type guard, remove type cast\n                ((this.getValue())).forEach(function (val, index) {\n                    gap_1 = Math.abs(pointerValue - val);\n                    if (minimal_1 === null || gap_1 < minimal_1) {\n                        minimal_1 = gap_1;\n                        activeIndex_1 = index;\n                    }\n                });\n                this.activeValueIndex = activeIndex_1;\n            }\n        };\n    /**\n     * @param {?} pointerValue\n     * @return {?}\n     */\n    NzSliderComponent.prototype.setActiveValue = /**\n     * @param {?} pointerValue\n     * @return {?}\n     */\n        function (pointerValue) {\n            if (this.nzRange) {\n                // TODO: using type guard, remove type cast\n                var /** @type {?} */ newValue = this.utils.cloneArray(/** @type {?} */ (this.value));\n                newValue[this.activeValueIndex] = pointerValue;\n                this.setValue(newValue);\n            }\n            else {\n                this.setValue(pointerValue);\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzSliderComponent.prototype.updateTrackAndHandles = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            var /** @type {?} */ value = this.getValue();\n            var /** @type {?} */ offset = this.getValueToOffset(value);\n            var /** @type {?} */ valueSorted = this.getValue(true);\n            var /** @type {?} */ offsetSorted = this.getValueToOffset(valueSorted);\n            var /** @type {?} */ boundParts = this.nzRange ? /** @type {?} */ (valueSorted) : [0, valueSorted];\n            var /** @type {?} */ trackParts = this.nzRange ? [offsetSorted[0], offsetSorted[1] - offsetSorted[0]] : [0, offsetSorted];\n            this.handles.forEach(function (handle, index) {\n                handle.offset = _this.nzRange ? offset[index] : offset;\n                handle.value = _this.nzRange ? value[index] : value;\n            });\n            this.bounds.lower = boundParts[0], this.bounds.upper = boundParts[1];\n            this.track.offset = trackParts[0], this.track.length = trackParts[1];\n        };\n    /**\n     * @param {?} marks\n     * @return {?}\n     */\n    NzSliderComponent.prototype.toMarksArray = /**\n     * @param {?} marks\n     * @return {?}\n     */\n        function (marks) {\n            var /** @type {?} */ marksArray = [];\n            for (var /** @type {?} */ key in marks) {\n                var /** @type {?} */ mark = marks[key];\n                var /** @type {?} */ val = typeof key === 'number' ? key : parseFloat(key);\n                if (val < this.nzMin || val > this.nzMax) {\n                    continue;\n                }\n                marksArray.push({ value: val, offset: this.valueToOffset(val), config: mark });\n            }\n            return marksArray;\n        };\n    // |--------------------------------------------------------------------------------------------\n    // | Event listeners & bindings\n    // |--------------------------------------------------------------------------------------------\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzSliderComponent.prototype.onDragStart = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            this.log('[onDragStart]dragging value = ', value);\n            this.toggleDragMoving(true);\n            // cache DOM layout/reflow operations\n            this.cacheSliderProperty();\n            // trigger drag start\n            this.setActiveValueIndex(value);\n            this.setActiveValue(value);\n            // Tooltip visibility of handles\n            this._showHandleTooltip(this.nzRange ? this.activeValueIndex : 0);\n        };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzSliderComponent.prototype.onDragMove = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            this.log('[onDragMove]dragging value = ', value);\n            // trigger drag moving\n            this.setActiveValue(value);\n        };\n    /**\n     * @return {?}\n     */\n    NzSliderComponent.prototype.onDragEnd = /**\n     * @return {?}\n     */\n        function () {\n            this.log('[onDragEnd]');\n            this.toggleDragMoving(false);\n            this.nzOnAfterChange.emit(this.getValue(true));\n            // remove cache DOM layout/reflow operations\n            this.cacheSliderProperty(true);\n            // Hide all tooltip\n            this._hideAllHandleTooltip();\n        };\n    /**\n     * @return {?}\n     */\n    NzSliderComponent.prototype.createDrag = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            var /** @type {?} */ sliderDOM = this.sliderDOM;\n            var /** @type {?} */ orientField = this.nzVertical ? 'pageY' : 'pageX';\n            // TODO: using named interface\n            var /** @type {?} */ mouse = ({\n                start: 'mousedown', move: 'mousemove', end: 'mouseup',\n                pluckKey: [orientField]\n            });\n            var /** @type {?} */ touch = ({\n                start: 'touchstart', move: 'touchmove', end: 'touchend',\n                pluckKey: ['touches', '0', orientField],\n                filter: function (e) { return !_this.utils.isNotTouchEvent(/** @type {?} */ (e)); }\n            });\n            // make observables\n            [mouse, touch].forEach(function (source) {\n                // TODO: remove any\n                // TODO: filterFunc doesn't match filter in touch, should be checked\n                /* tslint:disable-next-line:no-any */\n                var _a = (source), start = _a.start, move = _a.move, end = _a.end, pluckKey = _a.pluckKey, _b = _a.filterFunc, filterFunc = _b === void 0 ? (function () { return true; }) : _b;\n                // start\n                source.startPlucked$ = fromEvent$1(sliderDOM, start).pipe(filter$1(filterFunc), tap$1(_this.utils.pauseEvent), pluck$1.apply(void 0, pluckKey), map$1(function (position) { return _this.findClosestValue(position); }));\n                // end\n                source.end$ = fromEvent$1(document, end);\n                // resolve move\n                source.moveResolved$ = fromEvent$1(document, move).pipe(filter$1(filterFunc), tap$1(_this.utils.pauseEvent), pluck$1.apply(void 0, pluckKey), distinctUntilChanged$1(), map$1(function (position) { return _this.findClosestValue(position); }), distinctUntilChanged$1(), takeUntil$1(source.end$));\n                // merge to become moving\n                // source.move$ = source.startPlucked$.mergeMapTo(source.moveResolved$);\n            });\n            // merge mouse and touch observables\n            this.dragstart$ = merge$3(mouse.startPlucked$, touch.startPlucked$);\n            // this.dragmove$ = Observable.merge(mouse.move$, touch.move$);\n            this.dragmove$ = merge$3(mouse.moveResolved$, touch.moveResolved$);\n            this.dragend$ = merge$3(mouse.end$, touch.end$);\n        };\n    /**\n     * @param {?=} periods\n     * @return {?}\n     */\n    NzSliderComponent.prototype.subscribeDrag = /**\n     * @param {?=} periods\n     * @return {?}\n     */\n        function (periods) {\n            if (periods === void 0) {\n                periods = ['start', 'move', 'end'];\n            }\n            this.log('[subscribeDrag]this.dragstart$ = ', this.dragstart$);\n            if (periods.indexOf('start') !== -1 && this.dragstart$ && !this.dragstart_) {\n                this.dragstart_ = this.dragstart$.subscribe(this.onDragStart.bind(this));\n            }\n            if (periods.indexOf('move') !== -1 && this.dragmove$ && !this.dragmove_) {\n                this.dragmove_ = this.dragmove$.subscribe(this.onDragMove.bind(this));\n            }\n            if (periods.indexOf('end') !== -1 && this.dragend$ && !this.dragend_) {\n                this.dragend_ = this.dragend$.subscribe(this.onDragEnd.bind(this));\n            }\n        };\n    /**\n     * @param {?=} periods\n     * @return {?}\n     */\n    NzSliderComponent.prototype.unsubscribeDrag = /**\n     * @param {?=} periods\n     * @return {?}\n     */\n        function (periods) {\n            if (periods === void 0) {\n                periods = ['start', 'move', 'end'];\n            }\n            this.log('[unsubscribeDrag]this.dragstart_ = ', this.dragstart_);\n            if (periods.indexOf('start') !== -1 && this.dragstart_) {\n                this.dragstart_.unsubscribe();\n                this.dragstart_ = null;\n            }\n            if (periods.indexOf('move') !== -1 && this.dragmove_) {\n                this.dragmove_.unsubscribe();\n                this.dragmove_ = null;\n            }\n            if (periods.indexOf('end') !== -1 && this.dragend_) {\n                this.dragend_.unsubscribe();\n                this.dragend_ = null;\n            }\n        };\n    /**\n     * @param {?} movable\n     * @return {?}\n     */\n    NzSliderComponent.prototype.toggleDragMoving = /**\n     * @param {?} movable\n     * @return {?}\n     */\n        function (movable) {\n            var /** @type {?} */ periods = ['move', 'end'];\n            if (movable) {\n                this.isDragging = true;\n                this.subscribeDrag(periods);\n            }\n            else {\n                this.isDragging = false;\n                this.unsubscribeDrag(periods);\n            }\n        };\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    NzSliderComponent.prototype.toggleDragDisabled = /**\n     * @param {?} disabled\n     * @return {?}\n     */\n        function (disabled) {\n            if (disabled) {\n                this.unsubscribeDrag();\n            }\n            else {\n                this.subscribeDrag(['start']);\n            }\n        };\n    // |--------------------------------------------------------------------------------------------\n    // | Util functions (tools)\n    // |--------------------------------------------------------------------------------------------\n    // find the closest value depend on pointer's position\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    NzSliderComponent.prototype.findClosestValue = /**\n     * @param {?} position\n     * @return {?}\n     */\n        function (position) {\n            var /** @type {?} */ sliderStart = this.getSliderStartPosition();\n            var /** @type {?} */ sliderLength = this.getSliderLength();\n            var /** @type {?} */ ratio = this.utils.correctNumLimit((position - sliderStart) / sliderLength, 0, 1);\n            var /** @type {?} */ val = (this.nzMax - this.nzMin) * (this.nzVertical ? 1 - ratio : ratio) + this.nzMin;\n            var /** @type {?} */ points = (this.nzMarks === null ? [] : Object.keys(this.nzMarks).map(parseFloat));\n            // push closest step\n            if (this.nzStep !== null && !this.nzDots) {\n                var /** @type {?} */ closestOne = Math.round(val / this.nzStep) * this.nzStep;\n                points.push(closestOne);\n            }\n            // calculate gaps\n            var /** @type {?} */ gaps = points.map(function (point) { return Math.abs(val - point); });\n            var /** @type {?} */ closest = points[gaps.indexOf(Math.min.apply(Math, gaps))];\n            // return the fixed\n            return this.nzStep === null ? closest :\n                parseFloat(closest.toFixed(this.utils.getPrecision(this.nzStep)));\n        };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzSliderComponent.prototype.valueToOffset = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            return this.utils.valueToOffset(this.nzMin, this.nzMax, value);\n        };\n    /**\n     * @return {?}\n     */\n    NzSliderComponent.prototype.getSliderStartPosition = /**\n     * @return {?}\n     */\n        function () {\n            if (this.cacheSliderStart !== null) {\n                return this.cacheSliderStart;\n            }\n            var /** @type {?} */ offset = this.utils.getElementOffset(this.sliderDOM);\n            return this.nzVertical ? offset.top : offset.left;\n        };\n    /**\n     * @return {?}\n     */\n    NzSliderComponent.prototype.getSliderLength = /**\n     * @return {?}\n     */\n        function () {\n            if (this.cacheSliderLength !== null) {\n                return this.cacheSliderLength;\n            }\n            var /** @type {?} */ sliderDOM = this.sliderDOM;\n            return this.nzVertical ?\n                sliderDOM.clientHeight : sliderDOM.clientWidth;\n        };\n    // cache DOM layout/reflow operations for performance (may not necessary?)\n    /**\n     * @param {?=} remove\n     * @return {?}\n     */\n    NzSliderComponent.prototype.cacheSliderProperty = /**\n     * @param {?=} remove\n     * @return {?}\n     */\n        function (remove) {\n            if (remove === void 0) {\n                remove = false;\n            }\n            this.cacheSliderStart = remove ? null : this.getSliderStartPosition();\n            this.cacheSliderLength = remove ? null : this.getSliderLength();\n        };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzSliderComponent.prototype.formatValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            var _this = this;\n            // NOTE: will return new value\n            var /** @type {?} */ res = value;\n            if (!this.checkValidValue(value)) {\n                // if empty, use default value\n                res = this.nzDefaultValue === null ?\n                    (this.nzRange ? [this.nzMin, this.nzMax] : this.nzMin) : this.nzDefaultValue;\n            }\n            else {\n                // format\n                // TODO: using type guard, remove type cast\n                res = this.nzRange ?\n                    ((value)).map(function (val) { return _this.utils.correctNumLimit(val, _this.nzMin, _this.nzMax); }) :\n                    this.utils.correctNumLimit(/** @type {?} */ (value), this.nzMin, this.nzMax);\n            }\n            return res;\n        };\n    // check if value is valid and throw error if value-type/range not match\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzSliderComponent.prototype.checkValidValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            var /** @type {?} */ range = this.nzRange;\n            if (value === null || value === undefined) {\n                return false;\n            } // it's an invalid value, just return\n            var /** @type {?} */ isArray = Array.isArray(value);\n            if (!Array.isArray(value)) {\n                var /** @type {?} */ parsedValue = value;\n                if (typeof value !== 'number') {\n                    parsedValue = parseFloat(value);\n                }\n                if (isNaN(parsedValue)) {\n                    return false;\n                } // it's an invalid value, just return\n            }\n            if (isArray !== !!range) {\n                // value type not match\n                throw new Error(\"The \\\"nzRange\\\" can't match the \\\"nzValue\\\"'s type, please check these properties: \\\"nzRange\\\", \\\"nzValue\\\", \\\"nzDefaultValue\\\".\");\n            }\n            return true;\n        };\n    /**\n     * @param {?} value\n     * @param {?} val\n     * @return {?}\n     */\n    NzSliderComponent.prototype.isValueEqual = /**\n     * @param {?} value\n     * @param {?} val\n     * @return {?}\n     */\n        function (value, val) {\n            if (typeof value !== typeof val) {\n                return false;\n            }\n            if (Array.isArray(value)) {\n                var /** @type {?} */ len = value.length;\n                for (var /** @type {?} */ i = 0; i < len; i++) {\n                    if (value[i] !== val[i]) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            else {\n                return value === val;\n            }\n        };\n    // print debug info\n    // TODO: should not kept in component\n    /* tslint:disable-next-line:no-any */\n    /**\n     * @param {...?} messages\n     * @return {?}\n     */\n    NzSliderComponent.prototype.log = /**\n     * @param {...?} messages\n     * @return {?}\n     */\n        function () {\n            var messages = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                messages[_i] = arguments[_i];\n            }\n            if (this.nzDebugId !== null) {\n                var /** @type {?} */ args = [\"[nz-slider][#\" + this.nzDebugId + \"] \"].concat(Array.prototype.slice.call(arguments));\n                console.log.apply(null, args);\n            }\n        };\n    /**\n     * @param {?=} handleIndex\n     * @return {?}\n     */\n    NzSliderComponent.prototype._showHandleTooltip = /**\n     * @param {?=} handleIndex\n     * @return {?}\n     */\n        function (handleIndex) {\n            var _this = this;\n            if (handleIndex === void 0) {\n                handleIndex = 0;\n            }\n            this.handles.forEach(function (handle, index) {\n                _this.handles[index].active = index === handleIndex;\n            });\n        };\n    /**\n     * @return {?}\n     */\n    NzSliderComponent.prototype._hideAllHandleTooltip = /**\n     * @return {?}\n     */\n        function () {\n            this.handles.forEach(function (handle) { return handle.active = false; });\n        };\n    /**\n     * @param {?} amount\n     * @return {?}\n     */\n    NzSliderComponent.prototype._generateHandles = /**\n     * @param {?} amount\n     * @return {?}\n     */\n        function (amount) {\n            var /** @type {?} */ handles = [];\n            for (var /** @type {?} */ i = 0; i < amount; i++) {\n                handles.push({ offset: null, value: null, active: false });\n            }\n            return handles;\n        };\n    return NzSliderComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzSliderHandleComponent = /*@__PURE__*/ (function () {\n    function NzSliderHandleComponent(_slider) {\n        this._slider = _slider;\n        this.style = {};\n    }\n    Object.defineProperty(NzSliderHandleComponent.prototype, \"nzActive\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            // [For tooltip]\n            var /** @type {?} */ show = toBoolean(value);\n            if (this.tooltip) {\n                if (show) {\n                    this.tooltip.show();\n                }\n                else {\n                    this.tooltip.hide();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NzSliderHandleComponent.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n        function (changes) {\n            if (changes[\"nzOffset\"]) {\n                this._updateStyle();\n            }\n            if (changes[\"nzValue\"]) {\n                this._updateTooltipTitle(); // [For tooltip]\n                this._updateTooltipPosition(); // [For tooltip]\n            }\n        };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NzSliderHandleComponent.prototype.onMouseEnter = /**\n     * @param {?} $event\n     * @return {?}\n     */\n        function ($event) {\n            if (!this._slider.isDragging) {\n                this.nzActive = true;\n            }\n        };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NzSliderHandleComponent.prototype.onMouseLeave = /**\n     * @param {?} $event\n     * @return {?}\n     */\n        function ($event) {\n            if (!this._slider.isDragging) {\n                this.nzActive = false;\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzSliderHandleComponent.prototype._updateTooltipTitle = /**\n     * @return {?}\n     */\n        function () {\n            // [For tooltip]\n            this.tooltipTitle = this.nzTipFormatter ? this.nzTipFormatter(this.nzValue) : \"\" + this.nzValue;\n        };\n    /**\n     * @return {?}\n     */\n    NzSliderHandleComponent.prototype._updateTooltipPosition = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            // [For tooltip]\n            if (this.tooltip) {\n                window.setTimeout(function () { return _this.tooltip.updatePosition(); }, 0); // MAY use ngAfterViewChecked? but this will be called so many times.\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzSliderHandleComponent.prototype._updateStyle = /**\n     * @return {?}\n     */\n        function () {\n            this.style[this.nzVertical ? 'bottom' : 'left'] = this.nzOffset + \"%\";\n        };\n    return NzSliderHandleComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzSliderStepComponent = /*@__PURE__*/ (function () {\n    function NzSliderStepComponent() {\n        this._vertical = false;\n        this._included = false;\n        // Dynamic properties\n        this.nzLowerBound = null;\n        this.nzUpperBound = null;\n    }\n    Object.defineProperty(NzSliderStepComponent.prototype, \"nzVertical\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._vertical;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            // Required\n            this._vertical = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSliderStepComponent.prototype, \"nzIncluded\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._included;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._included = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NzSliderStepComponent.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n        function (changes) {\n            if (changes[\"nzMarksArray\"]) {\n                this.buildAttrs();\n            }\n            if (changes[\"nzMarksArray\"] || changes[\"nzLowerBound\"] || changes[\"nzUpperBound\"]) {\n                this.togglePointActive();\n            }\n        };\n    /**\n     * @param {?} index\n     * @param {?} attr\n     * @return {?}\n     */\n    NzSliderStepComponent.prototype.trackById = /**\n     * @param {?} index\n     * @param {?} attr\n     * @return {?}\n     */\n        function (index, attr) {\n            return attr.id;\n        };\n    /**\n     * @return {?}\n     */\n    NzSliderStepComponent.prototype.buildAttrs = /**\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ orient = this.nzVertical ? 'bottom' : 'left';\n            var /** @type {?} */ prefixCls = this.nzPrefixCls;\n            this.attrs = this.nzMarksArray.map(function (mark) {\n                var value = mark.value, offset = mark.offset;\n                return {\n                    id: value,\n                    value: value,\n                    offset: offset,\n                    style: (_a = {},\n                        _a[orient] = offset + \"%\",\n                        _a),\n                    classes: (_b = {},\n                        _b[prefixCls + \"-dot\"] = true,\n                        _b[prefixCls + \"-dot-active\"] = false,\n                        _b)\n                };\n                var _a, _b;\n            });\n        };\n    /**\n     * @return {?}\n     */\n    NzSliderStepComponent.prototype.togglePointActive = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            if (this.attrs && this.nzLowerBound !== null && this.nzUpperBound !== null) {\n                this.attrs.forEach(function (attr) {\n                    var /** @type {?} */ value = attr.value;\n                    var /** @type {?} */ isActive = (!_this.nzIncluded && value === _this.nzUpperBound) ||\n                        (_this.nzIncluded && value <= _this.nzUpperBound && value >= _this.nzLowerBound);\n                    attr.classes[_this.nzPrefixCls + \"-dot-active\"] = isActive;\n                });\n            }\n        };\n    return NzSliderStepComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzSliderTrackComponent = /*@__PURE__*/ (function () {\n    function NzSliderTrackComponent() {\n        this._vertical = false;\n        this._included = false;\n        this.style = {};\n    }\n    Object.defineProperty(NzSliderTrackComponent.prototype, \"nzVertical\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._vertical;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            // Required\n            this._vertical = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSliderTrackComponent.prototype, \"nzIncluded\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._included;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._included = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NzSliderTrackComponent.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n        function (changes) {\n            if (changes[\"nzIncluded\"]) {\n                this.style.visibility = this.nzIncluded ? 'visible' : 'hidden';\n            }\n            if (changes[\"nzVertical\"] || changes[\"nzOffset\"] || changes[\"nzLength\"]) {\n                if (this.nzVertical) {\n                    this.style.bottom = this.nzOffset + \"%\";\n                    this.style.height = this.nzLength + \"%\";\n                }\n                else {\n                    this.style.left = this.nzOffset + \"%\";\n                    this.style.width = this.nzLength + \"%\";\n                }\n            }\n        };\n    return NzSliderTrackComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzSliderModule = /*@__PURE__*/ (function () {\n    function NzSliderModule() {\n    }\n    return NzSliderModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzSpinComponent = /*@__PURE__*/ (function () {\n    function NzSpinComponent(_elementRef, _renderer) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._spinning = true;\n        this._el = this._elementRef.nativeElement;\n    }\n    Object.defineProperty(NzSpinComponent.prototype, \"nzTip\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._tip;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._tip = value || '加载中...';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSpinComponent.prototype, \"nzSpinning\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._spinning;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._spinning = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSpinComponent.prototype, \"isNested\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.nzSpinning && (this._ref.nativeElement.childNodes.length !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSpinComponent.prototype, \"nzSize\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._size;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._size = { large: 'lg', small: 'sm' }[value];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzSpinComponent.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n        function () {\n            if (this._ref.nativeElement.children.length !== 0) {\n                this._renderer.setStyle(this._el, 'display', 'block');\n            }\n        };\n    return NzSpinComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzSpinModule = /*@__PURE__*/ (function () {\n    function NzSpinModule() {\n    }\n    return NzSpinModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzStepComponent = /*@__PURE__*/ (function () {\n    function NzStepComponent(erf, _renderer, cdr) {\n        this.erf = erf;\n        this._renderer = _renderer;\n        this.cdr = cdr;\n        this._status = 'wait';\n        this._ifCustomStatus = false;\n        this._totalCount = 1;\n        this._currentIndex = 0;\n        this._last = false;\n        this._first = false;\n        this._processDot = false;\n        this._direction = 'horizontal';\n        this._outStatus = 'process';\n        this.index = 0;\n        this._description = '';\n        this._el = erf.nativeElement;\n    }\n    Object.defineProperty(NzStepComponent.prototype, \"nzStatus\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._status;\n        },\n        set: /**\n         * @param {?} status\n         * @return {?}\n         */ function (status) {\n            this._status = status;\n            this._ifCustomStatus = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzStepComponent.prototype, \"nzDescription\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (value instanceof TemplateRef) {\n                this._descriptionTpl = value;\n            }\n            else {\n                this._description = /** @type {?} */ (value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzStepComponent.prototype, \"_current\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._currentIndex;\n        },\n        set: /**\n         * @param {?} current\n         * @return {?}\n         */ function (current) {\n            this._currentIndex = current;\n            if (!this._ifCustomStatus) {\n                if (current > this.index) {\n                    this._status = 'finish';\n                }\n                else if (current === this.index) {\n                    if (this._outStatus) {\n                        this._status = 'error';\n                    }\n                    else {\n                        this._status = 'process';\n                    }\n                }\n                else {\n                    this._status = 'wait';\n                }\n            }\n            this.initClassMap();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzStepComponent.prototype.initClassMap = /**\n     * @return {?}\n     */\n        function () {\n            this.stepStatusClass = (_a = {},\n                _a['ant-steps-item'] = true,\n                _a[\"ant-steps-status-wait\"] = this._status === 'wait',\n                _a[\"ant-steps-status-process\"] = this._status === 'process',\n                _a[\"ant-steps-status-finish\"] = this._status === 'finish',\n                _a[\"ant-steps-status-error\"] = this._status === 'error',\n                _a['ant-steps-item-last'] = this._last,\n                _a['ant-steps-custom'] = !!this.nzIcon,\n                _a['ant-steps-next-error'] = (this._outStatus === 'error' && this._current === this.index - 1),\n                _a);\n            for (var /** @type {?} */ i in this.stepStatusClass) {\n                if (this.stepStatusClass[i]) {\n                    this._renderer.addClass(this._el, i);\n                }\n                else {\n                    this._renderer.removeClass(this._el, i);\n                }\n            }\n            var _a;\n        };\n    /**\n     * @return {?}\n     */\n    NzStepComponent.prototype.updateLastWidth = /**\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ width = this._stepsHead.nativeElement.offsetWidth + this._stepsMain.nativeElement.offsetWidth;\n            /** remove left padding if not first**/\n            if (!this._first) {\n                width = width - 10;\n            }\n            this._renderer.setStyle(this.erf.nativeElement, 'width', (100 / (this._totalCount - 1)) + '%');\n            this._renderer.setStyle(this.erf.nativeElement, 'margin-right', (-(width / (this._totalCount - 1) + 5)) + 'px');\n            if (this._direction === 'horizontal') {\n                if (this._stepsTail && this._stepsTail.nativeElement) {\n                    this._renderer.setStyle(this._stepsTail.nativeElement, 'padding-right', ((width / (this._totalCount - 1) + 5)) + 'px');\n                }\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzStepComponent.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n        function () {\n            if (!this._last) {\n                this.updateLastWidth();\n            }\n        };\n    return NzStepComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzStepsComponent = /*@__PURE__*/ (function () {\n    function NzStepsComponent() {\n        this._progressDot = false;\n        this._status = 'process';\n        this._current = 0;\n        this._afterViewInit = false;\n        this._direction = 'horizontal';\n    }\n    Object.defineProperty(NzStepsComponent.prototype, \"nzDirection\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._direction;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._direction = value;\n            this.updateChildrenSteps();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzStepsComponent.prototype, \"nzProgressDot\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._progressDot;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._progressDot = toBoolean(value);\n            this.updateChildrenSteps();\n            this.setDirectionClass();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzStepsComponent.prototype, \"nzStatus\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._status;\n        },\n        set: /**\n         * @param {?} status\n         * @return {?}\n         */ function (status) {\n            this._status = status;\n            this.updateChildrenSteps();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzStepsComponent.prototype, \"nzCurrent\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._current;\n        },\n        set: /**\n         * @param {?} current\n         * @return {?}\n         */ function (current) {\n            this._current = current;\n            this.updateChildrenSteps();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzStepsComponent.prototype.setDirectionClass = /**\n     * @return {?}\n     */\n        function () {\n            this._stepsClassMap = (_a = {},\n                _a[\"ant-steps-\" + this.nzDirection] = true,\n                _a[\"ant-steps-label-\" + this.nzDirection] = true,\n                _a[\"ant-steps-dot\"] = this.nzProgressDot,\n                _a['ant-steps-small'] = this.nzSize === 'small',\n                _a);\n            var _a;\n        };\n    /**\n     * @return {?}\n     */\n    NzStepsComponent.prototype.updateChildrenSteps = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            setTimeout(function () {\n                _this.steps.toArray().forEach(function (step, index, arr) {\n                    step._outStatus = _this.nzStatus;\n                    step._processDot = /** @type {?} */ (_this.nzProgressDot);\n                    step._direction = _this.nzDirection;\n                    step.index = index;\n                    step._totalCount = arr.length;\n                    step._current = _this.nzCurrent;\n                    step._first = index === 0;\n                    if (arr.length === index + 1) {\n                        step._last = true;\n                    }\n                    else {\n                        step._last = false;\n                        step.updateLastWidth();\n                    }\n                    if (_this.nzCurrent === step.index) {\n                        step._status = _this.nzStatus;\n                    }\n                    step.initClassMap();\n                });\n            });\n        };\n    /**\n     * @return {?}\n     */\n    NzStepsComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            this.setDirectionClass();\n        };\n    /**\n     * @return {?}\n     */\n    NzStepsComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            if (this._stepsChanges) {\n                this._stepsChanges.unsubscribe();\n                this._stepsChanges = null;\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzStepsComponent.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            setTimeout(function () {\n                _this._afterViewInit = true;\n            });\n            this.updateChildrenSteps();\n            if (this.steps) {\n                this._stepsChanges = this.steps.changes.subscribe(function () {\n                    _this.updateChildrenSteps();\n                });\n            }\n        };\n    return NzStepsComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzStepsModule = /*@__PURE__*/ (function () {\n    function NzStepsModule() {\n    }\n    return NzStepsModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzSwitchComponent = /*@__PURE__*/ (function () {\n    function NzSwitchComponent() {\n        this._disabled = false;\n        this._prefixCls = 'ant-switch';\n        this._innerPrefixCls = this._prefixCls + \"-inner\";\n        this._checked = false;\n        // ngModel Access\n        this.onChange = function () { return null; };\n        this.onTouched = function () { return null; };\n    }\n    Object.defineProperty(NzSwitchComponent.prototype, \"nzSize\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._size;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._size = value;\n            this.setClassMap();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzSwitchComponent.prototype, \"nzDisabled\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._disabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._disabled = toBoolean(value);\n            this.setClassMap();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NzSwitchComponent.prototype.onClick = /**\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            e.preventDefault();\n            if (!this._disabled) {\n                this.updateValue(!this._checked);\n                this.onChange(this._checked);\n            }\n        };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzSwitchComponent.prototype.updateValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            if (this._checked === value) {\n                return;\n            }\n            this._checked = value;\n            this.setClassMap();\n        };\n    /**\n     * @return {?}\n     */\n    NzSwitchComponent.prototype.setClassMap = /**\n     * @return {?}\n     */\n        function () {\n            this._classMap = (_a = {},\n                _a[this._prefixCls] = true,\n                _a[this._prefixCls + \"-checked\"] = this._checked,\n                _a[this._prefixCls + \"-disabled\"] = this._disabled,\n                _a[this._prefixCls + \"-small\"] = this._size === 'small',\n                _a);\n            var _a;\n        };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzSwitchComponent.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            this.updateValue(value);\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NzSwitchComponent.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onChange = fn;\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NzSwitchComponent.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onTouched = fn;\n        };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NzSwitchComponent.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n        function (isDisabled) {\n            this.nzDisabled = isDisabled;\n        };\n    /**\n     * @return {?}\n     */\n    NzSwitchComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            this.setClassMap();\n        };\n    return NzSwitchComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzSwitchModule = /*@__PURE__*/ (function () {\n    function NzSwitchModule() {\n    }\n    return NzSwitchModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzRowExpandIconComponent = /*@__PURE__*/ (function () {\n    function NzRowExpandIconComponent() {\n        this._expand = false;\n        this._showExpand = true;\n        this.nzExpandChange = new EventEmitter();\n    }\n    Object.defineProperty(NzRowExpandIconComponent.prototype, \"nzExpand\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._expand;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._expand = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzRowExpandIconComponent.prototype, \"nzShowExpand\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._showExpand;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._showExpand = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzRowExpandIconComponent.prototype, \"hidden\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return !this.nzShowExpand;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzRowExpandIconComponent.prototype, \"expanded\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.nzShowExpand && this.nzExpand;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzRowExpandIconComponent.prototype, \"collapsed\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.nzShowExpand && !this.nzExpand;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzRowExpandIconComponent.prototype.onClick = /**\n     * @return {?}\n     */\n        function () {\n            this.nzExpand = !this.nzExpand;\n            this.nzExpandChange.emit(this.nzExpand);\n        };\n    return NzRowExpandIconComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzRowIndentComponent = /*@__PURE__*/ (function () {\n    function NzRowIndentComponent() {\n    }\n    Object.defineProperty(NzRowIndentComponent.prototype, \"paddingLeft\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.nzIndentSize * 20;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return NzRowIndentComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzTableDividerDirective = /*@__PURE__*/ (function () {\n    function NzTableDividerDirective() {\n    }\n    return NzTableDividerDirective;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzTableFilterComponent = /*@__PURE__*/ (function () {\n    function NzTableFilterComponent(nzDropDownComponent) {\n        this.nzDropDownComponent = nzDropDownComponent;\n    }\n    /**\n     * @return {?}\n     */\n    NzTableFilterComponent.prototype.hideDropDown = /**\n     * @return {?}\n     */\n        function () {\n            this.nzDropDownComponent.nzVisible = false;\n            this.nzDropDownComponent._hide();\n        };\n    /**\n     * @return {?}\n     */\n    NzTableFilterComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            this.nzDropDownComponent.hasFilterButton = true;\n            this.nzDropDownComponent.nzClickHide = false;\n        };\n    return NzTableFilterComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzThDirective = /*@__PURE__*/ (function () {\n    function NzThDirective(_elementRef) {\n        this._elementRef = _elementRef;\n        this._checkbox = false;\n        this._expand = false;\n        this._el = this._elementRef.nativeElement;\n    }\n    Object.defineProperty(NzThDirective.prototype, \"nzCheckbox\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._checkbox;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._checkbox = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzThDirective.prototype, \"nzExpand\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._expand;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._expand = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return NzThDirective;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzTableSortComponent = /*@__PURE__*/ (function () {\n    function NzTableSortComponent(nzThDirective, _renderer) {\n        this.nzThDirective = nzThDirective;\n        this._renderer = _renderer;\n        this._value = null;\n        this.nzValueChange = new EventEmitter();\n    }\n    Object.defineProperty(NzTableSortComponent.prototype, \"nzValue\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._value;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._value = value;\n            if (this.nzThDirective) {\n                if ((this._value !== 'ascend') && (this._value !== 'descend')) {\n                    this._renderer.removeClass(this.nzThDirective._el, 'ant-table-column-sort');\n                }\n                else {\n                    this._renderer.addClass(this.nzThDirective._el, 'ant-table-column-sort');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzTableSortComponent.prototype._setValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            if (this.nzValue === value) {\n                this.nzValue = null;\n            }\n            else {\n                this.nzValue = value;\n            }\n            this.nzValueChange.emit(this.nzValue);\n        };\n    return NzTableSortComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzTableComponent = /*@__PURE__*/ (function () {\n    function NzTableComponent(_elementRef, _cd) {\n        this._elementRef = _elementRef;\n        this._cd = _cd;\n        this._bordered = false;\n        this._customNoResult = false;\n        this._isPageIndexReset = true;\n        this._isPagination = true;\n        this._loading = false;\n        this._showSizeChanger = false;\n        this._showQuickJumper = false;\n        this._showTotal = false;\n        this._showFooter = false;\n        this._showTitle = false;\n        /**\n         * public data for ngFor tr\n         */\n        this.data = [];\n        this._current = 1;\n        this._pageSize = 10;\n        /* tslint:disable-next-line:no-any */\n        this._dataSet = [];\n        this._isInit = false;\n        this._isAjax = false;\n        this.ths = [];\n        this.nzPageSizeChange = new EventEmitter();\n        this.nzPageIndexChange = new EventEmitter();\n        /* tslint:disable-next-line:no-any */\n        this.nzDataChange = new EventEmitter();\n        this.nzPageIndexChangeClick = new EventEmitter();\n        /**\n         * page size changer select values\n         */\n        this.nzPageSizeSelectorValues = [10, 20, 30, 40, 50];\n        this._el = this._elementRef.nativeElement;\n    }\n    Object.defineProperty(NzTableComponent.prototype, \"nzBordered\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._bordered;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._bordered = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTableComponent.prototype, \"nzCustomNoResult\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._customNoResult;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._customNoResult = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTableComponent.prototype, \"nzIsPagination\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._isPagination;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._isPagination = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTableComponent.prototype, \"nzLoading\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._loading;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._loading = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTableComponent.prototype, \"nzShowSizeChanger\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._showSizeChanger;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._showSizeChanger = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTableComponent.prototype, \"nzShowQuickJumper\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._showQuickJumper;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._showQuickJumper = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTableComponent.prototype, \"nzShowTotal\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._showTotal;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._showTotal = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTableComponent.prototype, \"nzShowFooter\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._showFooter;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._showFooter = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTableComponent.prototype, \"nzShowTitle\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._showTitle;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._showTitle = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTableComponent.prototype, \"nzIsPageIndexReset\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._isPageIndexReset;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._isPageIndexReset = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTableComponent.prototype, \"setThs\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this.ths = value.toArray();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTableComponent.prototype, \"nzScroll\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._scroll;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._scroll = value;\n            this._cd.detectChanges();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTableComponent.prototype, \"nzAjaxData\", {\n        /* tslint:disable-next-line:no-any */\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.data;\n        },\n        set: /**\n         * async data\n         * @param {?} data\n         * @return {?}\n         */ \n        /* tslint:disable-next-line:no-any */\n        function (data) {\n            this._isAjax = true;\n            this.data = data;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTableComponent.prototype, \"nzDataSource\", {\n        /* tslint:disable-next-line:no-any */\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._dataSet;\n        },\n        set: /**\n         * sync data\n         * @param {?} value\n         * @return {?}\n         */ \n        /* tslint:disable-next-line:no-any */\n        function (value) {\n            this._dataSet = value;\n            this.nzTotal = this._dataSet.length;\n            this._generateData(true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTableComponent.prototype, \"nzPageIndex\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._current;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (this._current === value) {\n                return;\n            }\n            this._current = value;\n            this._generateData();\n            this.nzPageIndexChange.emit(this.nzPageIndex);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzTableComponent.prototype.pageChangeClick = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            this.nzPageIndexChangeClick.emit(value);\n        };\n    Object.defineProperty(NzTableComponent.prototype, \"nzPageSize\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._pageSize;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (this._pageSize === value) {\n                return;\n            }\n            this._pageSize = value;\n            this._generateData();\n            if (this._isInit) {\n                this.nzPageSizeChange.emit(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTableComponent.prototype, \"nzTotal\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._total;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (this._total === value) {\n                return;\n            }\n            this._total = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} forceRefresh\n     * @return {?}\n     */\n    NzTableComponent.prototype._generateData = /**\n     * @param {?=} forceRefresh\n     * @return {?}\n     */\n        function (forceRefresh) {\n            if (forceRefresh === void 0) {\n                forceRefresh = false;\n            }\n            if (!this._isAjax) {\n                if (this.nzIsPagination) {\n                    if (forceRefresh) {\n                        if (this.nzIsPageIndexReset) {\n                            this.nzPageIndex = 1;\n                        }\n                        else {\n                            var /** @type {?} */ maxPageIndex = Math.ceil(this._dataSet.length / this.nzPageSize);\n                            this.nzPageIndex = !this.nzPageIndex ? 1 : (this.nzPageIndex > maxPageIndex ? maxPageIndex : this.nzPageIndex);\n                        }\n                    }\n                    this.data = this._dataSet.slice((this.nzPageIndex - 1) * this.nzPageSize, this.nzPageIndex * this.nzPageSize);\n                }\n                else {\n                    this.data = this._dataSet;\n                }\n                this.nzDataChange.emit(this.data);\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzTableComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n        };\n    /**\n     * @return {?}\n     */\n    NzTableComponent.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n        function () {\n            this._isInit = true;\n        };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    NzTableComponent.prototype.scrollTable = /**\n     * @param {?} event\n     * @return {?}\n     */\n        function (event) {\n            if (this.nzScroll != null && this.nzScroll.x != null) {\n                var /** @type {?} */ body = (event.currentTarget);\n                var /** @type {?} */ head = body.parentElement.getElementsByClassName('ant-table-header')[0];\n                head.scrollLeft = body.scrollLeft;\n            }\n        };\n    return NzTableComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzTbodyTrDirective = /*@__PURE__*/ (function () {\n    function NzTbodyTrDirective() {\n    }\n    return NzTbodyTrDirective;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzTbodyDirective = /*@__PURE__*/ (function () {\n    function NzTbodyDirective() {\n    }\n    return NzTbodyDirective;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzTdDirective = /*@__PURE__*/ (function () {\n    function NzTdDirective(_elementRef) {\n        this._elementRef = _elementRef;\n        this._checkbox = false;\n        this._expand = false;\n        this._el = this._elementRef.nativeElement;\n    }\n    Object.defineProperty(NzTdDirective.prototype, \"nzCheckbox\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._checkbox;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._checkbox = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTdDirective.prototype, \"nzExpand\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._expand;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._expand = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return NzTdDirective;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzTheadDirective = /*@__PURE__*/ (function () {\n    function NzTheadDirective() {\n    }\n    return NzTheadDirective;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzTableModule = /*@__PURE__*/ (function () {\n    function NzTableModule() {\n    }\n    return NzTableModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzTabBodyComponent = /*@__PURE__*/ (function () {\n    function NzTabBodyComponent() {\n    }\n    return NzTabBodyComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzTabLabelDirective = /*@__PURE__*/ (function () {\n    function NzTabLabelDirective(elementRef) {\n        this.elementRef = elementRef;\n        this._disabled = false;\n    }\n    Object.defineProperty(NzTabLabelDirective.prototype, \"disabled\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._disabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._disabled = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzTabLabelDirective.prototype.getOffsetLeft = /**\n     * @return {?}\n     */\n        function () {\n            return this.elementRef.nativeElement.offsetLeft;\n        };\n    /**\n     * @return {?}\n     */\n    NzTabLabelDirective.prototype.getOffsetWidth = /**\n     * @return {?}\n     */\n        function () {\n            return this.elementRef.nativeElement.offsetWidth;\n        };\n    /**\n     * @return {?}\n     */\n    NzTabLabelDirective.prototype.getOffsetTop = /**\n     * @return {?}\n     */\n        function () {\n            return this.elementRef.nativeElement.offsetTop;\n        };\n    /**\n     * @return {?}\n     */\n    NzTabLabelDirective.prototype.getOffsetHeight = /**\n     * @return {?}\n     */\n        function () {\n            return this.elementRef.nativeElement.offsetHeight;\n        };\n    return NzTabLabelDirective;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzTabsInkBarDirective = /*@__PURE__*/ (function () {\n    function NzTabsInkBarDirective(_renderer, _elementRef, _ngZone) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._animated = false;\n        this.nzPositionMode = 'horizontal';\n    }\n    Object.defineProperty(NzTabsInkBarDirective.prototype, \"nzAnimated\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._animated;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._animated = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    NzTabsInkBarDirective.prototype.alignToElement = /**\n     * @param {?} element\n     * @return {?}\n     */\n        function (element) {\n            var _this = this;\n            this.show();\n            this._ngZone.runOutsideAngular(function () {\n                reqAnimFrame(function () {\n                    /** when horizontal remove height style and add transfrom left **/\n                    if (_this.nzPositionMode === 'horizontal') {\n                        _this._renderer.removeStyle(_this._elementRef.nativeElement, 'height');\n                        _this._renderer.setStyle(_this._elementRef.nativeElement, 'transform', \"translate3d(\" + _this._getLeftPosition(element) + \", 0px, 0px)\");\n                        _this._renderer.setStyle(_this._elementRef.nativeElement, 'width', _this._getElementWidth(element));\n                    }\n                    else {\n                        /** when vertical remove width style and add transfrom top **/\n                        /** when vertical remove width style and add transfrom top **/\n                        _this._renderer.removeStyle(_this._elementRef.nativeElement, 'width');\n                        _this._renderer.setStyle(_this._elementRef.nativeElement, 'transform', \"translate3d(0px, \" + _this._getTopPosition(element) + \", 0px)\");\n                        _this._renderer.setStyle(_this._elementRef.nativeElement, 'height', _this._getElementHeight(element));\n                    }\n                });\n            });\n        };\n    /**\n     * @return {?}\n     */\n    NzTabsInkBarDirective.prototype.show = /**\n     * @return {?}\n     */\n        function () {\n            this._renderer.setStyle(this._elementRef.nativeElement, 'visibility', 'visible');\n        };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzTabsInkBarDirective.prototype.setDisplay = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            this._renderer.setStyle(this._elementRef.nativeElement, 'display', value);\n        };\n    /**\n     * @return {?}\n     */\n    NzTabsInkBarDirective.prototype.hide = /**\n     * @return {?}\n     */\n        function () {\n            this._renderer.setStyle(this._elementRef.nativeElement, 'visibility', 'hidden');\n        };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    NzTabsInkBarDirective.prototype._getLeftPosition = /**\n     * @param {?} element\n     * @return {?}\n     */\n        function (element) {\n            return element ? element.offsetLeft + 'px' : '0';\n        };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    NzTabsInkBarDirective.prototype._getElementWidth = /**\n     * @param {?} element\n     * @return {?}\n     */\n        function (element) {\n            return element ? element.offsetWidth + 'px' : '0';\n        };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    NzTabsInkBarDirective.prototype._getTopPosition = /**\n     * @param {?} element\n     * @return {?}\n     */\n        function (element) {\n            return element ? element.offsetTop + 'px' : '0';\n        };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    NzTabsInkBarDirective.prototype._getElementHeight = /**\n     * @param {?} element\n     * @return {?}\n     */\n        function (element) {\n            return element ? element.offsetHeight + 'px' : '0';\n        };\n    return NzTabsInkBarDirective;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar EXAGGERATED_OVERSCROLL = 64;\nvar NzTabsNavComponent = /*@__PURE__*/ (function () {\n    function NzTabsNavComponent(_elementRef, _ngZone, _renderer, _dir) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._renderer = _renderer;\n        this._dir = _dir;\n        this._animated = true;\n        this._hideBar = false;\n        this._showPagination = true;\n        this._showPaginationControls = false;\n        this._disableScrollAfter = true;\n        this._disableScrollBefore = true;\n        this._scrollDistance = 0;\n        this._selectedIndexChanged = false;\n        this._realignInkBar = null;\n        this._selectedIndex = 0;\n        this._tabPositionMode = 'horizontal';\n        this.nzSize = 'default';\n        this._type = 'line';\n    }\n    Object.defineProperty(NzTabsNavComponent.prototype, \"nzAnimated\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._animated;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._animated = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTabsNavComponent.prototype, \"nzHideBar\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._hideBar;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._hideBar = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTabsNavComponent.prototype, \"nzType\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._type;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._type = value;\n            if (this._type !== 'line') {\n                this._inkBar.setDisplay('none');\n            }\n            else {\n                this._inkBar.setDisplay('block');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTabsNavComponent.prototype, \"nzShowPagination\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._showPagination;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._showPagination = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTabsNavComponent.prototype, \"nzPositionMode\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._tabPositionMode;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._tabPositionMode = value;\n            this._alignInkBarToSelectedTab();\n            if (this.nzShowPagination) {\n                this._updatePagination();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTabsNavComponent.prototype, \"selectedIndex\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._selectedIndex;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._selectedIndexChanged = this._selectedIndex !== value;\n            this._selectedIndex = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzTabsNavComponent.prototype._onContentChanges = /**\n     * @return {?}\n     */\n        function () {\n            if (this.nzShowPagination) {\n                this._updatePagination();\n            }\n            this._alignInkBarToSelectedTab();\n        };\n    /**\n     * @param {?} scrollDir\n     * @return {?}\n     */\n    NzTabsNavComponent.prototype._scrollHeader = /**\n     * @param {?} scrollDir\n     * @return {?}\n     */\n        function (scrollDir) {\n            // Move the scroll distance one-third the length of the tab list's viewport.\n            this.scrollDistance += (scrollDir === 'before' ? -1 : 1) * this.viewWidthHeightPix / 3;\n        };\n    /**\n     * @return {?}\n     */\n    NzTabsNavComponent.prototype.ngAfterContentChecked = /**\n     * @return {?}\n     */\n        function () {\n            if (this._tabLabelCount !== this._labelWrappers.length) {\n                if (this.nzShowPagination) {\n                    this._updatePagination();\n                }\n                this._tabLabelCount = this._labelWrappers.length;\n            }\n            if (this._selectedIndexChanged) {\n                this._scrollToLabel(this._selectedIndex);\n                if (this.nzShowPagination) {\n                    this._checkScrollingControls();\n                }\n                this._alignInkBarToSelectedTab();\n                this._selectedIndexChanged = false;\n            }\n            if (this._scrollDistanceChanged) {\n                if (this.nzShowPagination) {\n                    this._updateTabScrollPosition();\n                }\n                this._scrollDistanceChanged = false;\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzTabsNavComponent.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            this._realignInkBar = this._ngZone.runOutsideAngular(function () {\n                var /** @type {?} */ dirChange = _this._dir ? _this._dir.change : of$1(null);\n                var /** @type {?} */ resize = typeof window !== 'undefined' ?\n                    fromEvent$1(window, 'resize').pipe(auditTime$1(10)) :\n                    of$1(null);\n                return merge$3(dirChange, resize).pipe(startWith$1(null)).subscribe(function () {\n                    if (_this.nzShowPagination) {\n                        _this._updatePagination();\n                    }\n                    _this._alignInkBarToSelectedTab();\n                });\n            });\n        };\n    /**\n     * @return {?}\n     */\n    NzTabsNavComponent.prototype._updateTabScrollPosition = /**\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ scrollDistance = this.scrollDistance;\n            if (this.nzPositionMode === 'horizontal') {\n                var /** @type {?} */ translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n                this._renderer.setStyle(this._tabList.nativeElement, 'transform', \"translate3d(\" + translateX + \"px, 0, 0)\");\n            }\n            else {\n                this._renderer.setStyle(this._tabList.nativeElement, 'transform', \"translate3d(0,\" + -scrollDistance + \"px, 0)\");\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzTabsNavComponent.prototype._updatePagination = /**\n     * @return {?}\n     */\n        function () {\n            this._checkPaginationEnabled();\n            this._checkScrollingControls();\n            this._updateTabScrollPosition();\n        };\n    /**\n     * @return {?}\n     */\n    NzTabsNavComponent.prototype._checkPaginationEnabled = /**\n     * @return {?}\n     */\n        function () {\n            this._showPaginationControls =\n                this.tabListScrollWidthHeightPix > this.elementRefOffSetWidthHeight;\n            if (!this._showPaginationControls) {\n                this.scrollDistance = 0;\n            }\n        };\n    /**\n     * @param {?} labelIndex\n     * @return {?}\n     */\n    NzTabsNavComponent.prototype._scrollToLabel = /**\n     * @param {?} labelIndex\n     * @return {?}\n     */\n        function (labelIndex) {\n            var /** @type {?} */ selectedLabel = this._labelWrappers\n                ? this._labelWrappers.toArray()[labelIndex]\n                : null;\n            if (!selectedLabel) {\n                return;\n            }\n            // The view length is the visible width of the tab labels.\n            var /** @type {?} */ labelBeforePos;\n            var /** @type {?} */ labelAfterPos;\n            if (this.nzPositionMode === 'horizontal') {\n                if (this._getLayoutDirection() === 'ltr') {\n                    labelBeforePos = selectedLabel.getOffsetLeft();\n                    labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n                }\n                else {\n                    labelAfterPos = this._tabList.nativeElement.offsetWidth - selectedLabel.getOffsetLeft();\n                    labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n                }\n            }\n            else {\n                labelBeforePos = selectedLabel.getOffsetTop();\n                labelAfterPos = labelBeforePos + selectedLabel.getOffsetHeight();\n            }\n            var /** @type {?} */ beforeVisiblePos = this.scrollDistance;\n            var /** @type {?} */ afterVisiblePos = this.scrollDistance + this.viewWidthHeightPix;\n            if (labelBeforePos < beforeVisiblePos) {\n                // Scroll header to move label to the before direction\n                this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n            }\n            else if (labelAfterPos > afterVisiblePos) {\n                // Scroll header to move label to the after direction\n                this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzTabsNavComponent.prototype._checkScrollingControls = /**\n     * @return {?}\n     */\n        function () {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance === 0;\n            this._disableScrollAfter = this.scrollDistance === this._getMaxScrollDistance();\n        };\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    NzTabsNavComponent.prototype._getMaxScrollDistance = /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n        function () {\n            return (this.tabListScrollWidthHeightPix - this.viewWidthHeightPix) || 0;\n        };\n    Object.defineProperty(NzTabsNavComponent.prototype, \"scrollDistance\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._scrollDistance;\n        },\n        /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n        set: /**\n         * Sets the distance in pixels that the tab header should be transformed in the X-axis.\n         * @param {?} v\n         * @return {?}\n         */ function (v) {\n            this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), v));\n            // Mark that the scroll distance has changed so that after the view is checked, the CSS\n            // transformation can move the header.\n            this._scrollDistanceChanged = true;\n            this._checkScrollingControls();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTabsNavComponent.prototype, \"viewWidthHeightPix\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            var /** @type {?} */ PAGINATION_PIX = 0;\n            if (this._showPaginationControls) {\n                PAGINATION_PIX = 64;\n            }\n            if (this.nzPositionMode === 'horizontal') {\n                return this._tabListContainer.nativeElement.offsetWidth - PAGINATION_PIX;\n            }\n            else {\n                return this._tabListContainer.nativeElement.offsetHeight - PAGINATION_PIX;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTabsNavComponent.prototype, \"tabListScrollWidthHeightPix\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            if (this.nzPositionMode === 'horizontal') {\n                return this._tabList.nativeElement.scrollWidth;\n            }\n            else {\n                return this._tabList.nativeElement.scrollHeight;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTabsNavComponent.prototype, \"elementRefOffSetWidthHeight\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            if (this.nzPositionMode === 'horizontal') {\n                return this._elementRef.nativeElement.offsetWidth;\n            }\n            else {\n                return this._elementRef.nativeElement.offsetHeight;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzTabsNavComponent.prototype._getLayoutDirection = /**\n     * @return {?}\n     */\n        function () {\n            return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n        };\n    /**\n     * @return {?}\n     */\n    NzTabsNavComponent.prototype._alignInkBarToSelectedTab = /**\n     * @return {?}\n     */\n        function () {\n            if (this.nzType === 'line') {\n                var /** @type {?} */ selectedLabelWrapper = this._labelWrappers && this._labelWrappers.length\n                    ? this._labelWrappers.toArray()[this.selectedIndex].elementRef.nativeElement\n                    : null;\n                if (this._inkBar) {\n                    this._inkBar.alignToElement(selectedLabelWrapper);\n                }\n            }\n        };\n    return NzTabsNavComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** code from https://github.com/angular/material2 */\n/**\n * @record\n */\nvar NzTabChangeEvent = /*@__PURE__*/ (function () {\n    function NzTabChangeEvent() {\n    }\n    return NzTabChangeEvent;\n}());\nvar NzTabSetComponent = /*@__PURE__*/ (function () {\n    function NzTabSetComponent(_renderer) {\n        this._renderer = _renderer;\n        this._prefixCls = 'ant-tabs';\n        this._tabPosition = 'top';\n        this._tabPositionMode = 'horizontal';\n        this._indexToSelect = 0;\n        this._selectedIndex = null;\n        this._isViewInit = false;\n        this._tabs = [];\n        this.nzAnimated = true;\n        this.nzShowPagination = true;\n        this.nzHide = false;\n        this.nzSelectChange = new EventEmitter(true);\n        this.nzSize = 'default';\n        this._type = 'line';\n        this.tabs = [];\n    }\n    Object.defineProperty(NzTabSetComponent.prototype, \"nzSelectedIndex\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._selectedIndex;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._indexToSelect = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTabSetComponent.prototype, \"nzSelectedIndexChange\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.nzSelectChange.pipe(map$1(function (event) { return event.index; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTabSetComponent.prototype, \"nzTabPosition\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._tabPosition;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (this._tabPosition === value) {\n                return;\n            }\n            this._tabPosition = value;\n            if ((this._tabPosition === 'top') || (this._tabPosition === 'bottom')) {\n                this._tabPositionMode = 'horizontal';\n            }\n            else {\n                this._tabPositionMode = 'vertical';\n            }\n            this._setPosition(value);\n            this._setClassMap();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTabSetComponent.prototype, \"nzType\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._type;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (this._type === value) {\n                return;\n            }\n            this._type = value;\n            if (this._type === 'card') {\n                this.nzAnimated = false;\n            }\n            this._setClassMap();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzTabSetComponent.prototype._setPosition = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            if (this._isViewInit) {\n                if (value === 'bottom') {\n                    this._renderer.insertBefore(this._hostContent.nativeElement, this._tabContent.nativeElement, this._tabNav._elementRef.nativeElement);\n                }\n                else {\n                    this._renderer.insertBefore(this._hostContent.nativeElement, this._tabNav._elementRef.nativeElement, this._tabContent.nativeElement);\n                }\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzTabSetComponent.prototype._setClassMap = /**\n     * @return {?}\n     */\n        function () {\n            this._classMap = (_a = {},\n                _a[this._prefixCls] = true,\n                _a[this._prefixCls + \"-vertical\"] = (this._tabPosition === 'left') || (this._tabPosition === 'right'),\n                _a[this._prefixCls + \"-\" + this._tabPosition] = this._tabPosition,\n                _a[this._prefixCls + \"-no-animation\"] = (this.nzAnimated === false) || (((this.nzAnimated)).tabPane === false),\n                _a[this._prefixCls + \"-\" + this._type] = this._type,\n                _a[this._prefixCls + \"-mini\"] = (this.nzSize === 'small'),\n                _a);\n            var _a;\n        };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    NzTabSetComponent.prototype.clickLabel = /**\n     * @param {?} index\n     * @return {?}\n     */\n        function (index) {\n            this.nzSelectedIndex = index;\n            this._tabs[index].nzClick.emit();\n        };\n    /**\n     * @return {?}\n     */\n    NzTabSetComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            this._setClassMap();\n        };\n    /**\n     * @return {?}\n     */\n    NzTabSetComponent.prototype.ngAfterContentChecked = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            // Clamp the next selected index to the bounds of 0 and the tabs length. Note the `|| 0`, which\n            // ensures that values like NaN can't get through and which would otherwise throw the\n            // component into an infinite loop (since Math.max(NaN, 0) === NaN).\n            var /** @type {?} */ indexToSelect = this._indexToSelect =\n                Math.min(this._tabs.length - 1, Math.max(this._indexToSelect || 0, 0));\n            // If there is a change in selected index, emit a change event. Should not trigger if\n            // the selected index has not yet been initialized.\n            if (this._selectedIndex !== indexToSelect && this._selectedIndex != null) {\n                this.nzSelectChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Setup the position for each tab and optionally setup an origin on the next selected tab.\n            this._tabs.forEach(function (tab, index) {\n                tab.position = index - indexToSelect;\n                // If there is already a selected tab, then set up an origin for the next selected tab\n                // if it doesn't have one already.\n                if (_this._selectedIndex != null && tab.position === 0 && !tab.origin) {\n                    tab.origin = indexToSelect - _this._selectedIndex;\n                }\n            });\n            this._selectedIndex = indexToSelect;\n        };\n    /**\n     * @return {?}\n     */\n    NzTabSetComponent.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n        function () {\n            this._isViewInit = true;\n            this._setPosition(this._tabPosition);\n        };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    NzTabSetComponent.prototype._createChangeEvent = /**\n     * @param {?} index\n     * @return {?}\n     */\n        function (index) {\n            var /** @type {?} */ event = new NzTabChangeEvent();\n            event.index = index;\n            if (this._tabs && this._tabs.length) {\n                event.tab = this._tabs[index];\n                this._tabs.forEach(function (item, i) {\n                    if (i !== index) {\n                        item.nzDeselect.emit();\n                    }\n                });\n                event.tab.nzSelect.emit();\n            }\n            return event;\n        };\n    Object.defineProperty(NzTabSetComponent.prototype, \"inkBarAnimated\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return (this.nzAnimated === true) || (((this.nzAnimated)).inkBar === true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTabSetComponent.prototype, \"tabPaneAnimated\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return (this.nzAnimated === true) || (((this.nzAnimated)).tabPane === true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return NzTabSetComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzTabComponent = /*@__PURE__*/ (function () {\n    function NzTabComponent(nzTabSetComponent) {\n        this.nzTabSetComponent = nzTabSetComponent;\n        this.disabled = false;\n        this.position = null;\n        this.origin = null;\n        this.nzSelect = new EventEmitter();\n        this.nzClick = new EventEmitter();\n        this.nzDeselect = new EventEmitter();\n    }\n    Object.defineProperty(NzTabComponent.prototype, \"nzDisabled\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.disabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this.disabled = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTabComponent.prototype, \"content\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzTabComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            this.nzTabSetComponent._tabs.push(this);\n        };\n    /**\n     * @return {?}\n     */\n    NzTabComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            this.nzTabSetComponent._tabs.splice(this.nzTabSetComponent._tabs.indexOf(this), 1);\n        };\n    return NzTabComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzTabsModule = /*@__PURE__*/ (function () {\n    function NzTabsModule() {\n    }\n    return NzTabsModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzCheckableTagComponent = /*@__PURE__*/ (function () {\n    function NzCheckableTagComponent(_elementRef, _render) {\n        this._elementRef = _elementRef;\n        this._render = _render;\n        this._checked = false;\n        this._closable = false;\n        this._prefixCls = 'ant-tag';\n        this._closed = false;\n        /**\n         * Event: emit before close\n         */\n        this.nzBeforeClose = new EventEmitter();\n        /**\n         * Event: emit after close\n         */\n        this.nzClose = new EventEmitter();\n        /**\n         * Event: emit on change\n         */\n        this.nzChange = new EventEmitter();\n    }\n    Object.defineProperty(NzCheckableTagComponent.prototype, \"nzChecked\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._checked;\n        },\n        set: /**\n         * Whether tag is checked\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._checked = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCheckableTagComponent.prototype, \"nzClosable\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._closable;\n        },\n        set: /**\n         * Whether tag is closable\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._closable = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCheckableTagComponent.prototype, \"_dataShow\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return !this._closed;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCheckableTagComponent.prototype, \"_backgroundColor\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            var /** @type {?} */ isPresetColor = this._isPresetColor(this.nzColor);\n            return (this.nzColor && !isPresetColor) ? this.nzColor : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    NzCheckableTagComponent.prototype._afterClose = /**\n     * @param {?} event\n     * @return {?}\n     */\n        function (event) {\n            if (this._closed) {\n                this.nzClose.emit(event);\n            }\n        };\n    Object.defineProperty(NzCheckableTagComponent.prototype, \"_tagCls\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            var /** @type {?} */ isPresetColor = this._isPresetColor(this.nzColor);\n            return _a = {},\n                _a[this._prefixCls] = true,\n                _a[this._prefixCls + \"-\" + this.nzColor] = isPresetColor,\n                _a[this._prefixCls + \"-has-color\"] = (this.nzColor && !isPresetColor),\n                _a[this._prefixCls + \"-checkable\"] = true,\n                _a[this._prefixCls + \"-checkable-checked\"] = this.nzChecked,\n                _a;\n            var _a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzCheckableTagComponent.prototype, \"_textClass\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._prefixCls + \"-text\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    NzCheckableTagComponent.prototype._handleClick = /**\n     * @param {?} event\n     * @return {?}\n     */\n        function (event) {\n            event.preventDefault();\n            this.nzChange.emit(!this.nzChecked);\n        };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    NzCheckableTagComponent.prototype._close = /**\n     * @param {?} event\n     * @return {?}\n     */\n        function (event) {\n            this.nzBeforeClose.emit(event);\n            if (event.defaultPrevented) {\n                return;\n            }\n            this._closed = true;\n        };\n    /**\n     * @param {?} color\n     * @return {?}\n     */\n    NzCheckableTagComponent.prototype._isPresetColor = /**\n     * @param {?} color\n     * @return {?}\n     */\n        function (color) {\n            return /^(pink|red|yellow|orange|cyan|green|blue|purple)(-inverse)?$/.test(color);\n        };\n    /**\n     * @return {?}\n     */\n    NzCheckableTagComponent.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n        function () {\n            this._render.addClass(this._elementRef.nativeElement, this._prefixCls + \"-root\");\n        };\n    return NzCheckableTagComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzTagComponent = /*@__PURE__*/ (function () {\n    function NzTagComponent(_elementRef, _render) {\n        this._elementRef = _elementRef;\n        this._render = _render;\n        this._closable = false;\n        this._prefixCls = 'ant-tag';\n        this._closed = false;\n        /**\n         * Event: emit before close\n         */\n        this.nzBeforeClose = new EventEmitter();\n        /**\n         * Event: emit after close\n         */\n        this.nzClose = new EventEmitter();\n    }\n    Object.defineProperty(NzTagComponent.prototype, \"nzClosable\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._closable;\n        },\n        set: /**\n         * Whether tag is closable\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._closable = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTagComponent.prototype, \"_dataShow\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return !this._closed;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTagComponent.prototype, \"_backgroundColor\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            var /** @type {?} */ isPresetColor = this._isPresetColor(this.nzColor);\n            return (this.nzColor && !isPresetColor) ? this.nzColor : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    NzTagComponent.prototype._afterClose = /**\n     * @param {?} event\n     * @return {?}\n     */\n        function (event) {\n            if (this._closed) {\n                this.nzClose.emit(event);\n            }\n        };\n    Object.defineProperty(NzTagComponent.prototype, \"_tagCls\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            var /** @type {?} */ isPresetColor = this._isPresetColor(this.nzColor);\n            return _a = {},\n                _a[this._prefixCls] = true,\n                _a[this._prefixCls + \"-\" + this.nzColor] = isPresetColor,\n                _a[this._prefixCls + \"-has-color\"] = (this.nzColor && !isPresetColor),\n                _a;\n            var _a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzTagComponent.prototype, \"_textClass\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._prefixCls + \"-text\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    NzTagComponent.prototype._close = /**\n     * @param {?} event\n     * @return {?}\n     */\n        function (event) {\n            this.nzBeforeClose.emit(event);\n            if (event.defaultPrevented) {\n                return;\n            }\n            this._closed = true;\n        };\n    /**\n     * @param {?} color\n     * @return {?}\n     */\n    NzTagComponent.prototype._isPresetColor = /**\n     * @param {?} color\n     * @return {?}\n     */\n        function (color) {\n            return /^(pink|red|yellow|orange|cyan|green|blue|purple)(-inverse)?$/.test(color);\n        };\n    /**\n     * @return {?}\n     */\n    NzTagComponent.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n        function () {\n            this._render.addClass(this._elementRef.nativeElement, this._prefixCls + \"-root\");\n        };\n    return NzTagComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzTagModule = /*@__PURE__*/ (function () {\n    function NzTagModule() {\n    }\n    return NzTagModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzTimelineItemComponent = /*@__PURE__*/ (function () {\n    function NzTimelineItemComponent() {\n        this.itemHeadClass = { 'ant-timeline-item-head-blue': true };\n        this._color = 'blue';\n        this._custom = false;\n        this._lastItem = false;\n    }\n    Object.defineProperty(NzTimelineItemComponent.prototype, \"nzColor\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._color;\n        },\n        set: /**\n         * @param {?} color\n         * @return {?}\n         */ function (color) {\n            this._color = color;\n            // TODO: There is no removal process, is the result correct?\n            if (color === 'green') {\n                this.itemHeadClass['ant-timeline-item-head-green'] = true;\n            }\n            else if (color === 'red') {\n                this.itemHeadClass['ant-timeline-item-head-red'] = true;\n            }\n            else {\n                this.itemHeadClass['ant-timeline-item-head-blue'] = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzTimelineItemComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            if (this._customContent) {\n                this._custom = true;\n            }\n        };\n    return NzTimelineItemComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzTimelineComponent = /*@__PURE__*/ (function () {\n    function NzTimelineComponent() {\n        this._isPending = false;\n        this.items = [];\n    }\n    /**\n     * @return {?}\n     */\n    NzTimelineComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            if (this._pendingContent) {\n                this._isPending = true;\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzTimelineComponent.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            setTimeout(function (_) {\n                if (_this._listOfTimeline && _this._listOfTimeline.length) {\n                    var /** @type {?} */ listArray = _this._listOfTimeline.toArray();\n                    listArray[listArray.length - 1]._lastItem = true;\n                }\n            });\n        };\n    return NzTimelineComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzTimelineModule = /*@__PURE__*/ (function () {\n    function NzTimelineModule() {\n    }\n    return NzTimelineModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzTransferListComponent = /*@__PURE__*/ (function () {\n    function NzTransferListComponent(_el, _renderer, differs) {\n        this._el = _el;\n        this._renderer = _renderer;\n        this._showSearch = false;\n        // region: fields\n        this.direction = '';\n        this.titleText = '';\n        this.dataSource = [];\n        this.itemUnit = '';\n        this.itemsUnit = '';\n        this.filter = '';\n        // events\n        this.handleSelectAll = new EventEmitter();\n        this.handleSelect = new EventEmitter();\n        this.filterChange = new EventEmitter();\n        // endregion\n        // region: styles\n        this._prefixCls = 'ant-transfer-list';\n        this._classList = [];\n        // endregion\n        // region: select all\n        this.stat = {\n            checkAll: false,\n            checkHalf: false,\n            checkCount: 0,\n            shownCount: 0\n        };\n        this._listDiffer = differs.find([]).create(null);\n    }\n    Object.defineProperty(NzTransferListComponent.prototype, \"showSearch\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._showSearch;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._showSearch = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzTransferListComponent.prototype._setClassMap = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            this._classList.forEach(function (cls) { return _this._renderer.removeClass(_this._el.nativeElement, cls); });\n            this._classList = [\n                this._prefixCls,\n                !!this.footer && this._prefixCls + \"-with-footer\"\n            ].filter(function (item) { return !!item; });\n            this._classList.forEach(function (cls) { return _this._renderer.addClass(_this._el.nativeElement, cls); });\n        };\n    /**\n     * @param {?} status\n     * @return {?}\n     */\n    NzTransferListComponent.prototype.onHandleSelectAll = /**\n     * @param {?} status\n     * @return {?}\n     */\n        function (status) {\n            this.dataSource.forEach(function (item) {\n                if (!item.disabled && !item._hiden) {\n                    item.checked = status;\n                }\n            });\n            // // ngModelChange 事件内对状态的变更会无效，因此使用延迟改变执行顺序\n            // setTimeout(() => this.updateCheckStatus());\n            this.updateCheckStatus();\n            this.handleSelectAll.emit(status);\n        };\n    /**\n     * @return {?}\n     */\n    NzTransferListComponent.prototype.updateCheckStatus = /**\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ validCount = this.dataSource.filter(function (w) { return !w.disabled; }).length;\n            this.stat.checkCount = this.dataSource.filter(function (w) { return w.checked && !w.disabled; }).length;\n            this.stat.shownCount = this.dataSource.filter(function (w) { return !w._hiden; }).length;\n            this.stat.checkAll = validCount > 0 && validCount === this.stat.checkCount;\n            this.stat.checkHalf = this.stat.checkCount > 0 && !this.stat.checkAll;\n        };\n    // endregion\n    // region: search\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NzTransferListComponent.prototype.handleFilter = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            var _this = this;\n            this.filter = value;\n            this.dataSource.forEach(function (item) {\n                item._hiden = value.length > 0 && !_this.matchFilter(value, item);\n            });\n            this.stat.shownCount = this.dataSource.filter(function (w) { return !w._hiden; }).length;\n            this.filterChange.emit({ direction: this.direction, value: value });\n        };\n    /**\n     * @return {?}\n     */\n    NzTransferListComponent.prototype.handleClear = /**\n     * @return {?}\n     */\n        function () {\n            this.handleFilter('');\n        };\n    /**\n     * @param {?} text\n     * @param {?} item\n     * @return {?}\n     */\n    NzTransferListComponent.prototype.matchFilter = /**\n     * @param {?} text\n     * @param {?} item\n     * @return {?}\n     */\n        function (text, item) {\n            if (this.filterOption) {\n                return this.filterOption(text, item);\n            }\n            return item.title.includes(text);\n        };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NzTransferListComponent.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n        function (changes) {\n            if ('footer' in changes) {\n                this._setClassMap();\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzTransferListComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            this._setClassMap();\n        };\n    /**\n     * @return {?}\n     */\n    NzTransferListComponent.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ change = this._listDiffer.diff(this.dataSource);\n            if (change) {\n                this.updateCheckStatus();\n            }\n        };\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    NzTransferListComponent.prototype._handleSelect = /**\n     * @param {?} item\n     * @return {?}\n     */\n        function (item) {\n            if (item.disabled) {\n                return;\n            }\n            item.checked = !item.checked;\n            this.updateCheckStatus();\n            this.handleSelect.emit(item);\n        };\n    return NzTransferListComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzTransferSearchComponent = /*@__PURE__*/ (function () {\n    function NzTransferSearchComponent() {\n        this.valueChanged = new EventEmitter();\n        this.valueClear = new EventEmitter();\n    }\n    // endregion\n    /**\n     * @return {?}\n     */\n    NzTransferSearchComponent.prototype._handle = /**\n     * @return {?}\n     */\n        function () {\n            this.valueChanged.emit(this.value);\n        };\n    /**\n     * @return {?}\n     */\n    NzTransferSearchComponent.prototype._clear = /**\n     * @return {?}\n     */\n        function () {\n            this.value = '';\n            this.valueClear.emit();\n        };\n    return NzTransferSearchComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n/**\n * @record\n */\n/**\n * @record\n */\n/**\n * @record\n */\nvar NzTransferComponent = /*@__PURE__*/ (function () {\n    // endregion\n    function NzTransferComponent(_locale, el, cd) {\n        var _this = this;\n        this._locale = _locale;\n        this.el = el;\n        this.cd = cd;\n        this._showSearch = false;\n        this.leftFilter = '';\n        this.rightFilter = '';\n        // region: fields\n        this.nzDataSource = [];\n        this.nzTitles = this._locale.translate('Transfer.titles').split(',');\n        this.nzOperations = [];\n        this.nzItemUnit = this._locale.translate('Transfer.itemUnit');\n        this.nzItemsUnit = this._locale.translate('Transfer.itemsUnit');\n        this.canMove = function (arg) { return of$1(arg.list); };\n        this.nzSearchPlaceholder = this._locale.translate('Transfer.searchPlaceholder');\n        this.nzNotFoundContent = this._locale.translate('Transfer.notFoundContent');\n        // events\n        this.nzChange = new EventEmitter();\n        this.nzSearchChange = new EventEmitter();\n        this.nzSelectChange = new EventEmitter();\n        // endregion\n        // region: process data\n        // left\n        this.leftDataSource = [];\n        // right\n        this.rightDataSource = [];\n        this.handleLeftSelectAll = function (checked) { return _this.handleSelect('left', checked); };\n        this.handleRightSelectAll = function (checked) { return _this.handleSelect('right', checked); };\n        this.handleLeftSelect = function (item) { return _this.handleSelect('left', item.checked, item); };\n        this.handleRightSelect = function (item) { return _this.handleSelect('right', item.checked, item); };\n        // endregion\n        // region: operation\n        this.leftActive = false;\n        this.rightActive = false;\n        this.moveToLeft = function () { return _this.moveTo('left'); };\n        this.moveToRight = function () { return _this.moveTo('right'); };\n    }\n    Object.defineProperty(NzTransferComponent.prototype, \"nzShowSearch\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._showSearch;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._showSearch = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzTransferComponent.prototype.splitDataSource = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            this.leftDataSource = [];\n            this.rightDataSource = [];\n            this.nzDataSource.forEach(function (record) {\n                if (record.direction === 'right') {\n                    _this.rightDataSource.push(record);\n                }\n                else {\n                    _this.leftDataSource.push(record);\n                }\n            });\n        };\n    /**\n     * @param {?} direction\n     * @return {?}\n     */\n    NzTransferComponent.prototype.getCheckedData = /**\n     * @param {?} direction\n     * @return {?}\n     */\n        function (direction) {\n            return this[direction === 'left' ? 'leftDataSource' : 'rightDataSource'].filter(function (w) { return w.checked; });\n        };\n    /**\n     * @param {?} direction\n     * @param {?} checked\n     * @param {?=} item\n     * @return {?}\n     */\n    NzTransferComponent.prototype.handleSelect = /**\n     * @param {?} direction\n     * @param {?} checked\n     * @param {?=} item\n     * @return {?}\n     */\n        function (direction, checked, item) {\n            var /** @type {?} */ list = this.getCheckedData(direction);\n            this.updateOperationStatus(direction, list.length);\n            this.nzSelectChange.emit({ direction: direction, checked: checked, list: list, item: item });\n        };\n    /**\n     * @param {?} ret\n     * @return {?}\n     */\n    NzTransferComponent.prototype.handleFilterChange = /**\n     * @param {?} ret\n     * @return {?}\n     */\n        function (ret) {\n            this.nzSearchChange.emit(ret);\n            this.cd.detectChanges();\n        };\n    /**\n     * @param {?} direction\n     * @param {?=} count\n     * @return {?}\n     */\n    NzTransferComponent.prototype.updateOperationStatus = /**\n     * @param {?} direction\n     * @param {?=} count\n     * @return {?}\n     */\n        function (direction, count) {\n            this[direction === 'right' ? 'leftActive' : 'rightActive'] = (typeof count === 'undefined' ? this.getCheckedData(direction).filter(function (w) { return !w.disabled; }).length : count) > 0;\n            this.cd.detectChanges();\n        };\n    /**\n     * @param {?} direction\n     * @return {?}\n     */\n    NzTransferComponent.prototype.moveTo = /**\n     * @param {?} direction\n     * @return {?}\n     */\n        function (direction) {\n            var _this = this;\n            var /** @type {?} */ oppositeDirection = direction === 'left' ? 'right' : 'left';\n            this.updateOperationStatus(oppositeDirection, 0);\n            var /** @type {?} */ datasource = direction === 'left' ? this.rightDataSource : this.leftDataSource;\n            var /** @type {?} */ moveList = datasource.filter(function (item) { return item.checked === true && !item.disabled; });\n            this.canMove({ direction: direction, list: moveList })\n                .subscribe(function (newMoveList) { return _this.truthMoveTo(direction, newMoveList.filter(function (i) { return !!i; })); }, function () { return moveList.forEach(function (i) { return i.checked = false; }); });\n        };\n    /**\n     * @param {?} direction\n     * @param {?} list\n     * @return {?}\n     */\n    NzTransferComponent.prototype.truthMoveTo = /**\n     * @param {?} direction\n     * @param {?} list\n     * @return {?}\n     */\n        function (direction, list) {\n            var /** @type {?} */ oppositeDirection = direction === 'left' ? 'right' : 'left';\n            var /** @type {?} */ datasource = direction === 'left' ? this.rightDataSource : this.leftDataSource;\n            var /** @type {?} */ targetDatasource = direction === 'left' ? this.leftDataSource : this.rightDataSource;\n            for (var _i = 0, list_1 = list; _i < list_1.length; _i++) {\n                var item = list_1[_i];\n                var /** @type {?} */ idx = datasource.indexOf(item);\n                if (idx === -1)\n                    continue;\n                item.checked = false;\n                targetDatasource.push(item);\n                datasource.splice(idx, 1);\n            }\n            this.updateOperationStatus(oppositeDirection);\n            this.nzChange.emit({\n                from: oppositeDirection,\n                to: direction,\n                list: list\n            });\n            // this.nzSelectChange.emit({ direction: oppositeDirection, list: [] });\n        };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NzTransferComponent.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n        function (changes) {\n            if ('nzDataSource' in changes || 'nzTargetKeys' in changes) {\n                this.splitDataSource();\n                this.updateOperationStatus('left');\n                this.updateOperationStatus('right');\n            }\n            this.cd.detectChanges();\n        };\n    return NzTransferComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzTransferModule = /*@__PURE__*/ (function () {\n    function NzTransferModule() {\n    }\n    return NzTransferModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzUploadBtnComponent = /*@__PURE__*/ (function () {\n    // endregion\n    function NzUploadBtnComponent(http$$1, _el, _renderer, cd) {\n        this.http = http$$1;\n        this._el = _el;\n        this._renderer = _renderer;\n        this.cd = cd;\n        this.reqs = {};\n        this.inited = false;\n        this.destroy = false;\n        // region: fields\n        this.classes = [];\n        // region: styles\n        this._prefixCls = 'ant-upload';\n        this._classList = [];\n        if (!http$$1)\n            throw new Error(\"Not found 'HttpClient', You can import 'HttpClientModel' in your root module.\");\n    }\n    /**\n     * @return {?}\n     */\n    NzUploadBtnComponent.prototype.onClick = /**\n     * @return {?}\n     */\n        function () {\n            if (this.options.disabled || !this.file)\n                return;\n            ((this.file.nativeElement)).click();\n        };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NzUploadBtnComponent.prototype.onKeyDown = /**\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            if (this.options.disabled)\n                return;\n            if (e.key === 'Enter') {\n                this.onClick();\n            }\n        };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NzUploadBtnComponent.prototype.onFileDrop = /**\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            var _this = this;\n            if (this.options.disabled)\n                return;\n            if (e.type === 'dragover') {\n                e.preventDefault();\n                return;\n            }\n            var /** @type {?} */ files = Array.prototype.slice.call(e.dataTransfer.files).filter(function (file) { return _this.attrAccept(file, _this.options.accept); });\n            this.uploadFiles(files);\n            e.preventDefault();\n        };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NzUploadBtnComponent.prototype.onChange = /**\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            if (this.options.disabled)\n                return;\n            this.uploadFiles(e.target.files);\n            e.target.value = '';\n        };\n    /**\n     * @param {?} file\n     * @param {?} acceptedFiles\n     * @return {?}\n     */\n    NzUploadBtnComponent.prototype.attrAccept = /**\n     * @param {?} file\n     * @param {?} acceptedFiles\n     * @return {?}\n     */\n        function (file, acceptedFiles) {\n            if (file && acceptedFiles) {\n                var /** @type {?} */ acceptedFilesArray = Array.isArray(acceptedFiles)\n                    ? acceptedFiles\n                    : acceptedFiles.split(',');\n                var /** @type {?} */ fileName_1 = file.name || '';\n                var /** @type {?} */ mimeType_1 = file.type || '';\n                var /** @type {?} */ baseMimeType_1 = mimeType_1.replace(/\\/.*$/, '');\n                return acceptedFilesArray.some(function (type) {\n                    var /** @type {?} */ validType = type.trim();\n                    if (validType.charAt(0) === '.') {\n                        return fileName_1.toLowerCase().indexOf(validType.toLowerCase(), fileName_1.toLowerCase().length - validType.toLowerCase().length) !== -1;\n                    }\n                    else if (/\\/\\*$/.test(validType)) {\n                        // This is something like a image/* mime type\n                        return baseMimeType_1 === validType.replace(/\\/.*$/, '');\n                    }\n                    return mimeType_1 === validType;\n                });\n            }\n            return true;\n        };\n    /**\n     * @param {?} fileList\n     * @return {?}\n     */\n    NzUploadBtnComponent.prototype.uploadFiles = /**\n     * @param {?} fileList\n     * @return {?}\n     */\n        function (fileList) {\n            var _this = this;\n            var /** @type {?} */ postFiles = Array.prototype.slice.call(fileList);\n            this.options.filters.forEach(function (f) { return postFiles = f.fn(postFiles); });\n            postFiles.forEach(function (file) {\n                file.uid = Math.random().toString(36).substring(2);\n                _this.upload(file, postFiles);\n            });\n        };\n    /**\n     * @param {?} file\n     * @param {?} fileList\n     * @return {?}\n     */\n    NzUploadBtnComponent.prototype.upload = /**\n     * @param {?} file\n     * @param {?} fileList\n     * @return {?}\n     */\n        function (file, fileList) {\n            var _this = this;\n            if (!this.options.beforeUpload) {\n                return this.post(file);\n            }\n            var /** @type {?} */ before = this.options.beforeUpload(file, fileList);\n            if (before instanceof Observable$1) {\n                before.subscribe(function (processedFile) {\n                    var /** @type {?} */ processedFileType = Object.prototype.toString.call(processedFile);\n                    if (processedFileType === '[object File]' || processedFileType === '[object Blob]') {\n                        _this.post(processedFile);\n                    }\n                    else {\n                        _this.post(file);\n                    }\n                }, function (err) {\n                    // tslint:disable-next-line:no-unused-expression\n                    console && console.log(err);\n                });\n            }\n            else if (before !== false) {\n                return this.post(file);\n            }\n        };\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    NzUploadBtnComponent.prototype.post = /**\n     * @param {?} file\n     * @return {?}\n     */\n        function (file) {\n            var _this = this;\n            if (this.destroy)\n                return;\n            var /** @type {?} */ opt = this.options;\n            var uid = file.uid;\n            var data = opt.data;\n            if (typeof data === 'function') {\n                data = data(file);\n            }\n            this.reqs[uid] = (opt.customRequest || this.xhr).call(this, {\n                action: opt.action,\n                name: opt.name,\n                headers: opt.headers,\n                file: file,\n                data: data,\n                withCredentials: opt.withCredentials,\n                onProgress: opt.onProgress ? function (e) {\n                    opt.onProgress(e, file);\n                } : null,\n                onSuccess: function (ret, xhr) {\n                    delete _this.reqs[uid];\n                    opt.onSuccess(ret, file, xhr);\n                },\n                onError: function (xhr) {\n                    delete _this.reqs[uid];\n                    opt.onError(xhr, file);\n                }\n            });\n            opt.onStart(file);\n        };\n    /**\n     * @param {?} args\n     * @return {?}\n     */\n    NzUploadBtnComponent.prototype.xhr = /**\n     * @param {?} args\n     * @return {?}\n     */\n        function (args) {\n            var _this = this;\n            var /** @type {?} */ formData = new FormData();\n            formData.append(args.name, args.file);\n            if (args.data) {\n                Object.keys(args.data).map(function (key) {\n                    formData.append(key, args.data[key]);\n                });\n            }\n            if (!args.headers)\n                args.headers = {};\n            if (args.headers['X-Requested-With'] !== null) {\n                args.headers['X-Requested-With'] = \"XMLHttpRequest\";\n            }\n            var /** @type {?} */ req = new HttpRequest('POST', args.action, formData, {\n                reportProgress: true,\n                withCredentials: args.withCredentials,\n                headers: new HttpHeaders(args.headers)\n            });\n            return this.http.request(req).subscribe(function (event) {\n                if (event.type === HttpEventType.UploadProgress) {\n                    if (event.total > 0) {\n                        event.percent = event.loaded / event.total * 100;\n                    }\n                    args.onProgress(event);\n                }\n                else if (event instanceof HttpResponse) {\n                    args.onSuccess(event.body, event);\n                }\n            }, function (err) {\n                _this.abort(args);\n                args.onError(err);\n            });\n        };\n    /**\n     * @param {?=} file\n     * @return {?}\n     */\n    NzUploadBtnComponent.prototype.abort = /**\n     * @param {?=} file\n     * @return {?}\n     */\n        function (file) {\n            var _this = this;\n            if (file) {\n                var /** @type {?} */ uid = file;\n                if (file && file.uid) {\n                    uid = file.uid;\n                }\n                if (this.reqs[uid]) {\n                    this.reqs[uid].unsubscribe();\n                    delete this.reqs[uid];\n                }\n            }\n            else {\n                Object.keys(this.reqs).forEach(function (uid) {\n                    if (_this.reqs[uid]) {\n                        _this.reqs[uid].unsubscribe();\n                    }\n                    delete _this.reqs[uid];\n                });\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzUploadBtnComponent.prototype._setClassMap = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            this._classList.forEach(function (cls) { return _this._renderer.removeClass(_this._el.nativeElement, cls); });\n            this._classList = [\n                this._prefixCls,\n                this.options.disabled && this._prefixCls + \"-disabled\"\n            ].concat(this.classes).filter(function (item) { return !!item; });\n            this._classList.forEach(function (cls) { return _this._renderer.addClass(_this._el.nativeElement, cls); });\n            this.cd.detectChanges();\n        };\n    /**\n     * @return {?}\n     */\n    NzUploadBtnComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            this.inited = true;\n            this._setClassMap();\n        };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NzUploadBtnComponent.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n        function (changes) {\n            if (this.inited) {\n                this._setClassMap();\n            }\n        };\n    /**\n     * @return {?}\n     */\n    NzUploadBtnComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            this.destroy = true;\n            this.abort();\n        };\n    return NzUploadBtnComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzUploadListComponent = /*@__PURE__*/ (function () {\n    // endregion\n    function NzUploadListComponent(_el, _renderer, _locale) {\n        this._el = _el;\n        this._renderer = _renderer;\n        this._locale = _locale;\n        // endregion\n        // region: styles\n        this._prefixCls = 'ant-upload-list';\n        this._classList = [];\n        this.locale = {\n            uploading: this._locale.translate('Upload.uploading'),\n            previewFile: this._locale.translate('Upload.previewFile'),\n            removeFile: this._locale.translate('Upload.removeFile'),\n        };\n    }\n    /**\n     * @return {?}\n     */\n    NzUploadListComponent.prototype._setClassMap = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            this._classList.forEach(function (cls) { return _this._renderer.removeClass(_this._el.nativeElement, cls); });\n            this._classList = [\n                this._prefixCls,\n                this._prefixCls + \"-\" + this.listType\n            ].filter(function (item) { return !!item; });\n            this._classList.forEach(function (cls) { return _this._renderer.addClass(_this._el.nativeElement, cls); });\n        };\n    /**\n     * @param {?} file\n     * @param {?} e\n     * @return {?}\n     */\n    NzUploadListComponent.prototype.handlePreview = /**\n     * @param {?} file\n     * @param {?} e\n     * @return {?}\n     */\n        function (file, e) {\n            if (!this.onPreview)\n                return;\n            e.preventDefault();\n            return this.onPreview(file);\n        };\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    NzUploadListComponent.prototype.handleClose = /**\n     * @param {?} file\n     * @return {?}\n     */\n        function (file) {\n            if (this.onRemove)\n                this.onRemove(file);\n        };\n    /**\n     * @return {?}\n     */\n    NzUploadListComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n        };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NzUploadListComponent.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n        function (changes) {\n            this._setClassMap();\n        };\n    return NzUploadListComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzUploadComponent = /*@__PURE__*/ (function () {\n    // endregion\n    function NzUploadComponent(cd, _locale) {\n        var _this = this;\n        this.cd = cd;\n        this._locale = _locale;\n        this.inited = false;\n        // region: fields\n        this.nzType = 'select';\n        this.nzLimit = 0;\n        this.nzSize = 0;\n        this.nzFilter = [];\n        this.nzFileList = [];\n        this.nzFileListChange = new EventEmitter();\n        this._disabled = false;\n        this.nzListType = 'text';\n        this._multiple = false;\n        this.nzName = 'file';\n        this._showUploadList = true;\n        this._showBtn = true;\n        this._withCredentials = false;\n        this.nzChange = new EventEmitter();\n        this.uploadErrorText = this._locale.translate('Upload.uploadError');\n        this.onStart = function (file) {\n            if (!_this.nzFileList)\n                _this.nzFileList = [];\n            var /** @type {?} */ targetItem = _this.fileToObject(file);\n            targetItem.status = 'uploading';\n            _this.nzFileList.push(targetItem);\n            _this.genThumb(targetItem);\n            _this.nzFileListChange.emit(_this.nzFileList);\n            _this.nzChange.emit({ file: targetItem, fileList: _this.nzFileList });\n            // fix ie progress\n            if (!((window)).FormData) {\n                _this.autoUpdateProgress(targetItem);\n            }\n            _this.cd.detectChanges();\n        };\n        this.onProgress = function (e, file) {\n            var /** @type {?} */ fileList = _this.nzFileList;\n            var /** @type {?} */ targetItem = _this.getFileItem(file, fileList);\n            // removed\n            if (!targetItem)\n                return;\n            targetItem.percent = e.percent;\n            _this.nzChange.emit({\n                event: e,\n                file: __assign({}, targetItem),\n                fileList: _this.nzFileList,\n            });\n            _this.cd.detectChanges();\n        };\n        this.onSuccess = function (res, file, xhr) {\n            _this.clearProgressTimer();\n            var /** @type {?} */ fileList = _this.nzFileList;\n            var /** @type {?} */ targetItem = _this.getFileItem(file, fileList);\n            // removed\n            if (!targetItem)\n                return;\n            targetItem.status = 'done';\n            targetItem.response = res;\n            _this.nzChange.emit({\n                file: __assign({}, targetItem),\n                fileList: fileList,\n            });\n            _this.cd.detectChanges();\n        };\n        this.onError = function (err, file) {\n            _this.clearProgressTimer();\n            var /** @type {?} */ fileList = _this.nzFileList;\n            var /** @type {?} */ targetItem = _this.getFileItem(file, fileList);\n            // removed\n            if (!targetItem)\n                return;\n            targetItem.error = err;\n            targetItem.status = 'error';\n            targetItem[\"message\"] = _this.genErr(file);\n            _this.nzChange.emit({\n                file: __assign({}, targetItem),\n                fileList: fileList,\n            });\n            _this.cd.detectChanges();\n        };\n        // endregion\n        // region: list\n        this.onRemove = function (file) {\n            _this.upload.abort(file);\n            file.status = 'removed';\n            (((_this.nzRemove ? _this.nzRemove instanceof Observable$1 ? _this.nzRemove : of$1(_this.nzRemove(file)) : of$1(true))))\n                .pipe(filter$1(function (res) { return res; }))\n                .subscribe(function (res) {\n                var /** @type {?} */ removedFileList = _this.removeFileItem(file, _this.nzFileList);\n                if (removedFileList) {\n                    _this.nzFileList = removedFileList;\n                    _this.nzChange.emit({\n                        file: file,\n                        fileList: removedFileList\n                    });\n                    _this.nzFileListChange.emit(_this.nzFileList);\n                    _this.cd.detectChanges();\n                }\n            });\n        };\n        // endregion\n        // region: styles\n        this._prefixCls = 'ant-upload';\n        this._classList = [];\n    }\n    Object.defineProperty(NzUploadComponent.prototype, \"nzDisabled\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._disabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._disabled = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzUploadComponent.prototype, \"nzMultiple\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._multiple;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._multiple = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzUploadComponent.prototype, \"nzShowUploadList\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._showUploadList;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._showUploadList = typeof value === 'boolean' ? toBoolean(value) : value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzUploadComponent.prototype, \"nzShowButton\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._showBtn;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._showBtn = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NzUploadComponent.prototype, \"nzWithCredentials\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._withCredentials;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._withCredentials = toBoolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NzUploadComponent.prototype.zipOptions = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            if (typeof this.nzShowUploadList === 'boolean' && this.nzShowUploadList) {\n                this.nzShowUploadList = {\n                    showPreviewIcon: true,\n                    showRemoveIcon: true\n                };\n            }\n            // filters\n            var /** @type {?} */ filters = this.nzFilter.slice();\n            if (this.nzMultiple && this.nzLimit > 0 && filters.findIndex(function (w) { return w.name === 'limit'; }) === -1) {\n                filters.push({\n                    name: 'limit',\n                    fn: function (fileList) { return fileList.slice(-_this.nzLimit); }\n                });\n            }\n            if (this.nzSize > 0 && filters.findIndex(function (w) { return w.name === 'size'; }) === -1) {\n                filters.push({\n                    name: 'size',\n                    fn: function (fileList) { return fileList.filter(function (w) { return (w.size / 1024) <= _this.nzSize; }); }\n                });\n            }\n            if (this.nzFileType && this.nzFileType.length > 0 && filters.findIndex(function (w) { return w.name === 'type'; }) === -1) {\n                var /** @type {?} */ types_1 = this.nzFileType.split(',');\n                filters.push({\n                    name: 'type',\n                    fn: function (fileList) { return fileList.filter(function (w) { return ~types_1.indexOf(w.type); }); }\n                });\n            }\n            this._btnOptions = {\n                disabled: this.nzDisabled,\n                accept: this.nzAccept,\n                action: this.nzAction,\n                beforeUpload: this.nzBeforeUpload,\n                customRequest: this.nzCustomRequest,\n                data: this.nzData,\n                headers: this.nzHeaders,\n                name: this.nzName,\n                multiple: this.nzMultiple,\n                withCredentials: this.nzWithCredentials,\n                filters: filters,\n                onStart: this.onStart,\n                onProgress: this.onProgress,\n                onSuccess: this.onSuccess,\n                onError: this.onError\n            };\n            return this;\n        };\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    NzUploadComponent.prototype.fileToObject = /**\n     * @param {?} file\n     * @return {?}\n     */\n        function (file) {\n            return {\n                lastModified: file.lastModified,\n                lastModifiedDate: file.lastModifiedDate,\n                name: file.filename || file.name,\n                size: file.size,\n                type: file.type,\n                uid: file.uid,\n                response: file.response,\n                error: file.error,\n                percent: 0,\n                // tslint:disable-next-line:no-angle-bracket-type-assertion\n                originFileObj: /** @type {?} */ (file)\n            };\n        };\n    /**\n     * @param {?} file\n     * @param {?} fileList\n     * @return {?}\n     */\n    NzUploadComponent.prototype.getFileItem = /**\n     * @param {?} file\n     * @param {?} fileList\n     * @return {?}\n     */\n        function (file, fileList) {\n            var /** @type {?} */ matchKey = file.uid !== undefined ? 'uid' : 'name';\n            return fileList.filter(function (item) { return item[matchKey] === file[matchKey]; })[0];\n        };\n    /**\n     * @param {?} file\n     * @param {?} fileList\n     * @return {?}\n     */\n    NzUploadComponent.prototype.removeFileItem = /**\n     * @param {?} file\n     * @param {?} fileList\n     * @return {?}\n     */\n        function (file, fileList) {\n            var /** @type {?} */ matchKey = file.uid !== undefined ? 'uid' : 'name';\n            var /** @type {?} */ removed = fileList.filter(function (item) { return item[matchKey] !== file[matchKey]; });\n            if (removed.length === fileList.length) {\n                return null;\n            }\n            return removed;\n        };\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    NzUploadComponent.prototype.genErr = /**\n     * @param {?} file\n     * @return {?}\n     */\n        function (file) {\n            return file.response && typeof file.response === 'string' ?\n                file.response :\n                (file.error && file.error.statusText) || this.uploadErrorText;\n        };\n    /**\n     * @return {?}\n     */\n    NzUploadComponent.prototype.clearProgressTimer = /**\n     * @return {?}\n     */\n        function () {\n            clearInterval(this.progressTimer);\n        };\n    /**\n     * @return {?}\n     */\n    NzUploadComponent.prototype.genPercentAdd = /**\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ k = 0.1;\n            var /** @type {?} */ i = 0.01;\n            var /** @type {?} */ end = 0.98;\n            return function (s) {\n                var /** @type {?} */ start = s;\n                if (start >= end) {\n                    return start;\n                }\n                start += k;\n                k = k - i;\n                if (k < 0.001) {\n                    k = 0.001;\n                }\n                return start * 100;\n            };\n        };\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    NzUploadComponent.prototype.autoUpdateProgress = /**\n     * @param {?} file\n     * @return {?}\n     */\n        function (file) {\n            var _this = this;\n            var /** @type {?} */ getPercent = this.genPercentAdd();\n            var /** @type {?} */ curPercent = 0;\n            this.clearProgressTimer();\n            this.progressTimer = setInterval(function () {\n                curPercent = getPercent(curPercent);\n                _this.onProgress({\n                    percent: curPercent,\n                }, file);\n            }, 200);\n        };\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    NzUploadComponent.prototype.genThumb = /**\n     * @param {?} file\n     * @return {?}\n     */\n        function (file) {\n            if (typeof document === 'undefined' ||\n                typeof window === 'undefined' ||\n                !((window)).FileReader || !((window)).File ||\n                !(file.originFileObj instanceof File) ||\n                file.thumbUrl !== undefined) {\n                return;\n            }\n            file.thumbUrl = '';\n            var /** @type {?} */ reader = new FileReader();\n            reader.onloadend = function () { return file.thumbUrl = reader.result; };\n            reader.readAsDataURL(file.originFileObj);\n        };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NzUploadComponent.prototype.fileDrop = /**\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            if (e.type === this.dragState)\n                return;\n            this.dragState = e.type;\n            this._setClassMap();\n        };\n    /**\n     * @return {?}\n     */\n    NzUploadComponent.prototype._setClassMap = /**\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ subCls = [];\n            if (this.nzType === 'drag') {\n                subCls = [\n                    this.nzFileList.some(function (file) { return file.status === 'uploading'; }) && this._prefixCls + \"-drag-uploading\",\n                    this.dragState === 'dragover' && this._prefixCls + \"-drag-hover\"\n                ];\n            }\n            else {\n                subCls = [\n                    this._prefixCls + \"-select-\" + this.nzListType\n                ];\n            }\n            this._classList = [\n                this._prefixCls,\n                this._prefixCls + \"-\" + this.nzType\n            ].concat(subCls, [\n                this.nzDisabled && this._prefixCls + \"-disabled\"\n            ]).filter(function (item) { return !!item; });\n            this.cd.detectChanges();\n        };\n    // endregion\n    /**\n     * @return {?}\n     */\n    NzUploadComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            this.inited = true;\n        };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NzUploadComponent.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n        function (changes) {\n            var _this = this;\n            if (changes.nzFileList)\n                (this.nzFileList || []).forEach(function (file) { return file[\"message\"] = _this.genErr(file); });\n            this.zipOptions()._setClassMap();\n        };\n    /**\n     * @return {?}\n     */\n    NzUploadComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            this.clearProgressTimer();\n        };\n    return NzUploadComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzUploadModule = /*@__PURE__*/ (function () {\n    function NzUploadModule() {\n    }\n    return NzUploadModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzMessageBaseService = /*@__PURE__*/ (function () {\n    function NzMessageBaseService(overlay$$1, containerClass, _idPrefix) {\n        if (_idPrefix === void 0) {\n            _idPrefix = '';\n        }\n        this._idPrefix = _idPrefix;\n        this._counter = 0;\n        this._container = overlay$$1.create().attach(new ComponentPortal(containerClass)).instance;\n    }\n    /**\n     * @param {?=} messageId\n     * @return {?}\n     */\n    NzMessageBaseService.prototype.remove = /**\n     * @param {?=} messageId\n     * @return {?}\n     */\n        function (messageId) {\n            if (messageId) {\n                this._container.removeMessage(messageId);\n            }\n            else {\n                this._container.removeMessageAll();\n            }\n        };\n    /**\n     * @param {?} message\n     * @param {?=} options\n     * @return {?}\n     */\n    NzMessageBaseService.prototype.createMessage = /**\n     * @param {?} message\n     * @param {?=} options\n     * @return {?}\n     */\n        function (message, options) {\n            // TODO: spread on literal has been disallow on latest proposal\n            var /** @type {?} */ resultMessage = __assign({}, message, {\n                messageId: this._generateMessageId(),\n                options: options,\n                createdAt: new Date()\n            });\n            this._container.createMessage(resultMessage);\n            return resultMessage;\n        };\n    /**\n     * @return {?}\n     */\n    NzMessageBaseService.prototype._generateMessageId = /**\n     * @return {?}\n     */\n        function () {\n            return this._idPrefix + this._counter++;\n        };\n    return NzMessageBaseService;\n}());\nvar NzMessageService = /*@__PURE__*/ (function (_super) {\n    __extends(NzMessageService, _super);\n    function NzMessageService(overlay$$1) {\n        return _super.call(this, overlay$$1, NzMessageContainerComponent, 'message-') || this;\n    }\n    // Shortcut methods\n    /**\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n    NzMessageService.prototype.success = /**\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n        function (content, options) {\n            return this.createMessage({ type: 'success', content: content }, options);\n        };\n    /**\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n    NzMessageService.prototype.error = /**\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n        function (content, options) {\n            return this.createMessage({ type: 'error', content: content }, options);\n        };\n    /**\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n    NzMessageService.prototype.info = /**\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n        function (content, options) {\n            return this.createMessage({ type: 'info', content: content }, options);\n        };\n    /**\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n    NzMessageService.prototype.warning = /**\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n        function (content, options) {\n            return this.createMessage({ type: 'warning', content: content }, options);\n        };\n    /**\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n    NzMessageService.prototype.loading = /**\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n        function (content, options) {\n            return this.createMessage({ type: 'loading', content: content }, options);\n        };\n    /**\n     * @param {?} type\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n    NzMessageService.prototype.create = /**\n     * @param {?} type\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n        function (type, content, options) {\n            return this.createMessage({ type: type, content: content }, options);\n        };\n    // For content with html\n    /**\n     * @param {?} html\n     * @param {?=} options\n     * @return {?}\n     */\n    NzMessageService.prototype.html = /**\n     * @param {?} html\n     * @param {?=} options\n     * @return {?}\n     */\n        function (html, options) {\n            return this.createMessage({ html: html }, options);\n        };\n    return NzMessageService;\n}(NzMessageBaseService));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NzNotificationService = /*@__PURE__*/ (function (_super) {\n    __extends(NzNotificationService, _super);\n    function NzNotificationService(overlay$$1) {\n        return _super.call(this, overlay$$1, NzNotificationContainerComponent, 'notification-') || this;\n    }\n    // Shortcut methods\n    /**\n     * @param {?} title\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n    NzNotificationService.prototype.success = /**\n     * @param {?} title\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n        function (title, content, options) {\n            return /** @type {?} */ (this.createMessage({ type: 'success', title: title, content: content }, options));\n        };\n    /**\n     * @param {?} title\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n    NzNotificationService.prototype.error = /**\n     * @param {?} title\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n        function (title, content, options) {\n            return /** @type {?} */ (this.createMessage({ type: 'error', title: title, content: content }, options));\n        };\n    /**\n     * @param {?} title\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n    NzNotificationService.prototype.info = /**\n     * @param {?} title\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n        function (title, content, options) {\n            return /** @type {?} */ (this.createMessage({ type: 'info', title: title, content: content }, options));\n        };\n    /**\n     * @param {?} title\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n    NzNotificationService.prototype.warning = /**\n     * @param {?} title\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n        function (title, content, options) {\n            return /** @type {?} */ (this.createMessage({ type: 'warning', title: title, content: content }, options));\n        };\n    /**\n     * @param {?} title\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n    NzNotificationService.prototype.blank = /**\n     * @param {?} title\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n        function (title, content, options) {\n            return /** @type {?} */ (this.createMessage({ type: 'blank', title: title, content: content }, options));\n        };\n    /**\n     * @param {?} type\n     * @param {?} title\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n    NzNotificationService.prototype.create = /**\n     * @param {?} type\n     * @param {?} title\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n        function (type, title, content, options) {\n            return /** @type {?} */ (this.createMessage({ type: type, title: title, content: content }, options));\n        };\n    // For content with html\n    /**\n     * @param {?} html\n     * @param {?=} options\n     * @return {?}\n     */\n    NzNotificationService.prototype.html = /**\n     * @param {?} html\n     * @param {?=} options\n     * @return {?}\n     */\n        function (html, options) {\n            return /** @type {?} */ (this.createMessage({ html: html }, options));\n        };\n    return NzNotificationService;\n}(NzMessageBaseService));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n// ---------------------------------------------------------\n// | Imports\n// ---------------------------------------------------------\nvar NgZorroAntdModule = /*@__PURE__*/ (function () {\n    function NgZorroAntdModule() {\n    }\n    /**\n     * @param {?=} options\n     * @return {?}\n     */\n    NgZorroAntdModule.forRoot = /**\n     * @param {?=} options\n     * @return {?}\n     */\n        function (options) {\n            return {\n                ngModule: NgZorroAntdModule,\n                providers: [\n                    NzNotificationService,\n                    NzMessageService,\n                    { provide: NZ_ROOT_CONFIG, useValue: options },\n                ]\n            };\n        };\n    return NgZorroAntdModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { NZ_LOGGER_STATE, NzGridModule, NzButtonModule, NzAlertModule, NzBadgeModule, NzCalendarModule, NzCascaderModule, NzCheckboxModule, NzDatePickerModule, NzFormModule, NzInputModule, NzInputNumberModule, NzMessageModule, NzModalModule, NzNotificationModule, NzPaginationModule, NzPopconfirmModule, NzPopoverModule, NzRadioModule, NzRateModule, NzSelectModule, NzSpinModule, NzProgressModule, NzSliderModule, NzSwitchModule, NzTableModule, NzTabsModule, NzTagModule, NzTimePickerModule, NzUtilModule, NzStepsModule, NzDropDownModule, NzMenuModule, NzBreadCrumbModule, NzLayoutModule, NzRootModule, NzCarouselModule, NzCardModule, NzCollapseModule, NzTimelineModule, NzToolTipModule, NzBackTopModule, NzAffixModule, NzAnchorModule, NzAvatarModule, NzTransferModule, NzUploadModule, NzRowComponent, NzColComponent, NzColDirective, NzButtonGroupComponent, NzButtonComponent, NzAlertComponent, NzBadgeComponent, NzCalendarComponent, NzCascaderComponent, NzCheckboxGroupComponent, NzCheckboxComponent, NzDatePickerComponent, NzRangePickerComponent, NzFormControlComponent, NzFormExplainComponent, NzFormExtraDirective, NzFormItemRequiredDirective, NzFormItemDirective, NzFormLabelDirective, NzFormSplitDirective, NzFormTextDirective, NzFormComponent, NzInputGroupComponent, NzInputComponent, NzInputDirectiveComponent, NzMessageContainerComponent, NzMessageComponent, NzConfirmComponent, NzModalComponent, NzNotificationContainerComponent, NzNotificationComponent, NzPaginationComponent, NzPopconfirmComponent, NzPopconfirmDirective, NzPopoverComponent, NzPopoverDirective, NzRadioButtonComponent, NzRadioGroupComponent, NzRadioComponent, NzRateComponent, NzOptionComponent, NzSelectComponent, NzSpinComponent, NzProgressComponent, NzSliderComponent, NzSliderHandleComponent, NzSliderMarksComponent, NzSliderStepComponent, NzSliderTrackComponent, NzSwitchComponent, NzThDirective, NzRowIndentComponent, NzTableFilterComponent, NzTableComponent, NzTheadDirective, NzTableSortComponent, NzRowExpandIconComponent, NzTableDividerDirective, NzTbodyTrDirective, NzTbodyDirective, NzTdDirective, NzTabSetComponent, NzTabsNavComponent, NzTabLabelDirective, NzTabBodyComponent, NzTabComponent, NzCheckableTagComponent, NzTagComponent, NzTimePickerInnerComponent, NzTimePickerComponent, NzStepComponent, NzStepsComponent, NzDropDownComponent, NzDropDownDirective, NzDropDownButtonComponent, NzMenuDividerComponent, NzMenuGroupComponent, NzMenuItemComponent, NzMenuComponent, NzSubMenuComponent, NzBreadCrumbItemComponent, NzBreadCrumbComponent, NzContentComponent, NzFooterComponent, NzHeaderComponent, NzLayoutComponent, NzCarouselContentDirective, NzCarouselComponent, NzCardGridDirective, NzCardComponent, NzCollapseComponent, NzCollapsesetComponent, NzTimelineItemComponent, NzTimelineComponent, NzToolTipComponent, NzTooltipDirective, NzBackTopComponent, NzAffixComponent, NzAnchorLinkComponent, NzAnchorComponent, NzAvatarComponent, NzTransferComponent, NzUploadComponent, NzNotificationService, NzMessageService, NzModalService, NzModalSubject, NZ_MESSAGE_CONFIG, NZ_NOTIFICATION_CONFIG, NZ_ROOT_CONFIG, NgZorroAntdModule, NzLocaleModule, NZ_LOCALE, NzLocaleService, zhCN, enUS, trTR, zhTW, ruRU, NZ_COLLAPSE_DIRECTIVES as ɵg, dropDownAnimation as ɵv, fadeAnimation as ɵt, tagAnimation as ɵw, NzScrollService as ɵbc, SCROLL_SERVICE_PROVIDER as ɵbe, SCROLL_SERVICE_PROVIDER_FACTORY as ɵbd, NzInputNumberComponent as ɵy, NzSiderComponent as ɵi, NzLocale as ɵs, NZ_LOCALE_SERVICE_PROVIDER as ɵb, NZ_LOCALE_SERVICE_PROVIDER_FACTORY as ɵa, NzTranslatePipe as ɵr, NZ_MESSAGE_DEFAULT_CONFIG as ɵl, NZ_MESSAGE_DEFAULT_CONFIG_PROVIDER as ɵm, NzMessageBaseService as ɵj, NZ_NOTIFICATION_DEFAULT_CONFIG as ɵo, NZ_NOTIFICATION_DEFAULT_CONFIG_PROVIDER as ɵp, createNzRootInitializer as ɵq, NzRootStyleComponent as ɵbb, NzRootComponent as ɵba, NzOptionPipe as ɵu, NzSliderService as ɵz, NzTabsInkBarDirective as ɵh, NzTransferListComponent as ɵbf, NzTransferSearchComponent as ɵbg, NzUploadBtnComponent as ɵbh, NzUploadListComponent as ɵbi, LoggerModule as ɵc, LOGGER_SERVICE_PROVIDER as ɵf, LOGGER_SERVICE_PROVIDER_FACTORY as ɵe, LoggerService as ɵd, NzDatePipe as ɵx };\n//# sourceMappingURL=antd.js.map\n",null]}