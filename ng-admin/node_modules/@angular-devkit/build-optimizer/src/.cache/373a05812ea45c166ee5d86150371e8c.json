{"remainingRequest":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\ngx-tinymce\\src\\script.service.js","dependencies":[{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\ngx-tinymce\\src\\script.service.js","mtime":1514030187000},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Subject } from 'rxjs/Subject';\nvar ScriptService = /*@__PURE__*/ (function () {\n    function ScriptService(doc) {\n        this.doc = doc;\n        this.loaded = false;\n        this.list = {};\n        this.emitter = new Subject();\n    }\n    ScriptService.prototype.getChangeEmitter = function () {\n        return this.emitter;\n    };\n    ScriptService.prototype.load = function (path) {\n        var _this = this;\n        if (this.loaded) {\n            return this;\n        }\n        this.loaded = true;\n        var promises = [];\n        [path].forEach(function (script) { return promises.push(_this.loadScript(script)); });\n        Promise.all(promises).then(function (res) {\n            _this.emitter.next(true);\n        });\n        return this;\n    };\n    ScriptService.prototype.loadScript = function (path) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.list[path] === true) {\n                resolve({\n                    path: path,\n                    loaded: true,\n                    status: 'Loaded'\n                });\n                return;\n            }\n            _this.list[path] = true;\n            var node = _this.doc.createElement('script');\n            node.type = 'text/javascript';\n            node.src = path;\n            node.charset = 'utf-8';\n            if (node.readyState) {\n                // IE\n                node.onreadystatechange = function () {\n                    if (node.readyState === 'loaded' || node.readyState === 'complete') {\n                        node.onreadystatechange = null;\n                        resolve({\n                            path: path,\n                            loaded: true,\n                            status: 'Loaded'\n                        });\n                    }\n                };\n            }\n            else {\n                node.onload = function () {\n                    resolve({\n                        path: path,\n                        loaded: true,\n                        status: 'Loaded'\n                    });\n                };\n            }\n            node.onerror = function (error) {\n                return resolve({\n                    path: path,\n                    loaded: false,\n                    status: 'Loaded'\n                });\n            };\n            _this.doc.getElementsByTagName('head')[0].appendChild(node);\n        });\n    };\n    return ScriptService;\n}());\nexport { ScriptService };\n//# sourceMappingURL=script.service.js.map \n",null]}