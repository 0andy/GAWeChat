{"remainingRequest":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@delon\\auth\\token\\jwt\\jwt.model.js","dependencies":[{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@delon\\auth\\token\\jwt\\jwt.model.js","mtime":1515671330000},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"D:\\mygit\\HCWeChat\\ng-admin\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { urlBase64Decode } from './jwt.helper';\r\nvar JWTTokenModel = /*@__PURE__*/ (function () {\r\n    function JWTTokenModel() {\r\n    }\r\n    Object.defineProperty(JWTTokenModel.prototype, \"payload\", {\r\n        /**\r\n         * 获取载荷信息\r\n         */\r\n        get: /**\r\n             * 获取载荷信息\r\n             */ function () {\r\n            var parts = this.token.split('.');\r\n            if (parts.length !== 3)\r\n                throw new Error('JWT must have 3 parts');\r\n            var decoded = urlBase64Decode(parts[1]);\r\n            if (!decoded)\r\n                throw new Error('Cannot decode the token');\r\n            return JSON.parse(decoded);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * 检查Token是否过期，`payload` 必须包含 `exp` 时有效\r\n     *\r\n     * @param {number} [offsetSeconds=0] 偏移量\r\n     */\r\n    /**\r\n         * 检查Token是否过期，`payload` 必须包含 `exp` 时有效\r\n         *\r\n         * @param {number} [offsetSeconds=0] 偏移量\r\n         */\r\n    JWTTokenModel.prototype.isExpired = /**\r\n         * 检查Token是否过期，`payload` 必须包含 `exp` 时有效\r\n         *\r\n         * @param {number} [offsetSeconds=0] 偏移量\r\n         */\r\n        function (offsetSeconds) {\r\n            if (offsetSeconds === void 0) {\r\n                offsetSeconds = 0;\r\n            }\r\n            var decoded = this.payload;\r\n            if (!decoded.hasOwnProperty('exp'))\r\n                return null;\r\n            var date = new Date(0);\r\n            date.setUTCSeconds(decoded.exp);\r\n            if (date === null)\r\n                return false;\r\n            return !(date.valueOf() > (new Date().valueOf() + (offsetSeconds * 1000)));\r\n        };\r\n    return JWTTokenModel;\r\n}());\r\nexport { JWTTokenModel };\r\n//# sourceMappingURL=jwt.model.js.map \r\n",null]}